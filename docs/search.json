[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Research Methods Computer Practicals",
    "section": "",
    "text": "Week 1 : Descriptive Statistics, Data Processing and R\n\ntoc: true toc-depth: 2"
  },
  {
    "objectID": "index.html#the-dataset",
    "href": "index.html#the-dataset",
    "title": "Week 1 : Descriptive Statistics, Data Processing and R",
    "section": "",
    "text": "We will be exploring data that was collected as part of the ‘Many Labs 3’ project (Ebersole et al., 2016). This collected data from university students in the USA across a wide range of cognitive, behavioural and demographic measures. We will be exploring a subset of this dataset concerning individual differences in personality measures. The experimenters collected data to compute the ‘Big Five’ personality factors from each participant. Wikipedia describes the factors as:\n\nConscientiousness (efficient/organized vs. extravagant/careless)\nAgreeableness (friendly/compassionate vs. critical/rational)\nNeuroticism (sensitive/nervous vs. resilient/confident)\nOpenness to experience (inventive/curious vs. consistent/cautious)\nExtraversion (outgoing/energetic vs. solitary/reserved)\n\nThis is a very simple (Gosling et al., 2003) and influential model that is used to summarise personality differences. Though it is popular, some researchers have criticised big five factors for conceptual and methodological reasons (Block, 1995). Read around and form your own view!\nThe data contains the average of two questions about each factor in which participants responded to questions using a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. For example, someone with an extraversion score of 2 is more introverted that someone with an extraversion score of 5."
  },
  {
    "objectID": "index.html#the-challenge",
    "href": "index.html#the-challenge",
    "title": "Week 1 : Descriptive Statistics, Data Processing and R",
    "section": "",
    "text": "We have data from a sample of students in a big data table. This raw data needs to be summarised and visualised so that we can turn this massive block of numbers into something intuitive.\nBy computing a range of key features from the data we can generate a concise overview of the main characteristics of the data.\n\n\n\n\n\n\n\nCheck Your Understanding 1\n\n\n\nTry your best with this question and don’t forget to speak with your tutor if you get stuck!\n\nQuestionHintSolution\n\n\nYou have reproduced the descriptive statistics for the big 5 personality factors. Now you can do the same for some of the other factors in Table 2 of section 3.5 in Ebersole et al. (2016).\nSpecifically - try and compute the mean and standard deviations for:\n\nSelf Esteem (see section 3.5.1 for details)\nPerceived Stress (see section 3.5.4)\nNeed for cognition (see section 3.5.5) Can you find variables (columns) that correspond to these factors?\n\nNote: Open datasets sometimes use shorthand for variable names rather than the names used in the manuscript. This is not ideal but does happen in practice! we should be ready take a little time to explore and understand a new dataset when working with it.\n\n\nIn this case the variables in the dataset to use are:\nIn Manuscript –&gt; In Jamovi Self Esteem –&gt; ‘SelfEsteem’ Perceived Stress –&gt; ‘Stress’ Need for cognition –&gt; ‘NFC’\nTalk to your tutor if you’re getting stuck.\n\n\nYou should be able to reproduce the following table. Verify that the computed Mean and Standard Deviations match those published in table 2 of Ebersole et al (2016)"
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "This week we will explore how to use Jamovi to compute and visualise descriptive statistics from a dataset. This will include some revision on Jamovi from last semester and an introduction on how we can use the R coding language to simplify complex data processing.\n\n\n\n\n\n\n\n\n\n\nQuantitative Methods\n\n\n\n\n\nMeasures of central tendency (Mean and Median)\n\n\n\nMeasures of dispersion and spread (Standard Deviation and Interquartile Range)\n\n\n\nMeasures of skew and normality\n\n\n\nRecognising different types of distribution\n\n\n\n\n\n\n\n\n\n\n\nData Skills\n\n\n\n\n\nExploring and cleaning datasets Jamovi\n\n\n\nComputing descriptive statistics in Jamovi\n\n\n\nComputing descriptive plots in Jamovi\n\n\n\n\n\n\n\n\n\n\n\nOpen Science\n\n\n\n\n\nWorking with openly available research data\n\n\n\n\n\n\nWe will be exploring data that was collected as part of the ‘Many Labs 3’ project (Ebersole et al. 2016). This collected data from university students in the USA across a wide range of cognitive, behavioural and demographic measures. We will be exploring a subset of this dataset concerning individual differences in personality measures. The experimenters collected data to compute the ‘Big Five’ personality factors from each participant. Wikipedia describes the factors as:\n\nConscientiousness (efficient/organized vs. extravagant/careless)\nAgreeableness (friendly/compassionate vs. critical/rational)\nNeuroticism (sensitive/nervous vs. resilient/confident)\nOpenness to experience (inventive/curious vs. consistent/cautious)\nExtraversion (outgoing/energetic vs. solitary/reserved)\n\nThis is a very simple (Gosling, Rentfrow, and Swann 2003) and influential model that is used to summarise personality differences. Though it is popular, some researchers have criticised big five factors for conceptual and methodological reasons (Block 1995). Read around and form your own view!\nThe data contains the average of two questions about each factor in which participants responded to questions using a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. For example, someone with an extraversion score of 2 is more introverted that someone with an extraversion score of 5.\n\n\n\nWe have data from a sample of students in a big data table. This raw data needs to be summarised and visualised so that we can turn this massive block of numbers into something intuitive.\nWe can generate a concise overview of the main characteristics of the data by computing and visualising few key features from the data.\n\n\n\n\n\n\n\n\n\n\nRevision from RM-A\n\n\n\nThis computer practical will have some revision from RM-A, please check your notes from RM-A for help with loading data and handling variables.\nIf you aren’t familiar with Jamovi, or would like a refresher - please take a quick look at the following topics in the Jamovi user guide\n\nFirst steps in Jamovi\nAnalyses\nThe spreadsheet\n\nPlease ask your tutor for help in the computer practical sessions if you need any assistance.\n\n\n\n\n\n\n\n\nKey step\n\n\n\nLet’s start by loading the dataset into Jamovi. You can download the file ML3AllSites_RMB.csv from canvas.\n\n\n\nThis is the original dataset provided by the authors of the paper! It is a massive dataset - take a moment to get familiar with it by answering the following questions.\nSome of the questions will require you to run a descriptive statistics analysis on the age variable. Run what ever you need to explore the data and the questions.\n\n\n\n\n\n\n Data Skills - How many participants are included in the dataset?\n\n\n\n\n\nThere are 2402 participants in total - this is the number of rows in the dataset\n\n\n\n\n\n\n\n\n\n Data Skills - Is the dataset complete? do we have all information from everyone?\n\n\n\n\n\nNo, unfortunately some data is missing from some participants. You can see empty cells in quite a few places across the dataset. This means that some analyses may have an N of less than 2402 for analyses using some of these variables.\n\n\n\n\n\n\n\n\n\n Data Skills - Take a look at the configuration of the Age variable. Is it the correct type?\n\n\n\n\n\nJamovi has to make an educated guess at what type of data is included in each column. Looks like it has correctly set the age variable to be ‘Continuous’.\n\n\n\n\n\n\n\n\n\n Data Skills - How many participants do not have age information?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu.\nThe N for the age descriptives is 2402 and there are 0 missing participants. This is a large sample and there is age information for everyone.\n\n\n\n\n\n\n\n\n\n\n Data Skills - What is the average and standard deviation of the age of the participants?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu.\nThe mean age is 19.3 years, typical for a student population. The standard deviation is 3.81.\nThis means that a participant who is 19.3+3.81 = 23.11 years old would be one standard deviation above the average age of the sample.\n\n\n\n\n\n\n\n\n\n\n Data Skills - Do you think all the information in the age variable is accurate?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu. Try checking the box to show the 5 most extreme values in the dataset under the ‘Statistics -&gt; Outliers’ submenu.\nTake a close look at the variable and its descriptive statistics.\nThe youngest age in the dataset is -2 and the oldest age is 149! neither of these can be true and are probably typos (or jokes) made during data collection. Some other values are unusual but not impossible - the second youngest student is 13. We do not know what has happened during data collection to lead to this as this is not our dataset. We should be careful about interpreting the mean whilst these variables are included…\n\n\n\n\nThis process of exploring and understanding your data is a critical first step when working on a new analysis. Real data is rarely in perfect condition - we have to take some time and apply common sense to understand the data and what challenges there might be when analysing it.\nIf we do identify issues, such are large amounts of missing data, incorrect data types or mistakes in data entry, we can normally fix them - but only if they’ve been spotted! If we assume our data is perfect and go straight to the analysis then we could end up including a 149 year old student in our sample…\n\n\n\nIts probably not a good idea to include the data from the participants with impossible ages in our analysis. One simple step we can take is just to remove those rows from our analysis.\n\n\n\n\n\n\nData Skills - removing rows from a dataset\n\n\n\nRemove the two participants with impossible ages, you can use the extreme values table in the ‘Descriptives’ output to help find the row numbers. You can remove a row in Jamovi by right clicking on the row number (far left of the Data view) and clicking ‘Delete Row’.\n\nThis will not change the original data file (unless you export the data back out again..), it will only affect the view of the data loaded into Jamovi. If you make a mistake you can simply load the original file and start again.\nNotice that the bottom of the data viewer tells you how many rows have been deleted in that dataset.\n\n\n\n\n\n\n\n\nKey step\n\n\n\nNow you can recompute the descriptive statistics of your age variable and see what has changed.\n\n\n\nThe mean is pretty much the same - still 19.3 - but the standard deviation is much smaller now. It has reduced from 3.81 to 2.70. That is a close to 25% reduction in the estimate of the variability of this data - big difference. Including outliers like these can have a large impact on our analyses.\n\n\n\n\n\n\n Critical thinking - Are you happy with the data in the age variable now?\n\n\n\n\n\nTough question! take a look at the Minimum value - we still have one participant who is 13 years old. Whilst this is more likely than finding a -2 or 149 year old student, it is still extremely unlikely. It is harder to make a judgement for this participant than the others. The first two participants had impossible ages, whereas a 13 year old student is just very unlikely. Sometimes we have to make a judgement call.\nLet’s delete row 709 to remove this participant as well.\nThe recomputed descriptive statistics now has an N=2399. Removing the 13 year old hasn’t changed our mean or standard deviation estimates very much - indicating that it was less important to remove this data point than the first two.\nThe youngest participant is now 16 which is more realistic (though still very impressive for that 16 year old!).\n\n\n\nThis process can be intricate and involves a lot of clicking in Jamovi - it would be easy to make a mistake and not notice that something has gone wrong. We’ll explore some faster and more transparent ways to do this using R code during this course.\n\n\n\n\nOk, let’s move on to personality factors. As we said at the top, the big five factors are recorded on a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. So someone with an Extraversion score or 6 might be very outgoing where as someone with a score of 1 would be more of an introvert.\n\n\n\n\n\n\nKey step\n\n\n\nCompute the descriptive statistics for the big 5 personality factors.\nTake some time to consider the data quality - use the questions we answered with age as a guide for what to think about.\n\n\n\nNotice that we have a few missing data values in these variables. Jamovi will remove these from any analyses so they shouldn’t affect our descriptive statistics.\n\n\n\n\n\n\n Critical thinking - Are you happy to use the data in the big 5 personality factors?\n\n\n\n\n\nYes, these look reasonable. The data range matches what we would expect from the rating scales (values between 1 and 7) and there is only a small amount of missing data in each of the five variables.\nWe don’t need to do any further data cleaning based on these descriptive statistics.\n\n\n\n\n\n\n\n\n\n\nCheck Your Understanding 1\n\n\n\nTry your best with this question and don’t forget to speak with your tutor if you get stuck!\n\nQuestionHintSolution\n\n\nYou have reproduced the descriptive statistics for the big 5 personality factors. Now you can do the same for some of the other factors in Table 2 of section 3.5 in Ebersole et al. (2016).\nSpecifically - try and compute the mean and standard deviations for the following factors (Descriptions of the factors are the the cited section of Ebersole et al. (2016)):\n\nSelf Esteem (see section 3.5.1)\nDaily Mood (see section 3.5.3)\nNeed for cognition (see section 3.5.5)\n\nCan you find variables (columns) that correspond to these factors?\nNote: Open datasets sometimes use shorthand for variable names rather than the names used in the manuscript. This is not ideal but does happen in practice! we should be ready take a little time to explore and understand a new dataset when working with it.\n\n\nIn this case the variables in the dataset to use are:\n\n\n\nIn Manuscript\nIn Jamovi\n\n\n\n\nSelf Esteem\n‘SelfEsteem’\n\n\nDaily Mood.\n‘Mood’\n\n\nNeed for cognition\n‘NFC’\n\n\n\nTalk to your tutor if you’re getting stuck.\n\n\nYou should be able to reproduce the following table. Verify that the computed Mean and Standard Deviations match those published in table 2 of Ebersole et al (2016)\n\nThe final mean values are very close to the values in Ebersole et al. (2016) - but not identical. Looks like the original paper kept in all the data that had missing or unusual age values.\n\n\n\n\n\nNext, let’s think about the distributions of these variables. Its great to think about summarising a dataset with its mean value, but this doesn’t tell us about the wider distribution.\n\n\n\n\nNext we’ll have a look at computing histograms from this data. Remember that histograms divide the data range into intervals called bins. The choice of bin width and number of bins can affect the appearance and interpretation of the histogram. Most of the time we can use the automatic bin definitions provided by Jamovi.\nWe can use Histograms to explore a few key factors of the wider data distributions that are hard to see from the descriptive statistics tables.\n\nShape: The shape of the histogram can reveal the distribution pattern of the data, such as normal distribution, skewness, or bimodality.\nOutliers: Histograms can help identify outliers or unusual data points that fall outside the general pattern.\n\nJamovi makes it very simple to compute a histogram. Open the ‘Plots’ sub-menu of the descriptive statistics tab and select the ‘Histogram’ checkbox.\n\n\n\n\n\n\nKey step\n\n\n\nCompute a histogram of the participant ages\n\n\n\nThe descriptives tables give us a numerical summary of the data - but this can be hard to build an intuitive understanding of the dataset. A histogram gives us something immediately interpretable on a more ‘human’ level. Have a think about the following questions.\n\n\n\n\n\n\n Data Skills - What is the average age of the pariticpants in this dataset?\n\n\n\n\n\nWe can see that the most common ages are clustered around the late teenage years and early 20s. We can’t tell the exact mean from the histogram alone - we need to compute the descriptives table for this - but histograms are good to get a quick ‘sense’ of the data.\n\n\n\n\n\n\n\n\n\n Data Skills - Do the ages look normally distributed?\n\n\n\n\n\nThere is a long tail to this distribution with a very small number of participants in their 30s, 40s and 50s. This is a strong positive skew and likely indicates that the data are not normally distributed.\nThis would be hard to tell from the descriptives table alone.\nOverall, this is a good match for what we would expect from a student population at a large university.\n\n\n\nWe can get an alternative perspective by visualising our data using a ‘Box Plot’.\n\n\n\n\n\n\nKey step\n\n\n\nCompute a Box plot of the participant ages\n\n\n\nThe boxplot visualises the median and interquartile range (25th to 75th percentile) of the data, as well as highlighting outliers. This gives us less resolution around the middle of the distribution close to the median - but does give a much clearer view of the long tail in the ages of the student data sample.\n\n\n\n\n\n\n Data Skills - How old is the oldest participant in the dataset??\n\n\n\n\n\nThe most extreme outliers in the dataset are labelled with their row ID in the boxplot. The largest age value is in row 1081 - it looks like this is around 55 in the boxplot.\nWe can check the corresponding row in the data table to get some more precision. This tells us that the oldest participant is exactly 54 years old.\n\n\n\n\n\n\n\n\n\n\nCheck Your Understanding 2\n\n\n\nTry your best with this question and don’t forget to speak with your tutor if you get stuck!\n\nQuestionHintSolution\n\n\nCompute histograms and/or boxplots for the big-5 personality factors and take some notes their distributions. Think about the following questions for each factor:\n\nIs the distribution symmetric?\nIf not, is there a positive or a negative skew?\nAre there any outliers?\n\nWrite some quick notes on your answers - we’ll use these again in the next section!\n\n\nIt might be easiest to do this one factor at a time to avoid being swamped with figures!\nCreate the figure for a single factor, make some notes and make the next figure with the next factor. You can consider saving the figure into a notebook or document if you want to make a more controlled comparison.\n\n\nHere are my notes about each distribution:\n\nOpenness, this does not look like a normal distribution - there is a negative skew in the data.\nConscientiousness, this is definitely not a normal distribution - there is a strong negative skew.\nExtraversion, this is close to being a normal distribution - perhaps a very slight negative skew.\nAgreeableness, this does not look like a normal distribution - there is a negative skew in the data.\nNeuroticism, this does not look like a normal distribution - there is a positive skew in the data.\n\nNone of the factors have obvious outliers.\n\n\n\n\n\n\n\n\nAs a final step, we can see if our intuitions about the distribution of big-5 personality factors match with more formal statistics measures checking for normal distributions and skewness.\n\n\n\n\n\n\nKey step\n\n\n\nCompute statistics Shapero-Wilk’s test for normality and for ‘Skewness’. You can add both of these tests from the ‘Statistics’ sub-menu of the Descriptives analysis.\n\n\n\n\n\nThe Shapiro-Wilk test evaluates whether a sample comes from a normally distributed population. It returns 2 values:\n\n‘W’ The W statistic measures how well the data conforms to a normal distribution. It ranges from 0 to 1 where values close to 1 indicate the data is normally distributed.\n‘p’ is a p-value indicating the probability that we could see a value of W at least as large as the one we have measured if the data really were normally distributed. Typically, we would say that the data are not normally distributed if p is less than or equal to 0.05.\n\n\n\n\n\n\n\n Data Skills - Do our notes from the histograms match the Shapiro-Wilk statistics?\n\n\n\n\n\nYes, If we look at the W statistics, then we see that Extraversion has the highest value indicating that it has the most ‘normal’ data distribution whilst the other four factors are similar. This matches what we saw with the histograms.\nThe p-values from the formal hypothesis test indicate that none of the 5 factors have normal distributions. We couldn’t tell this from our informal evaulation of the histograms and box plots.\n\n\n\n\n\n\nThe skewness metric returns a number close to zero if the data are symmetrical around zero, and a number close to +1 or -1 if the data are skewed. The sign of the skewness value indicates whether there is a positive or a negative skew.\n\n\n\n\n\n\n Data Skills - Do our notes from the histograms match the skewness statistic?\n\n\n\n\n\nYes, its very close. We can see that ‘Extraversion’ has the least skew with a Skewness metric very close to zero (-0.0714). In contrast, ‘Conscientiousness’ has the most skew. Its value of ‘-0.656’ indicates a very substantial negative skewness in the distribution.\nOpenness and Agreeableness have moderate negative skews, whilst Neuroticism has a moderate positive skew.\n\n\n\n\n\n\n\nIn this session we have gone through the process of exploring a dataset from a published scientific article. We have computed a range of descriptive statistics and used histograms and boxplots to visualise the dataset.\nIt is common for publicly available data to contain little mistakes and issues. We need to go through a process like this with every new dataset and it should be like second nature by the end of this module. Remember to use common sense and practical thinking to identify issues and think about possible solutions.\nRemember this process when collecting your own data. Think carefully about how you can avoid typos and mistakes when collecting a dataset. It can save you and your collaborators a lot of time in future!\n\n\n\n\n\nBlock, Jack. 1995. “A Contrarian View of the Five-Factor Approach to Personality Description.” Psychological Bulletin 117 (2): 187–215. https://doi.org/10.1037/0033-2909.117.2.187.\n\n\nEbersole, Charles R., Olivia E. Atherton, Aimee L. Belanger, Hayley M. Skulborstad, Jill M. Allen, Jonathan B. Banks, Erica Baranski, et al. 2016. “Many Labs 3: Evaluating Participant Pool Quality Across the Academic Semester via Replication.” Journal of Experimental Social Psychology 67: 68–82. https://doi.org/https://doi.org/10.1016/j.jesp.2015.10.012.\n\n\nGosling, Samuel D, Peter J Rentfrow, and William B Swann. 2003. “A Very Brief Measure of the Big-Five Personality Domains.” Journal of Research in Personality 37 (6): 504–28. https://doi.org/10.1016/s0092-6566(03)00046-1.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#the-dataset",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#the-dataset",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "We will be exploring data that was collected as part of the ‘Many Labs 3’ project (Ebersole et al. 2016). This collected data from university students in the USA across a wide range of cognitive, behavioural and demographic measures. We will be exploring a subset of this dataset concerning individual differences in personality measures. The experimenters collected data to compute the ‘Big Five’ personality factors from each participant. Wikipedia describes the factors as:\n\nConscientiousness (efficient/organized vs. extravagant/careless)\nAgreeableness (friendly/compassionate vs. critical/rational)\nNeuroticism (sensitive/nervous vs. resilient/confident)\nOpenness to experience (inventive/curious vs. consistent/cautious)\nExtraversion (outgoing/energetic vs. solitary/reserved)\n\nThis is a very simple (Gosling, Rentfrow, and Swann 2003) and influential model that is used to summarise personality differences. Though it is popular, some researchers have criticised big five factors for conceptual and methodological reasons (Block 1995). Read around and form your own view!\nThe data contains the average of two questions about each factor in which participants responded to questions using a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. For example, someone with an extraversion score of 2 is more introverted that someone with an extraversion score of 5.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#the-challenge",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#the-challenge",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "We have data from a sample of students in a big data table. This raw data needs to be summarised and visualised so that we can turn this massive block of numbers into something intuitive.\nWe can generate a concise overview of the main characteristics of the data by computing and visualising few key features from the data.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction",
    "section": "",
    "text": "Introduction\nThis is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "Summary",
    "section": "",
    "text": "Summary\nIn summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#research-methods-b",
    "href": "index.html#research-methods-b",
    "title": "Research Methods Computer Practicals",
    "section": "",
    "text": "Week 1 : Descriptive Statistics, Data Processing and R\n\ntoc: true toc-depth: 2"
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#install-the-rj-add-on-in-jamovi",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#install-the-rj-add-on-in-jamovi",
    "title": "Week 1 : Descriptive Statistics, Data Processing and R",
    "section": "",
    "text": "Next you should install the Rj Add-On using this guide for installing Jamovi modules. Once installed you should have a new button on the Ribbon menu at the top of Jamovi…\n\nClick on this and select ‘Rj Editor’ to open a window in which we can write R code! Click on the small cog icon and make sure that ‘Output’ is set to ‘Show code and output’.\n\nWe can use the left-hand window, named Rj editor, to write commands, using the R language. These are the straightforward text commands that tell the computer a series of steps that we wanted to carry out. These commands can be edited and rerun as many times as we need, they can even be shared with collaborators and included as part of scientific publication.\nThis is a very powerful tool once we have a written set of instructions to work with rather than individually clicking through instructions. Though it takes a bit longer to write the commands, our analysis is much more transparent and reproducible once it is done.\nThe outputs of the analysis defined in the Rj editor appear on the right-hand side of the Jamovi window as usual. To check this out, let’s explore using or as a calculator.\n\n\n\n\n\n\nData Skills - R as a calculator\n\n\n\nTry typing a set of sums or equations into the Rj editor. Include one sum on each line and include as many as you like. When you’re ready, you can tell RJ to run the commands by clicking on the green triangle in the top right corner of the RJ editor. This will automatically compute. All of the sums you to find and print the results out in the right hand side window. see the example below.\nYou can use the following symbols to define your sums.\n\n\n\nSymbol\nOperation\n\n\n\n\n+\nAdd\n\n\n-\nSubtract\n\n\n*\nMultiply\n\n\n/\nDivide"
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#functions-and-variables",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#functions-and-variables",
    "title": "Week 1 : Descriptive Statistics, Data Processing and R",
    "section": "",
    "text": "Notice that the one of the equations in my example is a bit different to the others. The final example uses a function called sqrt as a shortcut to compute the square root of the number nine.\n\n\n\n\n\n\nDefinition of a function\n\n\n\nFunctions are used to perform specific, predefined tasks, such as calculations, data transformations, or visualization. You can think of it as a “black box” that takes in a value, performs some internal calculation, and returns the result.\n\n\nThe sqrt function calculates the square root of a given number x.In R code, this looks something like this:\nsqrt(x)\nwith the ‘x’ replaced by any number. For example, we could compute the square root of 36 using the following command.\nsqrt(36)\nAdd this line to your Rj editor and check the result..\nMany functions, take inputs contained in parentheses written after the name of the function. These inputs are sometimes known as the arguments of a function. In the last example, 36 is an argument for the function sqrt.\nSometimes functions take several arguments, and the arguments themselves can sometimes have specific names. For example.\nround(12.345, digits = 0)\nwill round the value x to a whole number with zero digits after the decimal point. Where as\nround(12.345, digits = 2)\nwould round the same number to preserve 2 digits after the decimal point. Try running these examples in Rj with a range of different numbers to get a sense of how it works.\nOften, we don’t just want to see the result of some maths or a function call, we want to store the result to use again later. For this, we want to use variables. For example, here we store the result of a calculator sum in a variable named ‘y’\ny &lt;- 2 + 2\nIf you run this in Rj, you’ll notice that we no longer get the number 4 printed to the screen. This is as the output is now caught and stored rather than printed out. If we still want to see what is contained in y, we can use another helpful function named print.\ny &lt;- 2 + 2\nprint(y)\nWill now also display the content of y.\n\n\n\n\n\n\nDefinition of a variable\n\n\n\nA variable is an object that provides a labelled space to store information. The &lt;- or = symbols indicate that we’re assigning some information to a variable (the two symbols behave the same way, you could see either).\nCrucially, the information on the right hand side is assigned to a variable with the name from the left hand side.\n\n\nA single analysis might have several lines of code that create, store and reuse a several different variables with several different functions. For example:\n\n\n\n\n\n\n\n\nCheck Your Understanding 2\n\n\n\n\nQuestionHintSolution\n\n\nWhat does this R code do? what is the value of x, y and z?\n x &lt;- 10 + 10\n y &lt;- sqrt(16)\n z &lt;- x / y\n\n\nTry copying out and running the code in Rj.\nYou can add some print functions to see the value of the intermediate variables x and y as well. Try adding print(x) on the line immediately after x is defined.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final answers:\nx is 20 and y is 4, so z = 20 / 4 which is 5.\n\n\n\n\n\n\n\nRj has a special feature that the data loaded into our spreadsheet is always contained in a special variable named data. We can refer to this data variable to view and run analyses on our dataset."
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#hint-1",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#hint-1",
    "title": "Week 1 : Descriptive Statistics, Data Processing and R",
    "section": "",
    "text": "Try copying out and running the code in Rj.\nYou can add some ‘print’ functions to see the value of the intermediate variables x and y as well. Try adding ‘print(x)’ on the line immediately after x is defined.\nTalk to your tutor if you’re getting stuck."
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#solution-1",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#solution-1",
    "title": "Week 1 : Descriptive Statistics, Data Processing and R",
    "section": "",
    "text": "The final answer is z = 5!\nx is 20 and y is 4, so z = 20 / 4 which is 5."
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#compute-descriptive-statistics-using-r",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#compute-descriptive-statistics-using-r",
    "title": "Week 1 : Descriptive Statistics, Data Processing and R",
    "section": "",
    "text": "Ok, back to statistics!\nHow can we use our new R skills to compute statistics?\nhe trick is to understand that all the analyses in Jamovi are actually carried out by functions in R. Each analysis we can select from the top ribbon in Jamovi corresponds to a function that can be called in the code. Similarly, all of the options that we select in the analysis, dialogue boxes, correspond to arguments for that function. Let’s take a look in practice.\nTo help understand this Jamovi provides an “R Syntax Mode”, in this mode, Jamovi produces equivalent R code for each analysis. To change to syntax mode, select the application menu (⋮) at the top right of Jamovi, and check the Syntax mode checkbox there.\n\n\n\n\n\n\nKey step\n\n\n\nWith syntax mode on, compute the descriptive statistics for the big five personality factors again.\n\n\nThe outputs should look like this:\n\nNotice that some R code has appeared at the top of the output table. This is relatively complex compared to our previous functions like print or sqrt. Let’s break it down a bit.\n\n\n\n\n\n\nData Skills - Understanding the descriptives function\n\n\n\nThis is the code that Jamovi’s syntax mode will produce (with a little formatting to make the appearance simpler). Take a look through each part to understand what it does. Click the number in the annotation to highlight the corresponding part of the code.\n1jmv::descriptives(\n2    data = data,\n3    vars = vars(Openness, Conscientiousness, Extraversion, Agreeableness, Neuroticism)\n    )\n\n1\n\nThis is the name of the function that will do the computation for us. Everything contained within these parentheses are known as arguments, or inputs, for the function\n\n2\n\nThe first input is named data and is assigned to be the special data variable that contains the data loaded into our spreadsheet.\n\n3\n\nThe second input is a list of the data columns in our spreadsheet that we want to compute descriptives from.\n\n\n\n\nThere is a lot of information here that might be hard to understand at first. Try changing the analysis options using the Jamovi buttons and watch what happens to the R syntax. In particular, try adding and removing different variables to the analysis.\n\n\n\n\n\n\nKey step\n\n\n\nOnce you’re ready, you can right click on this R syntax and click ‘Copy’ to copy it to your clipboard.\n\nand pasting it into an Rj window - now you can click run to reproduce your descriptive statistics table using the underlying R code.\n\n\nGreat - well done on completing your first data analysis using R code! You should have the following output that will match the descriptives you’ve seen in the main Jamovi window.\n\nHead back over to the Jamovi descriptives tab and try updating your analysis. You could change the variables that you are computing the descriptive statistics from, add in some extra metrics (such as the Skewness or Shapiro-Wilk) or even generate a plot like a histogram.\nNote that the R code in the syntax box of the output will stay up to date with your changes. Pay attention to how the function updates when you select different options.\n\n\n\n\n\n\n\nCheck Your Understanding 3\n\n\n\n\nQuestionHintSolution\n\n\nWhat is the R code required to compute descriptive statistics from the Openness and Conscientiousness variables, whilst including the Skewness metric, the Shapiro-Wilk statistic and a histogram?\nCan you run this analysis in Rj?\n\n\nRemember that the R code in the syntax mode will update as you define your analysis in Jamovi. Get the analysis right there and you can simply copy over the code.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final code should look like this\njmv::descriptives(\n    data = data,\n    vars = vars(Openness, Conscientiousness),\n    hist = TRUE,\n    skew = TRUE,\n    sw = TRUE)"
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#descriptive-statistics-in-jamovi",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#descriptive-statistics-in-jamovi",
    "title": "Week 1 : Descriptive Statistics, Data Processing and R",
    "section": "",
    "text": "Note\n\n\n\nThis section will have some revision from RM-A, please check your notes from RM-A for help with loading data and handling variables.\n\n\nLet’s start by loading the dataset into Jamovi. You can download the file ML3AllSites.csv from canvas.\n\nThis is the original dataset provided by the authors of the paper! It is a massive dataset - take a moment to get familiar with it by answering the following questions:\n\n\n\n\n\n\nData Skills - How many participants are included in the dataset?\n\n\n\n\n\nThere are 2998 participants in total - this is the number of rows in the dataset\n\n\n\n\n\n\n\n\n\nData Skills - Is the dataset complete? do we have all information from everyone?\n\n\n\n\n\nNo, unfortunately some data is missing from some participants. You can see empty cells in quite a few places across the dataset. This means that some analyses may have an N of less than 2998.\n\n\n\n\n\n\n\n\n\nData Skills - Take a look at the configuration of the Age variable. Is it the correct type?\n\n\n\n\n\nJamovi has to make an educated guess at what type of data is included in each column. Looks like its made a mistake here and set age to be ‘Categorical’.\nChange the data-type to be ‘Continuous’ instead.\n\n\n\n\n\n\n\n\n\nData Skills - What is the average and standard deviation of the age of the participants?\n\n\n\n\n\nThe mean age is 19.3 years, typical for a student population. The standard deviation is 3.81.\nThis means that a participant who is 19.3+3.81 = 23.11 years old would be one standard deviation above the average age of the sample.\n\n\n\n\n\n\n\n\n\nData Skills - How many participants do not have age information?\n\n\n\n\n\n596 participants do not have information about age in the dataset! These might have not been collected, mixed up due to an error or lost during data processing.\n2402 participants still do have age information. This is still a large sample.\nThe good news is that Jamovi detects this missing data and removes it for us when computing descriptive statistics. The estimate of the mean won’t be affected by this missing data.\n\n\n\n\n\n\n\n\n\nData Skills - Do you think all the information in the age variable is accurate?\n\n\n\n\n\nTake a close look at the variable and its descriptive statistics.\nThe youngest age in the dataset is -2 and the oldest age is 149! both of these cannot be true and are probably typos made during data collection. We should be careful about interpreting the mean whilst these variables are included…\n\n\n\nThis process of exploring and understanding your data is a critical first step when working on a new analysis. Real data is rarely in perfect condition - we have to take some time and apply common sense to understand the data and what challenges there might be when analysing it.\nIf we do identify issues, such are large amounts of missing data, incorrect data types or mistakes in data entry, we can normally fix them - but only if they’ve been spotted! If we assume our data is perfect and go straight to the analysis then we could end up including a 149 year old student in our sample…"
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#data-cleaning",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#data-cleaning",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "Its probably not a good idea to include the data from the participants with impossible ages in our analysis. One simple step we can take is just to remove those rows from our analysis.\n\n\n\n\n\n\nData Skills - removing rows from a dataset\n\n\n\nRemove the two participants with impossible ages, you can use the extreme values table in the ‘Descriptives’ output to help find the row numbers. You can remove a row in Jamovi by right clicking on the row number (far left of the Data view) and clicking ‘Delete Row’.\n\nThis will not change the original data file (unless you export the data back out again..), it will only affect the view of the data loaded into Jamovi. If you make a mistake you can simply load the original file and start again.\nNotice that the bottom of the data viewer tells you how many rows have been deleted in that dataset.\n\n\n\n\n\n\n\n\nKey step\n\n\n\nNow you can recompute the descriptive statistics of your age variable and see what has changed.\n\n\n\nThe mean is pretty much the same - still 19.3 - but the standard deviation is much smaller now. It has reduced from 3.81 to 2.70. That is a close to 25% reduction in the estimate of the variability of this data - big difference. Including outliers like these can have a large impact on our analyses.\n\n\n\n\n\n\n Critical thinking - Are you happy with the data in the age variable now?\n\n\n\n\n\nTough question! take a look at the Minimum value - we still have one participant who is 13 years old. Whilst this is more likely than finding a -2 or 149 year old student, it is still extremely unlikely. It is harder to make a judgement for this participant than the others. The first two participants had impossible ages, whereas a 13 year old student is just very unlikely. Sometimes we have to make a judgement call.\nLet’s delete row 709 to remove this participant as well.\nThe recomputed descriptive statistics now has an N=2399. Removing the 13 year old hasn’t changed our mean or standard deviation estimates very much - indicating that it was less important to remove this data point than the first two.\nThe youngest participant is now 16 which is more realistic (though still very impressive for that 16 year old!).\n\n\n\nThis process can be intricate and involves a lot of clicking in Jamovi - it would be easy to make a mistake and not notice that something has gone wrong. We’ll explore some faster and more transparent ways to do this using R code during this course.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#descriptive-statistics-and-data-cleaning-in-jamovi",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#descriptive-statistics-and-data-cleaning-in-jamovi",
    "title": "Week 1 : Descriptive Statistics, Data Processing and R",
    "section": "",
    "text": "Key step\n\n\n\nLet’s start by loading the dataset into Jamovi. You can download the file ML3AllSites_RMB.csv from canvas.\n\n\n\nThis is the original dataset provided by the authors of the paper! It is a massive dataset - take a moment to get familiar with it by answering the following questions.\nSome of the questions will require you to run a descriptive statistics analysis on the age variable. Run what ever you need to explore the data and the questions.\n\n\n\n\n\n\n Data Skills - How many participants are included in the dataset?\n\n\n\n\n\nThere are 2402 participants in total - this is the number of rows in the dataset\n\n\n\n\n\n\n\n\n\n Data Skills - Is the dataset complete? do we have all information from everyone?\n\n\n\n\n\nNo, unfortunately some data is missing from some participants. You can see empty cells in quite a few places across the dataset. This means that some analyses may have an N of less than 2402 for analyses using some of these variables.\n\n\n\n\n\n\n\n\n\n Data Skills - Take a look at the configuration of the Age variable. Is it the correct type?\n\n\n\n\n\nJamovi has to make an educated guess at what type of data is included in each column. Looks like it has correctly set the age variable to be ‘Continuous’.\n\n\n\n\n\n\n\n\n\n Data Skills - How many participants do not have age information?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu.\nThe N for the age descriptives is 2402 and there are 0 missing participants. This is a large sample and there is age information for everyone.\n\n\n\n\n\n\n\n\n\n\n Data Skills - What is the average and standard deviation of the age of the participants?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu.\nThe mean age is 19.3 years, typical for a student population. The standard deviation is 3.81.\nThis means that a participant who is 19.3+3.81 = 23.11 years old would be one standard deviation above the average age of the sample.\n\n\n\n\n\n\n\n\n\n\n Data Skills - Do you think all the information in the age variable is accurate?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu. Try checking the box to show the 5 most extreme values in the dataset under the ‘Statistics -&gt; Outliers’ submenu.\nTake a close look at the variable and its descriptive statistics.\nThe youngest age in the dataset is -2 and the oldest age is 149! neither of these can be true and are probably typos (or jokes) made during data collection. Some other values are unusual but not impossible - the second youngest student is 13. We do not know what has happened during data collection to lead to this as this is not our dataset. We should be careful about interpreting the mean whilst these variables are included…\n\n\n\n\nThis process of exploring and understanding your data is a critical first step when working on a new analysis. Real data is rarely in perfect condition - we have to take some time and apply common sense to understand the data and what challenges there might be when analysing it.\nIf we do identify issues, such are large amounts of missing data, incorrect data types or mistakes in data entry, we can normally fix them - but only if they’ve been spotted! If we assume our data is perfect and go straight to the analysis then we could end up including a 149 year old student in our sample…"
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#big-5-personality-factors",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#big-5-personality-factors",
    "title": "Week 1 : Descriptive Statistics, Data Processing and R",
    "section": "",
    "text": "Ok, let’s move on to personality factors. As we said at the top, the big five factors are recorded on a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. So someone with an Extraversion score or 6 might be very outgoing where as someone with a score of 1 would be more of an introvert.\n\n\n\n\n\n\nKey step\n\n\n\nCompute the descriptive statistics for the big 5 personality factors.\nTake some time to consider the data quality - use the questions we answered with age as a guide for what to think about.\n\n\nYou should get a descriptive statistics table that looks like this.\n\nNotice that we have a few missing data values in these variables. Jamovi will remove these from any analyses so they shouldn’t affect our descriptive statistics.\n\n\n\n\n\n\n Critical thinking - Are you happy to use the data in the big 5 personality factors?\n\n\n\n\n\nYes, these look reasonable. The data range matches what we would expect from the rating scales (values between 1 and 7) and there is only a small amount of missing data in each of the five variables.\nWe don’t need to do any further data cleaning based on these descriptive statistics.\n\n\n\ntesting123\n\n\n\n\n\n\n\nCheck Your Understanding 1\n\n\n\nTry your best with this question and don’t forget to speak with your tutor if you get stuck!\n\nQuestionHintSolution\n\n\nYou have reproduced the descriptive statistics for the big 5 personality factors. Now you can do the same for some of the other factors in Table 2 of section 3.5 in Ebersole et al. (2016).\nSpecifically - try and compute the mean and standard deviations for:\n\nSelf Esteem (see section 3.5.1 for details)\nPerceived Stress (see section 3.5.4)\nNeed for cognition (see section 3.5.5) Can you find variables (columns) that correspond to these factors?\n\nNote: Open datasets sometimes use shorthand for variable names rather than the names used in the manuscript. This is not ideal but does happen in practice! we should be ready take a little time to explore and understand a new dataset when working with it.\n\n\nIn this case the variables in the dataset to use are:\n\n\n\nIn Manuscript\nIn Jamovi\n\n\n\n\nSelf Esteem\n‘SelfEsteem’\n\n\nPerceived Stress\n‘Stress’\n\n\nNeed for cognition\n‘NFC’\n\n\n\nTalk to your tutor if you’re getting stuck.\n\n\nYou should be able to reproduce the following table. Verify that the computed Mean and Standard Deviations match those published in table 2 of Ebersole et al (2016)\n\n\n\n\n\n\nNext, let’s think about the distributions of these variables. Its great to think about summarising a dataset with its mean value, but this doesn’t tell us about the wider distribution."
  },
  {
    "objectID": "tutorials/rmb_week-2_stats-in-Rj.html",
    "href": "tutorials/rmb_week-2_stats-in-Rj.html",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "This week we will explore how to use Jamovi to compute and visualise descriptive statistics from a dataset. This will include some revision on Jamovi from last semester and an introduction on how we can use the R coding language to simplify complex data processing.\n\nLearning objectives for this session\n\n\n\nQuantitative Methods\n\n\n\n\n\nMeasures of central tendency\n\n\n\nMeasures of dispersion and spread\n\n\n\nMeasures of skew and normality\n\n\n\n\n\n\n\nData Skills\n\n\n\n\n\nWorking with the Rj editor to use R code within Jamovi\n\n\n\nLearn the basics about functions and variables in R\n\n\n\nComputing descriptive statistics using R\n\n\n\n\n\n\n\nOpen Science\n\n\n\n\n\nValidating and working with openly available research data\n\n\n\n\n\n\n\n\n\n\n\nDataset\n\n\n\nNote that this is the same dataset as in week 1\n\n\nWe will be exploring data that was collected as part of the ‘Many Labs 3’ project (Ebersole et al., 2016). This collected data from university students in the USA across a wide range of cognitive, behavioural and demographic measures. We will be exploring a subset of this dataset concerning individual differences in personality measures. The experimenters collected data to compute the ‘Big Five’ personality factors from each participant. Wikipedia describes the factors as:\n\nConscientiousness (efficient/organized vs. extravagant/careless)\nAgreeableness (friendly/compassionate vs. critical/rational)\nNeuroticism (sensitive/nervous vs. resilient/confident)\nOpenness to experience (inventive/curious vs. consistent/cautious)\nExtraversion (outgoing/energetic vs. solitary/reserved)\n\nThis is a very simple (Gosling et al., 2003) and influential model that is used to summarise personality differences. Though it is popular, some researchers have criticised big five factors for conceptual and methodological reasons (Block, 1995). Read around and form your own view!\nThe data contains the average of two questions about each factor in which participants responded to questions using a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. For example, someone with an extraversion score of 2 is more introverted that someone with an extraversion score of 5.\n\n\n\nLast week, we looked at how we can spend some time understanding a new dataset and compute some descriptive statistics from it.\nNow, we’re going to learn how to use Jamovi and R to make this process more repeatable and more transparent. This will make it much easier for us to come back to the analysis and understand what steps were taken at a later date.\n\n\n\nFirst, you should install the Rj Add-On using this guide for installing Jamovi modules. Once installed you should have a new button on the Ribbon menu at the top of Jamovi…\n\nClick on this and select ‘Rj Editor’ to open a window in which we can write R code! Click on the small cog icon and make sure that ‘Output’ is set to ‘Show code and output’.\n\nWe can use the left-hand window, named Rj editor, to write commands, using the R language. These are the straightforward text commands that tell the computer a series of steps that we wanted to carry out. These commands can be edited and rerun as many times as we need, they can even be shared with collaborators and included as part of scientific publication.\nThis is a very powerful tool once we have a written set of instructions to work with rather than individually clicking through instructions. Though it takes a bit longer to write the commands, our analysis is much more transparent and reproducible once it is done.\nThe outputs of the analysis defined in the Rj editor appear on the right-hand side of the Jamovi window as usual. To check this out, let’s explore using or as a calculator.\n\n\n\n\n\n\nData Skills - R as a calculator\n\n\n\nTry typing a set of sums or equations into the Rj editor. Include one sum on each line and include as many as you like. When you’re ready, you can tell RJ to run the commands by clicking on the green triangle in the top right corner of the RJ editor. This will automatically compute. All of the sums you to find and print the results out in the right hand side window. see the example below.\nYou can use the following symbols to define your sums.\n\n\n\nSymbol\nOperation\n\n\n\n\n+\nAdd\n\n\n-\nSubtract\n\n\n*\nMultiply\n\n\n/\nDivide\n\n\n\n\n\n\n\n\n\n\nNotice that the one of the equations in my example is a bit different to the others. The final example uses a function called sqrt as a shortcut to compute the square root of the number nine.\n\n\n\n\n\n\nDefinition of a function\n\n\n\nFunctions are used to perform specific, predefined tasks, such as calculations, data transformations, or visualization. You can think of it as a “black box” that takes in a value, performs some internal calculation, and returns the result.\n\n\nThe sqrt function calculates the square root of a given number. In R code, this looks something like this:\nsqrt(x)\nwith the ‘x’ replaced by any number. For example, we could compute the square root of 36 using the following command.\nsqrt(36)\nAdd this line to your Rj editor and check the result..\nMany functions, take inputs contained in parentheses written after the name of the function. These inputs are sometimes known as the arguments of a function. In the last example, 36 is an argument for the function sqrt.\nSometimes functions take several arguments, and the arguments themselves can have specific names. For example.\nround(12.345, digits = 0)\nwill round the value x to a whole number with zero digits after the decimal point. Where as\nround(12.345, digits = 2)\nwould round the same number to preserve 2 digits after the decimal point. Try running these examples in Rj with a range of different numbers to get a sense of how it works.\nOften, we don’t just want to see the result of some maths or a function call, we want to store the result to use again later. For this, we want to use variables. For example, here we store the result of a calculator sum in a variable named ‘y’\ny &lt;- 2 + 2\nIf you run this in Rj, you’ll notice that we no longer get the number 4 printed to the screen. This is as the output is now caught and stored rather than printed out. If we still want to see what is contained in y, we can use another helpful function named print.\ny &lt;- 2 + 2\nprint(y)\nWill now also display the content of y.\n\n\n\n\n\n\nDefinition of a variable\n\n\n\nA variable is an object that provides a labelled space to store information. The &lt;- or = symbols indicate that we’re assigning some information to a variable (the two symbols behave the same way, you could see either).\nCrucially, the information on the right hand side is assigned to a variable with the name from the left hand side.\n\n\nA single analysis might have several lines of code that create, store and reuse a several different variables with several different functions. For example:\n\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat does this R code do? what is the value of x, y and z?\n x &lt;- 10 + 10\n y &lt;- sqrt(16)\n z &lt;- x / y\n\n\nTry copying out and running the code in Rj.\nYou can add some print functions to see the value of the intermediate variables x and y as well. Try adding print(x) on the line immediately after x is defined.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final answers:\nx is 20 and y is 4, so z = 20 / 4 which is 5.\n\n\n\n\n\n\n\nRj has a special feature that the data loaded into our spreadsheet is always contained in a special variable named data. We can refer to this data variable to view and run analyses on our dataset.\n\n\n\nOk, back to statistics! How can we use our new R skills to compute statistics?\nThe trick is to understand that all the analyses in Jamovi are actually carried out by functions in R. Each analysis we can select from the top ribbon in Jamovi corresponds to a function that can be called in the code. Similarly, all of the options that we select in the analysis, dialogue boxes, correspond to arguments for that function. Let’s take a look in practice.\nTo help understand this Jamovi provides an “R Syntax Mode”, in this mode, Jamovi produces equivalent R code for each analysis. To change to syntax mode, select the application menu (⋮) at the top right of Jamovi, and check the Syntax mode checkbox there.\n\n\n\n\n\n\nKey step\n\n\n\nTake a moment to load the data file into Jamovi.\nWith syntax mode on, compute the descriptive statistics for the big five personality factors again.\n\n\nThe outputs should look like this:\n\nNotice that some R code has appeared at the top of the output table. This is relatively complex compared to our previous functions like print or sqrt. Let’s break it down a bit.\n\n\n\n\n\n\nData Skills - Understanding the descriptives function\n\n\n\nThis is the code that Jamovi’s syntax mode will produce (with a little formatting to make the appearance simpler). Take a look through each part to understand what it does. Click the number in the annotation to highlight the corresponding part of the code.\n1jmv::descriptives(\n2    data = data,\n3    vars = vars(Openness, Conscientiousness, Extraversion, Agreeableness, Neuroticism)\n    )\n\n1\n\nThis is the name of the function that will do the computation for us. Everything contained within these parentheses are known as arguments, or inputs, for the function\n\n2\n\nThe first input is named data and is assigned to be the special data variable that contains the data loaded into our spreadsheet.\n\n3\n\nThe second input is a list of the data columns in our spreadsheet that we want to compute descriptives from.\n\n\n\n\nThere is a lot of information here that might be hard to understand at first. Try changing the analysis options using the Jamovi buttons and watch what happens to the R syntax. In particular, try adding and removing different variables to the analysis.\n\n\n\n\n\n\nKey step\n\n\n\nOnce you’re ready, you can right click on this R syntax and click ‘Copy’ to copy it to your clipboard.\n\nand pasting it into an Rj window - now you can click run to reproduce your descriptive statistics table using the underlying R code.\n\n\nGreat - well done on completing your first data analysis using R code! You should have the following output that will match the descriptives you’ve seen in the main Jamovi window.\n\nHead back over to the Jamovi descriptives tab and try updating your analysis. You could change the variables that you are computing the descriptive statistics from, add in some extra metrics (such as the Skewness or Shapiro-Wilk) or even generate a plot like a histogram.\nNote that the R code in the syntax box of the output will stay up to date with your changes. Pay attention to how the function updates when you select different options.\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat is the R code required to compute descriptive statistics from the Openness and Conscientiousness variables, whilst including the Skewness metric, the Shapiro-Wilk statistic and a histogram?\nCan you run this analysis in Rj?\n\n\nRemember that the R code in the syntax mode will update as you define your analysis in Jamovi. Get the analysis right there and you can simply copy over the code.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final code should look like this\njmv::descriptives(\n    data = data,\n    vars = vars(Openness, Conscientiousness),\n    hist = TRUE,\n    skew = TRUE,\n    sw = TRUE)\n\n\n\n\n\n\n\n\n\nRemember that last week we very carefully removed several participants who had entered unrealisic or impossible ages into the datasets. This may have been an accident or mistake but either way we should not use this data.\nR and Rj make it very easy to clean data without the boring, manual work we did last week. R can do the hard work and we can avoid scrolling through very large datasets by hand. Sounds good!\nThe first thing we can do is investigate what range of responses that people actually gave when asked about their age. To do this we can use a new function called unique(). This takes a column of a dataset as an input and returns a list of all the unique responses that it contains.\n\n\n\n\n\n\nKey step\n\n\n\nLoad up an Rj Editor window (or continue in your old one) and run unique() on the age data.\nWe can access a single column of a dataset using the doller sign $. In this case data$age accesses the age column of the data sheet.\n\n\nThe result should look like this:\n\nWhat do you think?\n\n\n\n\n\n\nData Skills - Evaluating the age column\n\n\n\n\n\nOk, most of these responses are fine but there are a lot of strange ones.\n\nFirstly, we can find the extreme values that we saw last week (-2 and 149) - these are clearly mistakes (or some kind of weird prank).\nNext, we can see a lot of people adding text (eg ‘almost 19’). This is not helpful for the computer though it can be socially useful. The computer will read this in words and not numbers. These responses with additional text will count as missing data for any numerical analysis we do.\n&lt;NA&gt; means that the data value is simply missing - perhaps these participants skipped the question.\n\nWe caught some of these issues last time but likely not all. It would be a huge effort to comb through the data line-by-line and identify all these issues."
  },
  {
    "objectID": "tutorials/rmb_week-2_stats-in-Rj.html#the-challenge",
    "href": "tutorials/rmb_week-2_stats-in-Rj.html#the-challenge",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Last week, we looked at how we can spend some time understanding a new dataset and compute some descriptive statistics from it.\nNow, we’re going to learn how to use Jamovi and R to make this process more repeatable and more transparent. This will make it much easier for us to come back to the analysis and understand what steps were taken at a later date."
  },
  {
    "objectID": "tutorials/rmb_week-2_stats-in-Rj.html#the-dataset",
    "href": "tutorials/rmb_week-2_stats-in-Rj.html#the-dataset",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Dataset\n\n\n\nNote that this is the same dataset as in week 1\n\n\nWe will be exploring data that was collected as part of the ‘Many Labs 3’ project (Ebersole et al., 2016). This collected data from university students in the USA across a wide range of cognitive, behavioural and demographic measures. We will be exploring a subset of this dataset concerning individual differences in personality measures. The experimenters collected data to compute the ‘Big Five’ personality factors from each participant. Wikipedia describes the factors as:\n\nConscientiousness (efficient/organized vs. extravagant/careless)\nAgreeableness (friendly/compassionate vs. critical/rational)\nNeuroticism (sensitive/nervous vs. resilient/confident)\nOpenness to experience (inventive/curious vs. consistent/cautious)\nExtraversion (outgoing/energetic vs. solitary/reserved)\n\nThis is a very simple (Gosling et al., 2003) and influential model that is used to summarise personality differences. Though it is popular, some researchers have criticised big five factors for conceptual and methodological reasons (Block, 1995). Read around and form your own view!\nThe data contains the average of two questions about each factor in which participants responded to questions using a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. For example, someone with an extraversion score of 2 is more introverted that someone with an extraversion score of 5."
  },
  {
    "objectID": "tutorials/rmb_week-2_stats-in-Rj.html#install-the-rj-add-on-in-jamovi",
    "href": "tutorials/rmb_week-2_stats-in-Rj.html#install-the-rj-add-on-in-jamovi",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "First, you should install the Rj Add-On using this guide for installing Jamovi modules. Once installed you should have a new button on the Ribbon menu at the top of Jamovi…\n\nClick on this and select ‘Rj Editor’ to open a window in which we can write R code! Click on the small cog icon and make sure that ‘Output’ is set to ‘Show code and output’.\n\nWe can use the left-hand window, named Rj editor, to write commands, using the R language. These are the straightforward text commands that tell the computer a series of steps that we wanted to carry out. These commands can be edited and rerun as many times as we need, they can even be shared with collaborators and included as part of scientific publication.\nThis is a very powerful tool once we have a written set of instructions to work with rather than individually clicking through instructions. Though it takes a bit longer to write the commands, our analysis is much more transparent and reproducible once it is done.\nThe outputs of the analysis defined in the Rj editor appear on the right-hand side of the Jamovi window as usual. To check this out, let’s explore using or as a calculator.\n\n\n\n\n\n\nData Skills - R as a calculator\n\n\n\nTry typing a set of sums or equations into the Rj editor. Include one sum on each line and include as many as you like. When you’re ready, you can tell RJ to run the commands by clicking on the green triangle in the top right corner of the RJ editor. This will automatically compute. All of the sums you to find and print the results out in the right hand side window. see the example below.\nYou can use the following symbols to define your sums.\n\n\n\nSymbol\nOperation\n\n\n\n\n+\nAdd\n\n\n-\nSubtract\n\n\n*\nMultiply\n\n\n/\nDivide"
  },
  {
    "objectID": "tutorials/rmb_week-2_stats-in-Rj.html#functions-and-variables",
    "href": "tutorials/rmb_week-2_stats-in-Rj.html#functions-and-variables",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Notice that the one of the equations in my example is a bit different to the others. The final example uses a function called sqrt as a shortcut to compute the square root of the number nine.\n\n\n\n\n\n\nDefinition of a function\n\n\n\nFunctions are used to perform specific, predefined tasks, such as calculations, data transformations, or visualization. You can think of it as a “black box” that takes in a value, performs some internal calculation, and returns the result.\n\n\nThe sqrt function calculates the square root of a given number. In R code, this looks something like this:\nsqrt(x)\nwith the ‘x’ replaced by any number. For example, we could compute the square root of 36 using the following command.\nsqrt(36)\nAdd this line to your Rj editor and check the result..\nMany functions, take inputs contained in parentheses written after the name of the function. These inputs are sometimes known as the arguments of a function. In the last example, 36 is an argument for the function sqrt.\nSometimes functions take several arguments, and the arguments themselves can have specific names. For example.\nround(12.345, digits = 0)\nwill round the value x to a whole number with zero digits after the decimal point. Where as\nround(12.345, digits = 2)\nwould round the same number to preserve 2 digits after the decimal point. Try running these examples in Rj with a range of different numbers to get a sense of how it works.\nOften, we don’t just want to see the result of some maths or a function call, we want to store the result to use again later. For this, we want to use variables. For example, here we store the result of a calculator sum in a variable named ‘y’\ny &lt;- 2 + 2\nIf you run this in Rj, you’ll notice that we no longer get the number 4 printed to the screen. This is as the output is now caught and stored rather than printed out. If we still want to see what is contained in y, we can use another helpful function named print.\ny &lt;- 2 + 2\nprint(y)\nWill now also display the content of y.\n\n\n\n\n\n\nDefinition of a variable\n\n\n\nA variable is an object that provides a labelled space to store information. The &lt;- or = symbols indicate that we’re assigning some information to a variable (the two symbols behave the same way, you could see either).\nCrucially, the information on the right hand side is assigned to a variable with the name from the left hand side.\n\n\nA single analysis might have several lines of code that create, store and reuse a several different variables with several different functions. For example:\n\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat does this R code do? what is the value of x, y and z?\n x &lt;- 10 + 10\n y &lt;- sqrt(16)\n z &lt;- x / y\n\n\nTry copying out and running the code in Rj.\nYou can add some print functions to see the value of the intermediate variables x and y as well. Try adding print(x) on the line immediately after x is defined.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final answers:\nx is 20 and y is 4, so z = 20 / 4 which is 5.\n\n\n\n\n\n\n\nRj has a special feature that the data loaded into our spreadsheet is always contained in a special variable named data. We can refer to this data variable to view and run analyses on our dataset."
  },
  {
    "objectID": "tutorials/rmb_week-2_stats-in-Rj.html#compute-descriptive-statistics-using-r",
    "href": "tutorials/rmb_week-2_stats-in-Rj.html#compute-descriptive-statistics-using-r",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Ok, back to statistics! How can we use our new R skills to compute statistics?\nThe trick is to understand that all the analyses in Jamovi are actually carried out by functions in R. Each analysis we can select from the top ribbon in Jamovi corresponds to a function that can be called in the code. Similarly, all of the options that we select in the analysis, dialogue boxes, correspond to arguments for that function. Let’s take a look in practice.\nTo help understand this Jamovi provides an “R Syntax Mode”, in this mode, Jamovi produces equivalent R code for each analysis. To change to syntax mode, select the application menu (⋮) at the top right of Jamovi, and check the Syntax mode checkbox there.\n\n\n\n\n\n\nKey step\n\n\n\nTake a moment to load the data file into Jamovi.\nWith syntax mode on, compute the descriptive statistics for the big five personality factors again.\n\n\nThe outputs should look like this:\n\nNotice that some R code has appeared at the top of the output table. This is relatively complex compared to our previous functions like print or sqrt. Let’s break it down a bit.\n\n\n\n\n\n\nData Skills - Understanding the descriptives function\n\n\n\nThis is the code that Jamovi’s syntax mode will produce (with a little formatting to make the appearance simpler). Take a look through each part to understand what it does. Click the number in the annotation to highlight the corresponding part of the code.\n1jmv::descriptives(\n2    data = data,\n3    vars = vars(Openness, Conscientiousness, Extraversion, Agreeableness, Neuroticism)\n    )\n\n1\n\nThis is the name of the function that will do the computation for us. Everything contained within these parentheses are known as arguments, or inputs, for the function\n\n2\n\nThe first input is named data and is assigned to be the special data variable that contains the data loaded into our spreadsheet.\n\n3\n\nThe second input is a list of the data columns in our spreadsheet that we want to compute descriptives from.\n\n\n\n\nThere is a lot of information here that might be hard to understand at first. Try changing the analysis options using the Jamovi buttons and watch what happens to the R syntax. In particular, try adding and removing different variables to the analysis.\n\n\n\n\n\n\nKey step\n\n\n\nOnce you’re ready, you can right click on this R syntax and click ‘Copy’ to copy it to your clipboard.\n\nand pasting it into an Rj window - now you can click run to reproduce your descriptive statistics table using the underlying R code.\n\n\nGreat - well done on completing your first data analysis using R code! You should have the following output that will match the descriptives you’ve seen in the main Jamovi window.\n\nHead back over to the Jamovi descriptives tab and try updating your analysis. You could change the variables that you are computing the descriptive statistics from, add in some extra metrics (such as the Skewness or Shapiro-Wilk) or even generate a plot like a histogram.\nNote that the R code in the syntax box of the output will stay up to date with your changes. Pay attention to how the function updates when you select different options.\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat is the R code required to compute descriptive statistics from the Openness and Conscientiousness variables, whilst including the Skewness metric, the Shapiro-Wilk statistic and a histogram?\nCan you run this analysis in Rj?\n\n\nRemember that the R code in the syntax mode will update as you define your analysis in Jamovi. Get the analysis right there and you can simply copy over the code.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final code should look like this\njmv::descriptives(\n    data = data,\n    vars = vars(Openness, Conscientiousness),\n    hist = TRUE,\n    skew = TRUE,\n    sw = TRUE)"
  },
  {
    "objectID": "tutorials/rmb_week-2_stats-in-Rj.html#cleaning-data-using-the-filter-function",
    "href": "tutorials/rmb_week-2_stats-in-Rj.html#cleaning-data-using-the-filter-function",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Remember that last week we very carefully removed several participants who had entered unrealisic or impossible ages into the datasets. This may have been an accident or mistake but either way we should not use this data.\nR and Rj make it very easy to clean data without the boring, manual work we did last week. R can do the hard work and we can avoid scrolling through very large datasets by hand. Sounds good!\nThe first thing we can do is investigate what range of responses that people actually gave when asked about their age. To do this we can use a new function called unique(). This takes a column of a dataset as an input and returns a list of all the unique responses that it contains.\n\n\n\n\n\n\nKey step\n\n\n\nLoad up an Rj Editor window (or continue in your old one) and run unique() on the age data.\nWe can access a single column of a dataset using the doller sign $. In this case data$age accesses the age column of the data sheet.\n\n\nThe result should look like this:\n\nWhat do you think?\n\n\n\n\n\n\nData Skills - Evaluating the age column\n\n\n\n\n\nOk, most of these responses are fine but there are a lot of strange ones.\n\nFirstly, we can find the extreme values that we saw last week (-2 and 149) - these are clearly mistakes (or some kind of weird prank).\nNext, we can see a lot of people adding text (eg ‘almost 19’). This is not helpful for the computer though it can be socially useful. The computer will read this in words and not numbers. These responses with additional text will count as missing data for any numerical analysis we do.\n&lt;NA&gt; means that the data value is simply missing - perhaps these participants skipped the question.\n\nWe caught some of these issues last time but likely not all. It would be a huge effort to comb through the data line-by-line and identify all these issues."
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#visualising-and-understanding-distributions",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#visualising-and-understanding-distributions",
    "title": "Week 1 : Descriptive Statistics, Data Processing and R",
    "section": "",
    "text": "Question\n\n\n\nTweet from the callout tweet with icon"
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#references",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#references",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "Block, Jack. 1995. “A Contrarian View of the Five-Factor Approach to Personality Description.” Psychological Bulletin 117 (2): 187–215. https://doi.org/10.1037/0033-2909.117.2.187.\n\n\nEbersole, Charles R., Olivia E. Atherton, Aimee L. Belanger, Hayley M. Skulborstad, Jill M. Allen, Jonathan B. Banks, Erica Baranski, et al. 2016. “Many Labs 3: Evaluating Participant Pool Quality Across the Academic Semester via Replication.” Journal of Experimental Social Psychology 67: 68–82. https://doi.org/https://doi.org/10.1016/j.jesp.2015.10.012.\n\n\nGosling, Samuel D, Peter J Rentfrow, and William B Swann. 2003. “A Very Brief Measure of the Big-Five Personality Domains.” Journal of Research in Personality 37 (6): 504–28. https://doi.org/10.1016/s0092-6566(03)00046-1.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#exploring-a-new-dataset-in-jamovi",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#exploring-a-new-dataset-in-jamovi",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "Revision from RM-A\n\n\n\nThis computer practical will have some revision from RM-A, please check your notes from RM-A for help with loading data and handling variables.\nIf you aren’t familiar with Jamovi, or would like a refresher - please take a quick look at the following topics in the Jamovi user guide\n\nFirst steps in Jamovi\nAnalyses\nThe spreadsheet\n\nPlease ask your tutor for help in the computer practical sessions if you need any assistance.\n\n\n\n\n\n\n\n\nKey step\n\n\n\nLet’s start by loading the dataset into Jamovi. You can download the file ML3AllSites_RMB.csv from canvas.\n\n\n\nThis is the original dataset provided by the authors of the paper! It is a massive dataset - take a moment to get familiar with it by answering the following questions.\nSome of the questions will require you to run a descriptive statistics analysis on the age variable. Run what ever you need to explore the data and the questions.\n\n\n\n\n\n\n Data Skills - How many participants are included in the dataset?\n\n\n\n\n\nThere are 2402 participants in total - this is the number of rows in the dataset\n\n\n\n\n\n\n\n\n\n Data Skills - Is the dataset complete? do we have all information from everyone?\n\n\n\n\n\nNo, unfortunately some data is missing from some participants. You can see empty cells in quite a few places across the dataset. This means that some analyses may have an N of less than 2402 for analyses using some of these variables.\n\n\n\n\n\n\n\n\n\n Data Skills - Take a look at the configuration of the Age variable. Is it the correct type?\n\n\n\n\n\nJamovi has to make an educated guess at what type of data is included in each column. Looks like it has correctly set the age variable to be ‘Continuous’.\n\n\n\n\n\n\n\n\n\n Data Skills - How many participants do not have age information?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu.\nThe N for the age descriptives is 2402 and there are 0 missing participants. This is a large sample and there is age information for everyone.\n\n\n\n\n\n\n\n\n\n\n Data Skills - What is the average and standard deviation of the age of the participants?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu.\nThe mean age is 19.3 years, typical for a student population. The standard deviation is 3.81.\nThis means that a participant who is 19.3+3.81 = 23.11 years old would be one standard deviation above the average age of the sample.\n\n\n\n\n\n\n\n\n\n\n Data Skills - Do you think all the information in the age variable is accurate?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu. Try checking the box to show the 5 most extreme values in the dataset under the ‘Statistics -&gt; Outliers’ submenu.\nTake a close look at the variable and its descriptive statistics.\nThe youngest age in the dataset is -2 and the oldest age is 149! neither of these can be true and are probably typos (or jokes) made during data collection. Some other values are unusual but not impossible - the second youngest student is 13. We do not know what has happened during data collection to lead to this as this is not our dataset. We should be careful about interpreting the mean whilst these variables are included…\n\n\n\n\nThis process of exploring and understanding your data is a critical first step when working on a new analysis. Real data is rarely in perfect condition - we have to take some time and apply common sense to understand the data and what challenges there might be when analysing it.\nIf we do identify issues, such are large amounts of missing data, incorrect data types or mistakes in data entry, we can normally fix them - but only if they’ve been spotted! If we assume our data is perfect and go straight to the analysis then we could end up including a 149 year old student in our sample…",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#visualising-distributions",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#visualising-distributions",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "Next we’ll have a look at computing histograms from this data. Remember that histograms divide the data range into intervals called bins. The choice of bin width and number of bins can affect the appearance and interpretation of the histogram. Most of the time we can use the automatic bin definitions provided by Jamovi.\nWe can use Histograms to explore a few key factors of the wider data distributions that are hard to see from the descriptive statistics tables.\n\nShape: The shape of the histogram can reveal the distribution pattern of the data, such as normal distribution, skewness, or bimodality.\nOutliers: Histograms can help identify outliers or unusual data points that fall outside the general pattern.\n\nJamovi makes it very simple to compute a histogram. Open the ‘Plots’ sub-menu of the descriptive statistics tab and select the ‘Histogram’ checkbox.\n\n\n\n\n\n\nKey step\n\n\n\nCompute a histogram of the participant ages\n\n\n\nThe descriptives tables give us a numerical summary of the data - but this can be hard to build an intuitive understanding of the dataset. A histogram gives us something immediately interpretable on a more ‘human’ level. Have a think about the following questions.\n\n\n\n\n\n\n Data Skills - What is the average age of the pariticpants in this dataset?\n\n\n\n\n\nWe can see that the most common ages are clustered around the late teenage years and early 20s. We can’t tell the exact mean from the histogram alone - we need to compute the descriptives table for this - but histograms are good to get a quick ‘sense’ of the data.\n\n\n\n\n\n\n\n\n\n Data Skills - Do the ages look normally distributed?\n\n\n\n\n\nThere is a long tail to this distribution with a very small number of participants in their 30s, 40s and 50s. This is a strong positive skew and likely indicates that the data are not normally distributed.\nThis would be hard to tell from the descriptives table alone.\nOverall, this is a good match for what we would expect from a student population at a large university.\n\n\n\nWe can get an alternative perspective by visualising our data using a ‘Box Plot’.\n\n\n\n\n\n\nKey step\n\n\n\nCompute a Box plot of the participant ages\n\n\n\nThe boxplot visualises the median and interquartile range (25th to 75th percentile) of the data, as well as highlighting outliers. This gives us less resolution around the middle of the distribution close to the median - but does give a much clearer view of the long tail in the ages of the student data sample.\n\n\n\n\n\n\n Data Skills - How old is the oldest participant in the dataset??\n\n\n\n\n\nThe most extreme outliers in the dataset are labelled with their row ID in the boxplot. The largest age value is in row 1081 - it looks like this is around 55 in the boxplot.\nWe can check the corresponding row in the data table to get some more precision. This tells us that the oldest participant is exactly 54 years old.\n\n\n\n\n\n\n\n\n\n\nCheck Your Understanding 2\n\n\n\nTry your best with this question and don’t forget to speak with your tutor if you get stuck!\n\nQuestionHintSolution\n\n\nCompute histograms and/or boxplots for the big-5 personality factors and take some notes their distributions. Think about the following questions for each factor:\n\nIs the distribution symmetric?\nIf not, is there a positive or a negative skew?\nAre there any outliers?\n\nWrite some quick notes on your answers - we’ll use these again in the next section!\n\n\nIt might be easiest to do this one factor at a time to avoid being swamped with figures!\nCreate the figure for a single factor, make some notes and make the next figure with the next factor. You can consider saving the figure into a notebook or document if you want to make a more controlled comparison.\n\n\nHere are my notes about each distribution:\n\nOpenness, this does not look like a normal distribution - there is a negative skew in the data.\nConscientiousness, this is definitely not a normal distribution - there is a strong negative skew.\nExtraversion, this is close to being a normal distribution - perhaps a very slight negative skew.\nAgreeableness, this does not look like a normal distribution - there is a negative skew in the data.\nNeuroticism, this does not look like a normal distribution - there is a positive skew in the data.\n\nNone of the factors have obvious outliers.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#descriptives-from-big-5-personality-factors",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#descriptives-from-big-5-personality-factors",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "Ok, let’s move on to personality factors. As we said at the top, the big five factors are recorded on a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. So someone with an Extraversion score or 6 might be very outgoing where as someone with a score of 1 would be more of an introvert.\n\n\n\n\n\n\nKey step\n\n\n\nCompute the descriptive statistics for the big 5 personality factors.\nTake some time to consider the data quality - use the questions we answered with age as a guide for what to think about.\n\n\n\nNotice that we have a few missing data values in these variables. Jamovi will remove these from any analyses so they shouldn’t affect our descriptive statistics.\n\n\n\n\n\n\n Critical thinking - Are you happy to use the data in the big 5 personality factors?\n\n\n\n\n\nYes, these look reasonable. The data range matches what we would expect from the rating scales (values between 1 and 7) and there is only a small amount of missing data in each of the five variables.\nWe don’t need to do any further data cleaning based on these descriptive statistics.\n\n\n\n\n\n\n\n\n\n\nCheck Your Understanding 1\n\n\n\nTry your best with this question and don’t forget to speak with your tutor if you get stuck!\n\nQuestionHintSolution\n\n\nYou have reproduced the descriptive statistics for the big 5 personality factors. Now you can do the same for some of the other factors in Table 2 of section 3.5 in Ebersole et al. (2016).\nSpecifically - try and compute the mean and standard deviations for the following factors (Descriptions of the factors are the the cited section of Ebersole et al. (2016)):\n\nSelf Esteem (see section 3.5.1)\nDaily Mood (see section 3.5.3)\nNeed for cognition (see section 3.5.5)\n\nCan you find variables (columns) that correspond to these factors?\nNote: Open datasets sometimes use shorthand for variable names rather than the names used in the manuscript. This is not ideal but does happen in practice! we should be ready take a little time to explore and understand a new dataset when working with it.\n\n\nIn this case the variables in the dataset to use are:\n\n\n\nIn Manuscript\nIn Jamovi\n\n\n\n\nSelf Esteem\n‘SelfEsteem’\n\n\nDaily Mood.\n‘Mood’\n\n\nNeed for cognition\n‘NFC’\n\n\n\nTalk to your tutor if you’re getting stuck.\n\n\nYou should be able to reproduce the following table. Verify that the computed Mean and Standard Deviations match those published in table 2 of Ebersole et al (2016)\n\nThe final mean values are very close to the values in Ebersole et al. (2016) - but not identical. Looks like the original paper kept in all the data that had missing or unusual age values.\n\n\n\n\n\nNext, let’s think about the distributions of these variables. Its great to think about summarising a dataset with its mean value, but this doesn’t tell us about the wider distribution.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#summary",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#summary",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "In this session we have gone through the process of exploring a dataset from a published scientific article. We have computed a range of descriptive statistics and used histograms and boxplots to visualise the dataset.\nIt is common for publicly available data to contain little mistakes and issues. We need to go through a process like this with every new dataset and it should be like second nature by the end of this module. Remember to use common sense and practical thinking to identify issues and think about possible solutions.\nRemember this process when collecting your own data. Think carefully about how you can avoid typos and mistakes when collecting a dataset. It can save you and your collaborators a lot of time in future!",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_descriptives-and-rj.html#computing-statistics-for-normality-and-skewness.",
    "href": "tutorials/rmb_week-1_descriptives-and-rj.html#computing-statistics-for-normality-and-skewness.",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "As a final step, we can see if our intuitions about the distribution of big-5 personality factors match with more formal statistics measures checking for normal distributions and skewness.\n\n\n\n\n\n\nKey step\n\n\n\nCompute statistics Shapero-Wilk’s test for normality and for ‘Skewness’. You can add both of these tests from the ‘Statistics’ sub-menu of the Descriptives analysis.\n\n\n\n\n\nThe Shapiro-Wilk test evaluates whether a sample comes from a normally distributed population. It returns 2 values:\n\n‘W’ The W statistic measures how well the data conforms to a normal distribution. It ranges from 0 to 1 where values close to 1 indicate the data is normally distributed.\n‘p’ is a p-value indicating the probability that we could see a value of W at least as large as the one we have measured if the data really were normally distributed. Typically, we would say that the data are not normally distributed if p is less than or equal to 0.05.\n\n\n\n\n\n\n\n Data Skills - Do our notes from the histograms match the Shapiro-Wilk statistics?\n\n\n\n\n\nYes, If we look at the W statistics, then we see that Extraversion has the highest value indicating that it has the most ‘normal’ data distribution whilst the other four factors are similar. This matches what we saw with the histograms.\nThe p-values from the formal hypothesis test indicate that none of the 5 factors have normal distributions. We couldn’t tell this from our informal evaulation of the histograms and box plots.\n\n\n\n\n\n\nThe skewness metric returns a number close to zero if the data are symmetrical around zero, and a number close to +1 or -1 if the data are skewed. The sign of the skewness value indicates whether there is a positive or a negative skew.\n\n\n\n\n\n\n Data Skills - Do our notes from the histograms match the skewness statistic?\n\n\n\n\n\nYes, its very close. We can see that ‘Extraversion’ has the least skew with a Skewness metric very close to zero (-0.0714). In contrast, ‘Conscientiousness’ has the most skew. Its value of ‘-0.656’ indicates a very substantial negative skewness in the distribution.\nOpenness and Agreeableness have moderate negative skews, whilst Neuroticism has a moderate positive skew.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "copilot.html",
    "href": "copilot.html",
    "title": "Using Copilot at University of Birmingham",
    "section": "",
    "text": "Microsoft Copilot is now available to use for University of Birmingham members. See the University documentation pages to get access\nYou are welcome to use Copilot to support your learning of statistics and coding throughout the Research Methods B computer practical sessions. In particular, Copilot can be a useful way to get a second perspective on different technical concepts, to help generate data analysis code or to understand where data analysis code might have gone wrong.\nThroughout the course - we will suggest places where you might benefit from interacting with Copilot to support your learning. Look out for dialogue boxes like this one.\n\n\n\n\n\n\nCheck Your Understanding with Copilot (Optional)\n\n\n\nTry asking Copilot for more information about variables in R. We suggest you try the following prompts to get started.\n\n“Write a simple description of variables in R for a beginner”\n“How can I choose a name for my variable in R”\n\nMake sure to ask follow up questions if you would like more information. Remember to talk with your session tutors if you get stuck.\n\n\n\n\n\n\n\n\nEthical use of Copilot\n\n\n\nTools like Copilot can be a valuable learning aid, however it is critical that you familiarise yourself with the University’s student and PGR guidance on using GenAI tools ethically for work. This guidance provides you with the risks and limitations of using Generative AI tools in your academic study\nIt is not permitted to use Generative AI tools in assessment unless explicitly stated on the assessment page. It is your responsibility to use these tools in an appropriate way.\n\n\n\n\nHere are some questions with Copilot’s answers to help you decide how and when to use Copilot. Note that Copilot may respond differently if you ask identical prompts.\n\n\n\nStarting to learn R with the help of Copilot can be a smooth and enjoyable process. Here are some steps and tips to get you started:\n\nBegin by asking Copilot to explain fundamental concepts in R. This will give you a solid foundation to build on. - Example Questions: - “What are the basic data types in R?” - “How do I create a vector in R?”\n\nRequest detailed guides for common tasks. This helps you understand the process and logic behind the code. - Example Questions: - “Can you show me how to read a CSV file into R?” - “How do I create a simple plot using ggplot2?”\n\nReinforce your learning by practicing with beginner exercises. This will help you apply what you’ve learned. - Example Questions: - “Can you give me a beginner exercise for data manipulation in R?” - “What are some basic exercises to practice using loops in R?”\n\nLearn about important R packages that can simplify your work. Copilot can introduce you to these packages and show you how to use them. - Example Questions: - “What is the dplyr package and how do I use it?” - “Can you explain how to use the tidyverse package for data analysis?”\n\nWhen you encounter errors, ask Copilot for help in understanding and fixing them. This will improve your debugging skills. - Example Questions: - “I’m getting an error with my R code, can you help me debug it?” - “What does this error message mean in R?”\n\nAsk about best practices for writing clean and efficient R code. This will help you develop good &gt; coding habits. - Example Questions: - “What are some best practices for writing R code?” - “How can I make my R scripts more efficient?”\n\nSeeing examples can be very helpful. Ask for code snippets to understand how to implement different &gt; functions and methods. - Example Questions: - “Can you show me an example of how to use the print function in R?” - “How do I perform a linear regression in R?”\n\nDon’t hesitate to ask about anything you’re curious about, even if it seems basic. Copilot is here to help you learn at your own pace. - Example Questions: - “What are some good resources for learning R?” - “How do I create a histogram in R?”\n\n\n“How do I extract specific rows from a data frame in R?”\n“What are some common data visualization techniques in R?”\n\nBy leveraging Copilot’s capabilities, you can get personalized assistance and resources tailored to your learning needs. Remember, learning a new language takes time and practice, so be patient with yourself and keep experimenting. Happy coding! If you have any specific questions or need further guidance, feel free to ask!\n\n\n\n\n\nCode generated by Copilot can be a great starting point, but it’s important to review and test it thoroughly. Here are a few tips to ensure the code meets your needs:\n\nReview for Accuracy: Check the logic and syntax to make sure it aligns with your requirements.\nTest Thoroughly: Run tests to ensure the code works as expected in different scenarios.\nSecurity Considerations: Be mindful of potential security vulnerabilities and address them as needed.\nCustomization: Adapt and refine the code to better fit your specific use case.\n\nUsing these practices can help you make the most of Copilot’s assistance while ensuring the quality and reliability of your code. If you have any specific coding questions or need help with a particular piece of code, feel free to ask! 😊",
    "crumbs": [
      "Home",
      "Support",
      "Using Copilot at UoB"
    ]
  },
  {
    "objectID": "copilot.html#copilots-advice-about-itself",
    "href": "copilot.html#copilots-advice-about-itself",
    "title": "Using Copilot at University of Birmingham",
    "section": "",
    "text": "Here are some questions with Copilot’s answers to help you decide how and when to use Copilot. Note that Copilot may respond differently if you ask identical prompts.\n\n\n\nStarting to learn R with the help of Copilot can be a smooth and enjoyable process. Here are some steps and tips to get you started:\n\nBegin by asking Copilot to explain fundamental concepts in R. This will give you a solid foundation to build on. - Example Questions: - “What are the basic data types in R?” - “How do I create a vector in R?”\n\nRequest detailed guides for common tasks. This helps you understand the process and logic behind the code. - Example Questions: - “Can you show me how to read a CSV file into R?” - “How do I create a simple plot using ggplot2?”\n\nReinforce your learning by practicing with beginner exercises. This will help you apply what you’ve learned. - Example Questions: - “Can you give me a beginner exercise for data manipulation in R?” - “What are some basic exercises to practice using loops in R?”\n\nLearn about important R packages that can simplify your work. Copilot can introduce you to these packages and show you how to use them. - Example Questions: - “What is the dplyr package and how do I use it?” - “Can you explain how to use the tidyverse package for data analysis?”\n\nWhen you encounter errors, ask Copilot for help in understanding and fixing them. This will improve your debugging skills. - Example Questions: - “I’m getting an error with my R code, can you help me debug it?” - “What does this error message mean in R?”\n\nAsk about best practices for writing clean and efficient R code. This will help you develop good &gt; coding habits. - Example Questions: - “What are some best practices for writing R code?” - “How can I make my R scripts more efficient?”\n\nSeeing examples can be very helpful. Ask for code snippets to understand how to implement different &gt; functions and methods. - Example Questions: - “Can you show me an example of how to use the print function in R?” - “How do I perform a linear regression in R?”\n\nDon’t hesitate to ask about anything you’re curious about, even if it seems basic. Copilot is here to help you learn at your own pace. - Example Questions: - “What are some good resources for learning R?” - “How do I create a histogram in R?”\n\n\n“How do I extract specific rows from a data frame in R?”\n“What are some common data visualization techniques in R?”\n\nBy leveraging Copilot’s capabilities, you can get personalized assistance and resources tailored to your learning needs. Remember, learning a new language takes time and practice, so be patient with yourself and keep experimenting. Happy coding! If you have any specific questions or need further guidance, feel free to ask!\n\n\n\n\n\nCode generated by Copilot can be a great starting point, but it’s important to review and test it thoroughly. Here are a few tips to ensure the code meets your needs:\n\nReview for Accuracy: Check the logic and syntax to make sure it aligns with your requirements.\nTest Thoroughly: Run tests to ensure the code works as expected in different scenarios.\nSecurity Considerations: Be mindful of potential security vulnerabilities and address them as needed.\nCustomization: Adapt and refine the code to better fit your specific use case.\n\nUsing these practices can help you make the most of Copilot’s assistance while ensuring the quality and reliability of your code. If you have any specific coding questions or need help with a particular piece of code, feel free to ask! 😊",
    "crumbs": [
      "Home",
      "Support",
      "Using Copilot at UoB"
    ]
  },
  {
    "objectID": "copilot.html#copilot-giving-advice-about-how-to-use-copilot",
    "href": "copilot.html#copilot-giving-advice-about-how-to-use-copilot",
    "title": "Using Copilot at University of Birmingham",
    "section": "",
    "text": "Here are some questions with Copilot’s answers to help you decide how and when to use Copilot. Note that Copilot may respond differently if you ask identical prompts.\n\n\n\nStarting to learn R with the help of Copilot can be a smooth and enjoyable process. Here are some steps and tips to get you started:\n\nBegin by asking Copilot to explain fundamental concepts in R. This will give you a solid foundation to build on. - Example Questions: - “What are the basic data types in R?” - “How do I create a vector in R?”\n\nRequest detailed guides for common tasks. This helps you understand the process and logic behind the code. - Example Questions: - “Can you show me how to read a CSV file into R?” - “How do I create a simple plot using ggplot2?”\n\nReinforce your learning by practicing with beginner exercises. This will help you apply what you’ve learned. - Example Questions: - “Can you give me a beginner exercise for data manipulation in R?” - “What are some basic exercises to practice using loops in R?”\n\nLearn about important R packages that can simplify your work. Copilot can introduce you to these packages and show you how to use them. - Example Questions: - “What is the dplyr package and how do I use it?” - “Can you explain how to use the tidyverse package for data analysis?”\n\nWhen you encounter errors, ask Copilot for help in understanding and fixing them. This will improve your debugging skills. - Example Questions: - “I’m getting an error with my R code, can you help me debug it?” - “What does this error message mean in R?”\n\nAsk about best practices for writing clean and efficient R code. This will help you develop good &gt; coding habits. - Example Questions: - “What are some best practices for writing R code?” - “How can I make my R scripts more efficient?”\n\nSeeing examples can be very helpful. Ask for code snippets to understand how to implement different &gt; functions and methods. - Example Questions: - “Can you show me an example of how to use the print function in R?” - “How do I perform a linear regression in R?”\n\nDon’t hesitate to ask about anything you’re curious about, even if it seems basic. Copilot is here to help you learn at your own pace. - Example Questions: - “What are some good resources for learning R?” - “How do I create a histogram in R?”\n\n\n“How do I extract specific rows from a data frame in R?”\n“What are some common data visualization techniques in R?”\n\nBy leveraging Copilot’s capabilities, you can get personalized assistance and resources tailored to your learning needs. Remember, learning a new language takes time and practice, so be patient with yourself and keep experimenting. Happy coding! If you have any specific questions or need further guidance, feel free to ask!\n\n\n\n\n\nCode generated by Copilot can be a great starting point, but it’s important to review and test it thoroughly. Here are a few tips to ensure the code meets your needs:\n\nReview for Accuracy: Check the logic and syntax to make sure it aligns with your requirements.\nTest Thoroughly: Run tests to ensure the code works as expected in different scenarios.\nSecurity Considerations: Be mindful of potential security vulnerabilities and address them as needed.\nCustomization: Adapt and refine the code to better fit your specific use case.\n\nUsing these practices can help you make the most of Copilot’s assistance while ensuring the quality and reliability of your code. If you have any specific coding questions or need help with a particular piece of code, feel free to ask! 😊",
    "crumbs": [
      "Home",
      "Support",
      "Using Copilot at UoB"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_new-data-and-descriptives.html",
    "href": "tutorials/rmb_week-1_new-data-and-descriptives.html",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "This week we will explore how to use Jamovi to compute and visualise descriptive statistics from a dataset. This will include some revision on Jamovi from last semester and an introduction on how we can use the R coding language to simplify complex data processing.\n\n\n\n\n\n\n\n\n\n\nQuantitative Methods\n\n\n\n\n\nMeasures of central tendency (Mean and Median)\n\n\n\nMeasures of dispersion and spread (Standard Deviation and Interquartile Range)\n\n\n\nMeasures of skew and normality\n\n\n\nRecognising different types of distribution\n\n\n\n\n\n\n\n\n\n\n\nData Skills\n\n\n\n\n\nExploring and cleaning datasets Jamovi\n\n\n\nComputing descriptive statistics in Jamovi\n\n\n\nComputing descriptive plots in Jamovi\n\n\n\n\n\n\n\n\n\n\n\nOpen Science\n\n\n\n\n\nWorking with openly available research data\n\n\n\n\n\n\nWe will be exploring data that was collected as part of the ‘Many Labs 3’ project (Ebersole et al. 2016). This collected data from university students in the USA across a wide range of cognitive, behavioural and demographic measures. We will be exploring a subset of this dataset concerning individual differences in personality measures. The experimenters collected data to compute the ‘Big Five’ personality factors from each participant. Wikipedia describes the factors as:\n\nConscientiousness (efficient/organized vs. extravagant/careless)\nAgreeableness (friendly/compassionate vs. critical/rational)\nNeuroticism (sensitive/nervous vs. resilient/confident)\nOpenness to experience (inventive/curious vs. consistent/cautious)\nExtraversion (outgoing/energetic vs. solitary/reserved)\n\nThis is a very simple (Gosling, Rentfrow, and Swann 2003) and influential model that is used to summarise personality differences. Though it is popular, some researchers have criticised big five factors for conceptual and methodological reasons (Block 1995). Read around and form your own view!\nThe data contains the average of two questions about each factor in which participants responded to questions using a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. For example, someone with an extraversion score of 2 is more introverted that someone with an extraversion score of 5.\n\n\n\nWe have data from a sample of students in a big data table. This raw data needs to be summarised and visualised so that we can turn this massive block of numbers into something intuitive.\nWe can generate a concise overview of the main characteristics of the data by computing and visualising few key features from the data.\n\n\n\n\n\n\nOpening Jamovi\n\n\n\nWe’ll be working with Jamovi throughout this practical.\nWorking on campus? You can open Jamovi through AppsAnywhere, either open the desktop application through the start menu on a campus computer or Birmingham’s AppsAnywhere website.\nTake a look at these frequently asked questions or ask your tutor if you get stuck.\nWorking on your own computer? You can install Jamovi (for free!) folling these instructions. Install the ‘Desktop’ application - not the ‘Cloud’ version.\n\n\n\n\n\n\n\n\n\n\n\n\nRevision from RM-A\n\n\n\nThis computer practical will have some revision from RM-A, please check your notes from RM-A for help with loading data and handling variables.\nIf you aren’t familiar with Jamovi, or would like a refresher - please take a quick look at the following topics in the Jamovi user guide\n\nFirst steps in Jamovi\nAnalyses\nThe spreadsheet\n\nPlease ask your tutor for help in the computer practical sessions if you need any assistance.\n\n\n\n\n\n\n\n\nKey step\n\n\n\nLet’s start by loading the dataset into Jamovi. You can download the file ML3AllSites_RMB.csv from canvas.\nYou can import csv files directly into Jamovi. There is more information in the Jamovi Textbook\nIt’s easy to open csv files in Jamovi. From the top left menu (the button with three parallel lines) choose ‘Open’ and browse to where you have stored the csv file on your computer. If you’re on a Mac, it’ll look like the usual Finder window that you use to choose a file; on Windows it looks like an Explorer window. Find the one you want, then click on the ‘Open’ button.\n\n\n\nThis is the original dataset provided by the authors of the paper! It is a massive dataset - take a moment to get familiar with it by answering the following questions.\nSome of the questions will require you to run a descriptive statistics analysis on the age variable. Run what ever you need to explore the data and the questions.\n\n\n\n\n\n\n Data Skills - How many participants are included in the dataset?\n\n\n\n\n\nThere are 2402 participants in total - this is the number of rows in the dataset\n\n\n\n\n\n\n\n\n\n Data Skills - Is the dataset complete? do we have all information from everyone?\n\n\n\n\n\nNo, unfortunately some data is missing from some participants. You can see empty cells in quite a few places across the dataset. This means that some analyses may have an N of less than 2402 for analyses using some of these variables.\n\n\n\n\n\n\n\n\n\n Data Skills - Take a look at the configuration of the Age variable. Is it the correct type?\n\n\n\n\n\nJamovi has to make an educated guess at what type of data is included in each column. Looks like it has correctly set the age variable to be ‘Continuous’.\n\n\n\n\n\n\n\n\n\n Data Skills - How many participants do not have age information?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu.\nThe N for the age descriptives is 2402 and there are 0 missing participants. This is a large sample and there is age information for everyone.\n\n\n\n\n\n\n\n\n\n\n Data Skills - What is the average and standard deviation of the age of the participants?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu.\nThe mean age is 19.3 years, typical for a student population. The standard deviation is 3.81.\nThis means that a participant who is 19.3+3.81 = 23.11 years old would be one standard deviation above the average age of the sample.\n\n\n\n\n\n\n\n\n\n\n Data Skills - Do you think all the information in the age variable is accurate?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu. Try checking the box to show the 5 most extreme values in the dataset under the ‘Statistics -&gt; Outliers’ submenu.\nTake a close look at the variable and its descriptive statistics.\nThe youngest age in the dataset is -2 and the oldest age is 149! neither of these can be true and are probably typos (or jokes) made during data collection. Some other values are unusual but not impossible - the second youngest student is 13. We do not know what has happened during data collection to lead to this as this is not our dataset. We should be careful about interpreting the mean whilst these variables are included…\n\n\n\n\nThis process of exploring and understanding your data is a critical first step when working on a new analysis. Real data is rarely in perfect condition - we have to take some time and apply common sense to understand the data and what challenges there might be when analysing it.\nIf we do identify issues, such are large amounts of missing data, incorrect data types or mistakes in data entry, we can normally fix them - but only if they’ve been spotted! If we assume our data is perfect and go straight to the analysis then we could end up including a 149 year old student in our sample…\n\n\n\nIts probably not a good idea to include the data from the participants with impossible ages in our analysis. One simple step we can take is just to remove those rows from our analysis.\n\n\n\n\n\n\nData Skills - removing rows from a dataset\n\n\n\nRemove the two participants with impossible ages, you can use the extreme values table in the ‘Descriptives’ output to help find the row numbers. You can remove a row in Jamovi by right clicking on the row number (far left of the Data view) and clicking ‘Delete Row’.\n\nThis will not change the original data file (unless you export the data back out again..), it will only affect the view of the data loaded into Jamovi. If you make a mistake you can simply load the original file and start again.\nNotice that the bottom of the data viewer tells you how many rows have been deleted in that dataset.\n\n\n\n\n\n\n\n\nKey step\n\n\n\nNow you can recompute the descriptive statistics of your age variable and see what has changed.\n\n\n\nThe mean is pretty much the same - still 19.3 - but the standard deviation is much smaller now. It has reduced from 3.81 to 2.70. That is a close to 25% reduction in the estimate of the variability of this data - big difference. Including outliers like these can have a large impact on our analyses.\n\n\n\n\n\n\n Critical thinking - Are you happy with the data in the age variable now?\n\n\n\n\n\nTough question! take a look at the Minimum value - we still have one participant who is 13 years old. Whilst this is more likely than finding a -2 or 149 year old student, it is still extremely unlikely. It is harder to make a judgement for this participant than the others. The first two participants had impossible ages, whereas a 13 year old student is just very unlikely. Sometimes we have to make a judgement call.\nLet’s delete row 709 to remove this participant as well.\nThe recomputed descriptive statistics now has an N=2399. Removing the 13 year old hasn’t changed our mean or standard deviation estimates very much - indicating that it was less important to remove this data point than the first two.\nThe youngest participant is now 16 which is more realistic (though still very impressive for that 16 year old!).\n\n\n\nThis process can be intricate and involves a lot of clicking in Jamovi - it would be easy to make a mistake and not notice that something has gone wrong. We’ll explore some faster and more transparent ways to do this using R code during this course.\n\n\n\n\nOk, let’s move on to personality factors. As we said at the top, the big five factors are recorded on a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. So someone with an Extraversion score or 6 might be very outgoing where as someone with a score of 1 would be more of an introvert.\n\n\n\n\n\n\nKey step\n\n\n\nCompute the descriptive statistics for the big 5 personality factors.\nTake some time to consider the data quality - use the questions we answered with age as a guide for what to think about.\n\n\n\nNotice that we have a few missing data values in these variables. Jamovi will remove these from any analyses so they shouldn’t affect our descriptive statistics.\n\n\n\n\n\n\n Critical thinking - Are you happy to use the data in the big 5 personality factors?\n\n\n\n\n\nYes, these look reasonable. The data range matches what we would expect from the rating scales (values between 1 and 7) and there is only a small amount of missing data in each of the five variables.\nWe don’t need to do any further data cleaning based on these descriptive statistics.\n\n\n\n\n\n\n\n\n\n\nCheck Your Understanding 1\n\n\n\nTry your best with this question and don’t forget to speak with your tutor if you get stuck!\n\nQuestionHintSolution\n\n\nYou have reproduced the descriptive statistics for the big 5 personality factors. Now you can do the same for some of the other factors in Table 2 of section 3.5 in Ebersole et al. (2016).\nSpecifically - try and compute the mean and standard deviations for the following factors (Descriptions of the factors are the the cited section of Ebersole et al. (2016)):\n\nSelf Esteem (see section 3.5.1)\nDaily Mood (see section 3.5.3)\nNeed for cognition (see section 3.5.5)\n\nCan you find variables (columns) that correspond to these factors?\nNote: Open datasets sometimes use shorthand for variable names rather than the names used in the manuscript. This is not ideal but does happen in practice! we should be ready take a little time to explore and understand a new dataset when working with it.\n\n\nIn this case the variables in the dataset to use are:\n\n\n\nIn Manuscript\nIn Jamovi\n\n\n\n\nSelf Esteem\n‘SelfEsteem’\n\n\nDaily Mood.\n‘Mood’\n\n\nNeed for cognition\n‘NFC’\n\n\n\nTalk to your tutor if you’re getting stuck.\n\n\nYou should be able to reproduce the following table. Verify that the computed Mean and Standard Deviations match those published in table 2 of Ebersole et al (2016)\n\nThe final mean values are very close to the values in Ebersole et al. (2016) - but not identical. Looks like the original paper kept in all the data that had missing or unusual age values.\n\n\n\n\n\nNext, let’s think about the distributions of these variables. Its great to think about summarising a dataset with its mean value, but this doesn’t tell us about the wider distribution.\n\n\n\n\nNext we’ll have a look at computing histograms from this data. Remember that histograms divide the data range into intervals called bins. The choice of bin width and number of bins can affect the appearance and interpretation of the histogram. Most of the time we can use the automatic bin definitions provided by Jamovi.\nWe can use Histograms to explore a few key factors of the wider data distributions that are hard to see from the descriptive statistics tables.\n\nShape: The shape of the histogram can reveal the distribution pattern of the data, such as normal distribution, skewness, or bimodality.\nOutliers: Histograms can help identify outliers or unusual data points that fall outside the general pattern.\n\nJamovi makes it very simple to compute a histogram. Open the ‘Plots’ sub-menu of the descriptive statistics tab and select the ‘Histogram’ checkbox.\n\n\n\n\n\n\nKey step\n\n\n\nCompute a histogram of the participant ages\n\n\n\nThe descriptives tables give us a numerical summary of the data - but this can be hard to build an intuitive understanding of the dataset. A histogram gives us something immediately interpretable on a more ‘human’ level. Have a think about the following questions.\n\n\n\n\n\n\n Data Skills - What is the average age of the pariticpants in this dataset?\n\n\n\n\n\nWe can see that the most common ages are clustered around the late teenage years and early 20s. We can’t tell the exact mean from the histogram alone - we need to compute the descriptives table for this - but histograms are good to get a quick ‘sense’ of the data.\n\n\n\nIf you haven’t heard about the ‘normal distribution’ in your previous studies, this is a good opportunity to ask Copilot to give you a simple explanation.\n\n\n\n\n\n\n Data Skills - Do the ages look normally distributed?\n\n\n\n\n\nThere is a long tail to this distribution with a very small number of participants in their 30s, 40s and 50s. This is a strong positive skew and likely indicates that the data are not normally distributed.\nThis would be hard to tell from the descriptives table alone.\nOverall, this is a good match for what we would expect from a student population at a large university.\n\n\n\nWe can get an alternative perspective by visualising our data using a ‘Box Plot’.\n\n\n\n\n\n\nKey step\n\n\n\nCompute a Box plot of the participant ages\n\n\n\nThe boxplot visualises the median and interquartile range (25th to 75th percentile) of the data, as well as highlighting outliers. This gives us less resolution around the middle of the distribution close to the median - but does give a much clearer view of the long tail in the ages of the student data sample.\n\n\n\n\n\n\n Data Skills - How old is the oldest participant in the dataset??\n\n\n\n\n\nThe most extreme outliers in the dataset are labelled with their row ID in the boxplot. The largest age value is in row 1081 - it looks like this is around 55 in the boxplot.\nWe can check the corresponding row in the data table to get some more precision. This tells us that the oldest participant is exactly 54 years old.\n\n\n\n\n\n\n\n\n\n\nCheck Your Understanding 2\n\n\n\nTry your best with this question and don’t forget to speak with your tutor if you get stuck!\n\nQuestionHintSolution\n\n\nCompute histograms and/or boxplots for the big-5 personality factors and take some notes their distributions. Think about the following questions for each factor:\n\nIs the distribution symmetric?\nIf not, is there a positive or a negative skew?\nAre there any outliers?\n\nWrite some quick notes on your answers - we’ll use these again in the next section\n\n\nIt might be easiest to do this one factor at a time to avoid being swamped with figures!\nCreate the figure for a single factor, make some notes and make the next figure with the next factor. You can consider saving the figure into a notebook or document if you want to make a more controlled comparison.\nIf you aren’t sure about any of the concepts - this is a good opportunity to ask your tutors in the session - or use Copilot to give you a simple explanation.\n\n\nHere are my notes about each distribution:\n\nOpenness, this does not look like a normal distribution - there is a negative skew in the data.\nConscientiousness, this is definitely not a normal distribution - there is a strong negative skew.\nExtraversion, this is close to being a normal distribution - perhaps a very slight negative skew.\nAgreeableness, this does not look like a normal distribution - there is a negative skew in the data.\nNeuroticism, this does not look like a normal distribution - there is a positive skew in the data.\n\nNone of the factors have obvious outliers.\n\n\n\n\n\n\n\n\nAs a final step, we can see if our intuitions about the distribution of big-5 personality factors match with more formal statistics measures checking for normal distributions and skewness.\n\n\n\n\n\n\nKey step\n\n\n\nCompute statistics Shapero-Wilk’s test for normality and for ‘Skewness’. You can add both of these tests from the ‘Statistics’ sub-menu of the Descriptives analysis.\n\n\n\n\n\nThe Shapiro-Wilk test evaluates whether a sample comes from a normally distributed population. It returns 2 values:\n\n‘W’ The W statistic measures how well the data conforms to a normal distribution. It ranges from 0 to 1 where values close to 1 indicate the data is normally distributed.\n‘p’ is a p-value indicating the probability that we could see a value of W at least as large as the one we have measured if the data really were normally distributed. Typically, we would say that the data are not normally distributed if p is less than or equal to 0.05.\n\n\n\n\n\n\n\n Data Skills - Do our notes from the histograms match the Shapiro-Wilk statistics?\n\n\n\n\n\nYes, If we look at the W statistics, then we see that Extraversion has the highest value indicating that it has the most ‘normal’ data distribution whilst the other four factors are similar. This matches what we saw with the histograms.\nThe p-values from the formal hypothesis test indicate that none of the 5 factors have normal distributions. We couldn’t tell this from our informal evaulation of the histograms and box plots.\n\n\n\n\n\n\nThe skewness metric returns a number close to zero if the data are symmetrical around zero, and a number close to +1 or -1 if the data are skewed. The sign of the skewness value indicates whether there is a positive or a negative skew.\n\n\n\n\n\n\n Data Skills - Do our notes from the histograms match the skewness statistic?\n\n\n\n\n\nYes, its very close. We can see that ‘Extraversion’ has the least skew with a Skewness metric very close to zero (-0.0714). In contrast, ‘Conscientiousness’ has the most skew. Its value of ‘-0.656’ indicates a very substantial negative skewness in the distribution.\nOpenness and Agreeableness have moderate negative skews, whilst Neuroticism has a moderate positive skew.\n\n\n\n\n\n\n\nIn this session we have gone through the process of exploring a dataset from a published scientific article. We have computed a range of descriptive statistics and used histograms and boxplots to visualise the dataset.\nIt is common for publicly available data to contain little mistakes and issues. We need to go through a process like this with every new dataset and it should be like second nature by the end of this module. Remember to use common sense and practical thinking to identify issues and think about possible solutions.\nRemember this process when collecting your own data. Think carefully about how you can avoid typos and mistakes when collecting a dataset. It can save you and your collaborators a lot of time in future!\n\n\n\n\n\nBlock, Jack. 1995. “A Contrarian View of the Five-Factor Approach to Personality Description.” Psychological Bulletin 117 (2): 187–215. https://doi.org/10.1037/0033-2909.117.2.187.\n\n\nEbersole, Charles R., Olivia E. Atherton, Aimee L. Belanger, Hayley M. Skulborstad, Jill M. Allen, Jonathan B. Banks, Erica Baranski, et al. 2016. “Many Labs 3: Evaluating Participant Pool Quality Across the Academic Semester via Replication.” Journal of Experimental Social Psychology 67: 68–82. https://doi.org/https://doi.org/10.1016/j.jesp.2015.10.012.\n\n\nGosling, Samuel D, Peter J Rentfrow, and William B Swann. 2003. “A Very Brief Measure of the Big-Five Personality Domains.” Journal of Research in Personality 37 (6): 504–28. https://doi.org/10.1016/s0092-6566(03)00046-1.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_new-data-and-descriptives.html#the-dataset",
    "href": "tutorials/rmb_week-1_new-data-and-descriptives.html#the-dataset",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "We will be exploring data that was collected as part of the ‘Many Labs 3’ project (Ebersole et al. 2016). This collected data from university students in the USA across a wide range of cognitive, behavioural and demographic measures. We will be exploring a subset of this dataset concerning individual differences in personality measures. The experimenters collected data to compute the ‘Big Five’ personality factors from each participant. Wikipedia describes the factors as:\n\nConscientiousness (efficient/organized vs. extravagant/careless)\nAgreeableness (friendly/compassionate vs. critical/rational)\nNeuroticism (sensitive/nervous vs. resilient/confident)\nOpenness to experience (inventive/curious vs. consistent/cautious)\nExtraversion (outgoing/energetic vs. solitary/reserved)\n\nThis is a very simple (Gosling, Rentfrow, and Swann 2003) and influential model that is used to summarise personality differences. Though it is popular, some researchers have criticised big five factors for conceptual and methodological reasons (Block 1995). Read around and form your own view!\nThe data contains the average of two questions about each factor in which participants responded to questions using a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. For example, someone with an extraversion score of 2 is more introverted that someone with an extraversion score of 5.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_new-data-and-descriptives.html#the-challenge",
    "href": "tutorials/rmb_week-1_new-data-and-descriptives.html#the-challenge",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "We have data from a sample of students in a big data table. This raw data needs to be summarised and visualised so that we can turn this massive block of numbers into something intuitive.\nWe can generate a concise overview of the main characteristics of the data by computing and visualising few key features from the data.\n\n\n\n\n\n\nOpening Jamovi\n\n\n\nWe’ll be working with Jamovi throughout this practical.\nWorking on campus? You can open Jamovi through AppsAnywhere, either open the desktop application through the start menu on a campus computer or Birmingham’s AppsAnywhere website.\nTake a look at these frequently asked questions or ask your tutor if you get stuck.\nWorking on your own computer? You can install Jamovi (for free!) folling these instructions. Install the ‘Desktop’ application - not the ‘Cloud’ version.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_new-data-and-descriptives.html#exploring-a-new-dataset-in-jamovi",
    "href": "tutorials/rmb_week-1_new-data-and-descriptives.html#exploring-a-new-dataset-in-jamovi",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "Revision from RM-A\n\n\n\nThis computer practical will have some revision from RM-A, please check your notes from RM-A for help with loading data and handling variables.\nIf you aren’t familiar with Jamovi, or would like a refresher - please take a quick look at the following topics in the Jamovi user guide\n\nFirst steps in Jamovi\nAnalyses\nThe spreadsheet\n\nPlease ask your tutor for help in the computer practical sessions if you need any assistance.\n\n\n\n\n\n\n\n\nKey step\n\n\n\nLet’s start by loading the dataset into Jamovi. You can download the file ML3AllSites_RMB.csv from canvas.\nYou can import csv files directly into Jamovi. There is more information in the Jamovi Textbook\nIt’s easy to open csv files in Jamovi. From the top left menu (the button with three parallel lines) choose ‘Open’ and browse to where you have stored the csv file on your computer. If you’re on a Mac, it’ll look like the usual Finder window that you use to choose a file; on Windows it looks like an Explorer window. Find the one you want, then click on the ‘Open’ button.\n\n\n\nThis is the original dataset provided by the authors of the paper! It is a massive dataset - take a moment to get familiar with it by answering the following questions.\nSome of the questions will require you to run a descriptive statistics analysis on the age variable. Run what ever you need to explore the data and the questions.\n\n\n\n\n\n\n Data Skills - How many participants are included in the dataset?\n\n\n\n\n\nThere are 2402 participants in total - this is the number of rows in the dataset\n\n\n\n\n\n\n\n\n\n Data Skills - Is the dataset complete? do we have all information from everyone?\n\n\n\n\n\nNo, unfortunately some data is missing from some participants. You can see empty cells in quite a few places across the dataset. This means that some analyses may have an N of less than 2402 for analyses using some of these variables.\n\n\n\n\n\n\n\n\n\n Data Skills - Take a look at the configuration of the Age variable. Is it the correct type?\n\n\n\n\n\nJamovi has to make an educated guess at what type of data is included in each column. Looks like it has correctly set the age variable to be ‘Continuous’.\n\n\n\n\n\n\n\n\n\n Data Skills - How many participants do not have age information?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu.\nThe N for the age descriptives is 2402 and there are 0 missing participants. This is a large sample and there is age information for everyone.\n\n\n\n\n\n\n\n\n\n\n Data Skills - What is the average and standard deviation of the age of the participants?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu.\nThe mean age is 19.3 years, typical for a student population. The standard deviation is 3.81.\nThis means that a participant who is 19.3+3.81 = 23.11 years old would be one standard deviation above the average age of the sample.\n\n\n\n\n\n\n\n\n\n\n Data Skills - Do you think all the information in the age variable is accurate?\n\n\n\n\n\nYou can compute this information from the ‘Exploration -&gt; Descriptives’ menu. Try checking the box to show the 5 most extreme values in the dataset under the ‘Statistics -&gt; Outliers’ submenu.\nTake a close look at the variable and its descriptive statistics.\nThe youngest age in the dataset is -2 and the oldest age is 149! neither of these can be true and are probably typos (or jokes) made during data collection. Some other values are unusual but not impossible - the second youngest student is 13. We do not know what has happened during data collection to lead to this as this is not our dataset. We should be careful about interpreting the mean whilst these variables are included…\n\n\n\n\nThis process of exploring and understanding your data is a critical first step when working on a new analysis. Real data is rarely in perfect condition - we have to take some time and apply common sense to understand the data and what challenges there might be when analysing it.\nIf we do identify issues, such are large amounts of missing data, incorrect data types or mistakes in data entry, we can normally fix them - but only if they’ve been spotted! If we assume our data is perfect and go straight to the analysis then we could end up including a 149 year old student in our sample…",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_new-data-and-descriptives.html#data-cleaning",
    "href": "tutorials/rmb_week-1_new-data-and-descriptives.html#data-cleaning",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "Its probably not a good idea to include the data from the participants with impossible ages in our analysis. One simple step we can take is just to remove those rows from our analysis.\n\n\n\n\n\n\nData Skills - removing rows from a dataset\n\n\n\nRemove the two participants with impossible ages, you can use the extreme values table in the ‘Descriptives’ output to help find the row numbers. You can remove a row in Jamovi by right clicking on the row number (far left of the Data view) and clicking ‘Delete Row’.\n\nThis will not change the original data file (unless you export the data back out again..), it will only affect the view of the data loaded into Jamovi. If you make a mistake you can simply load the original file and start again.\nNotice that the bottom of the data viewer tells you how many rows have been deleted in that dataset.\n\n\n\n\n\n\n\n\nKey step\n\n\n\nNow you can recompute the descriptive statistics of your age variable and see what has changed.\n\n\n\nThe mean is pretty much the same - still 19.3 - but the standard deviation is much smaller now. It has reduced from 3.81 to 2.70. That is a close to 25% reduction in the estimate of the variability of this data - big difference. Including outliers like these can have a large impact on our analyses.\n\n\n\n\n\n\n Critical thinking - Are you happy with the data in the age variable now?\n\n\n\n\n\nTough question! take a look at the Minimum value - we still have one participant who is 13 years old. Whilst this is more likely than finding a -2 or 149 year old student, it is still extremely unlikely. It is harder to make a judgement for this participant than the others. The first two participants had impossible ages, whereas a 13 year old student is just very unlikely. Sometimes we have to make a judgement call.\nLet’s delete row 709 to remove this participant as well.\nThe recomputed descriptive statistics now has an N=2399. Removing the 13 year old hasn’t changed our mean or standard deviation estimates very much - indicating that it was less important to remove this data point than the first two.\nThe youngest participant is now 16 which is more realistic (though still very impressive for that 16 year old!).\n\n\n\nThis process can be intricate and involves a lot of clicking in Jamovi - it would be easy to make a mistake and not notice that something has gone wrong. We’ll explore some faster and more transparent ways to do this using R code during this course.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_new-data-and-descriptives.html#descriptives-from-big-5-personality-factors",
    "href": "tutorials/rmb_week-1_new-data-and-descriptives.html#descriptives-from-big-5-personality-factors",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "Ok, let’s move on to personality factors. As we said at the top, the big five factors are recorded on a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. So someone with an Extraversion score or 6 might be very outgoing where as someone with a score of 1 would be more of an introvert.\n\n\n\n\n\n\nKey step\n\n\n\nCompute the descriptive statistics for the big 5 personality factors.\nTake some time to consider the data quality - use the questions we answered with age as a guide for what to think about.\n\n\n\nNotice that we have a few missing data values in these variables. Jamovi will remove these from any analyses so they shouldn’t affect our descriptive statistics.\n\n\n\n\n\n\n Critical thinking - Are you happy to use the data in the big 5 personality factors?\n\n\n\n\n\nYes, these look reasonable. The data range matches what we would expect from the rating scales (values between 1 and 7) and there is only a small amount of missing data in each of the five variables.\nWe don’t need to do any further data cleaning based on these descriptive statistics.\n\n\n\n\n\n\n\n\n\n\nCheck Your Understanding 1\n\n\n\nTry your best with this question and don’t forget to speak with your tutor if you get stuck!\n\nQuestionHintSolution\n\n\nYou have reproduced the descriptive statistics for the big 5 personality factors. Now you can do the same for some of the other factors in Table 2 of section 3.5 in Ebersole et al. (2016).\nSpecifically - try and compute the mean and standard deviations for the following factors (Descriptions of the factors are the the cited section of Ebersole et al. (2016)):\n\nSelf Esteem (see section 3.5.1)\nDaily Mood (see section 3.5.3)\nNeed for cognition (see section 3.5.5)\n\nCan you find variables (columns) that correspond to these factors?\nNote: Open datasets sometimes use shorthand for variable names rather than the names used in the manuscript. This is not ideal but does happen in practice! we should be ready take a little time to explore and understand a new dataset when working with it.\n\n\nIn this case the variables in the dataset to use are:\n\n\n\nIn Manuscript\nIn Jamovi\n\n\n\n\nSelf Esteem\n‘SelfEsteem’\n\n\nDaily Mood.\n‘Mood’\n\n\nNeed for cognition\n‘NFC’\n\n\n\nTalk to your tutor if you’re getting stuck.\n\n\nYou should be able to reproduce the following table. Verify that the computed Mean and Standard Deviations match those published in table 2 of Ebersole et al (2016)\n\nThe final mean values are very close to the values in Ebersole et al. (2016) - but not identical. Looks like the original paper kept in all the data that had missing or unusual age values.\n\n\n\n\n\nNext, let’s think about the distributions of these variables. Its great to think about summarising a dataset with its mean value, but this doesn’t tell us about the wider distribution.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_new-data-and-descriptives.html#visualising-distributions",
    "href": "tutorials/rmb_week-1_new-data-and-descriptives.html#visualising-distributions",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "Next we’ll have a look at computing histograms from this data. Remember that histograms divide the data range into intervals called bins. The choice of bin width and number of bins can affect the appearance and interpretation of the histogram. Most of the time we can use the automatic bin definitions provided by Jamovi.\nWe can use Histograms to explore a few key factors of the wider data distributions that are hard to see from the descriptive statistics tables.\n\nShape: The shape of the histogram can reveal the distribution pattern of the data, such as normal distribution, skewness, or bimodality.\nOutliers: Histograms can help identify outliers or unusual data points that fall outside the general pattern.\n\nJamovi makes it very simple to compute a histogram. Open the ‘Plots’ sub-menu of the descriptive statistics tab and select the ‘Histogram’ checkbox.\n\n\n\n\n\n\nKey step\n\n\n\nCompute a histogram of the participant ages\n\n\n\nThe descriptives tables give us a numerical summary of the data - but this can be hard to build an intuitive understanding of the dataset. A histogram gives us something immediately interpretable on a more ‘human’ level. Have a think about the following questions.\n\n\n\n\n\n\n Data Skills - What is the average age of the pariticpants in this dataset?\n\n\n\n\n\nWe can see that the most common ages are clustered around the late teenage years and early 20s. We can’t tell the exact mean from the histogram alone - we need to compute the descriptives table for this - but histograms are good to get a quick ‘sense’ of the data.\n\n\n\nIf you haven’t heard about the ‘normal distribution’ in your previous studies, this is a good opportunity to ask Copilot to give you a simple explanation.\n\n\n\n\n\n\n Data Skills - Do the ages look normally distributed?\n\n\n\n\n\nThere is a long tail to this distribution with a very small number of participants in their 30s, 40s and 50s. This is a strong positive skew and likely indicates that the data are not normally distributed.\nThis would be hard to tell from the descriptives table alone.\nOverall, this is a good match for what we would expect from a student population at a large university.\n\n\n\nWe can get an alternative perspective by visualising our data using a ‘Box Plot’.\n\n\n\n\n\n\nKey step\n\n\n\nCompute a Box plot of the participant ages\n\n\n\nThe boxplot visualises the median and interquartile range (25th to 75th percentile) of the data, as well as highlighting outliers. This gives us less resolution around the middle of the distribution close to the median - but does give a much clearer view of the long tail in the ages of the student data sample.\n\n\n\n\n\n\n Data Skills - How old is the oldest participant in the dataset??\n\n\n\n\n\nThe most extreme outliers in the dataset are labelled with their row ID in the boxplot. The largest age value is in row 1081 - it looks like this is around 55 in the boxplot.\nWe can check the corresponding row in the data table to get some more precision. This tells us that the oldest participant is exactly 54 years old.\n\n\n\n\n\n\n\n\n\n\nCheck Your Understanding 2\n\n\n\nTry your best with this question and don’t forget to speak with your tutor if you get stuck!\n\nQuestionHintSolution\n\n\nCompute histograms and/or boxplots for the big-5 personality factors and take some notes their distributions. Think about the following questions for each factor:\n\nIs the distribution symmetric?\nIf not, is there a positive or a negative skew?\nAre there any outliers?\n\nWrite some quick notes on your answers - we’ll use these again in the next section\n\n\nIt might be easiest to do this one factor at a time to avoid being swamped with figures!\nCreate the figure for a single factor, make some notes and make the next figure with the next factor. You can consider saving the figure into a notebook or document if you want to make a more controlled comparison.\nIf you aren’t sure about any of the concepts - this is a good opportunity to ask your tutors in the session - or use Copilot to give you a simple explanation.\n\n\nHere are my notes about each distribution:\n\nOpenness, this does not look like a normal distribution - there is a negative skew in the data.\nConscientiousness, this is definitely not a normal distribution - there is a strong negative skew.\nExtraversion, this is close to being a normal distribution - perhaps a very slight negative skew.\nAgreeableness, this does not look like a normal distribution - there is a negative skew in the data.\nNeuroticism, this does not look like a normal distribution - there is a positive skew in the data.\n\nNone of the factors have obvious outliers.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_new-data-and-descriptives.html#computing-statistics-for-normality-and-skewness.",
    "href": "tutorials/rmb_week-1_new-data-and-descriptives.html#computing-statistics-for-normality-and-skewness.",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "As a final step, we can see if our intuitions about the distribution of big-5 personality factors match with more formal statistics measures checking for normal distributions and skewness.\n\n\n\n\n\n\nKey step\n\n\n\nCompute statistics Shapero-Wilk’s test for normality and for ‘Skewness’. You can add both of these tests from the ‘Statistics’ sub-menu of the Descriptives analysis.\n\n\n\n\n\nThe Shapiro-Wilk test evaluates whether a sample comes from a normally distributed population. It returns 2 values:\n\n‘W’ The W statistic measures how well the data conforms to a normal distribution. It ranges from 0 to 1 where values close to 1 indicate the data is normally distributed.\n‘p’ is a p-value indicating the probability that we could see a value of W at least as large as the one we have measured if the data really were normally distributed. Typically, we would say that the data are not normally distributed if p is less than or equal to 0.05.\n\n\n\n\n\n\n\n Data Skills - Do our notes from the histograms match the Shapiro-Wilk statistics?\n\n\n\n\n\nYes, If we look at the W statistics, then we see that Extraversion has the highest value indicating that it has the most ‘normal’ data distribution whilst the other four factors are similar. This matches what we saw with the histograms.\nThe p-values from the formal hypothesis test indicate that none of the 5 factors have normal distributions. We couldn’t tell this from our informal evaulation of the histograms and box plots.\n\n\n\n\n\n\nThe skewness metric returns a number close to zero if the data are symmetrical around zero, and a number close to +1 or -1 if the data are skewed. The sign of the skewness value indicates whether there is a positive or a negative skew.\n\n\n\n\n\n\n Data Skills - Do our notes from the histograms match the skewness statistic?\n\n\n\n\n\nYes, its very close. We can see that ‘Extraversion’ has the least skew with a Skewness metric very close to zero (-0.0714). In contrast, ‘Conscientiousness’ has the most skew. Its value of ‘-0.656’ indicates a very substantial negative skewness in the distribution.\nOpenness and Agreeableness have moderate negative skews, whilst Neuroticism has a moderate positive skew.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_new-data-and-descriptives.html#summary",
    "href": "tutorials/rmb_week-1_new-data-and-descriptives.html#summary",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "In this session we have gone through the process of exploring a dataset from a published scientific article. We have computed a range of descriptive statistics and used histograms and boxplots to visualise the dataset.\nIt is common for publicly available data to contain little mistakes and issues. We need to go through a process like this with every new dataset and it should be like second nature by the end of this module. Remember to use common sense and practical thinking to identify issues and think about possible solutions.\nRemember this process when collecting your own data. Think carefully about how you can avoid typos and mistakes when collecting a dataset. It can save you and your collaborators a lot of time in future!",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-1_new-data-and-descriptives.html#references",
    "href": "tutorials/rmb_week-1_new-data-and-descriptives.html#references",
    "title": "Week 1 : Exploring new data and computing descriptives",
    "section": "",
    "text": "Block, Jack. 1995. “A Contrarian View of the Five-Factor Approach to Personality Description.” Psychological Bulletin 117 (2): 187–215. https://doi.org/10.1037/0033-2909.117.2.187.\n\n\nEbersole, Charles R., Olivia E. Atherton, Aimee L. Belanger, Hayley M. Skulborstad, Jill M. Allen, Jonathan B. Banks, Erica Baranski, et al. 2016. “Many Labs 3: Evaluating Participant Pool Quality Across the Academic Semester via Replication.” Journal of Experimental Social Psychology 67: 68–82. https://doi.org/https://doi.org/10.1016/j.jesp.2015.10.012.\n\n\nGosling, Samuel D, Peter J Rentfrow, and William B Swann. 2003. “A Very Brief Measure of the Big-Five Personality Domains.” Journal of Research in Personality 37 (6): 504–28. https://doi.org/10.1016/s0092-6566(03)00046-1.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 1 - New data and descriptives"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "This week we will explore how to use Jamovi to compute and visualise descriptive statistics from a dataset. This will include some revision on Jamovi from last semester and an introduction on how we can use the R coding language to simplify complex data processing.\n\nLearning objectives for this session\n\n\n\n\n\n\n\nQuantitative Methods\n\n\n\n\n\nMeasures of central tendency\n\n\n\nMeasures of dispersion and spread\n\n\n\nMeasures of skew and normality\n\n\n\n\n\n\n\n\n\n\n\nData Skills\n\n\n\n\n\nWorking with the Rj editor to use R code within Jamovi\n\n\n\nLearn the basics about functions and variables in R\n\n\n\nComputing descriptive statistics using R\n\n\n\n\n\n\n\n\n\n\n\nOpen Science\n\n\n\n\n\nValidating and working with openly available research data\n\n\n\nCreate a reproducible data analysis script\n\n\n\n\n\n\n\n\n\n\n\nDataset\n\n\n\nNote that this is the same dataset as in week 1\n\n\nWe will be exploring data that was collected as part of the ‘Many Labs 3’ project (Ebersole et al. 2016). This collected data from university students in the USA across a wide range of cognitive, behavioural and demographic measures. We will be exploring a subset of this dataset concerning individual differences in personality measures. The experimenters collected data to compute the ‘Big Five’ personality factors from each participant. Wikipedia describes the factors as:\n\nConscientiousness (efficient/organized vs. extravagant/careless)\nAgreeableness (friendly/compassionate vs. critical/rational)\nNeuroticism (sensitive/nervous vs. resilient/confident)\nOpenness to experience (inventive/curious vs. consistent/cautious)\nExtraversion (outgoing/energetic vs. solitary/reserved)\n\nThis is a very simple (Gosling, Rentfrow, and Swann 2003) and influential model that is used to summarise personality differences. Though it is popular, some researchers have criticised big five factors for conceptual and methodological reasons (Block 1995). Read around and form your own view!\nThe data contains the average of two questions about each factor in which participants responded to questions using a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. For example, someone with an extraversion score of 2 is more introverted that someone with an extraversion score of 5.\n\n\n\nLast week, we looked at how we can spend some time understanding a new dataset and compute some descriptive statistics from it.\nNow, we’re going to learn how to use Jamovi and R to make this process more repeatable and more transparent. This will make it much easier for us to come back to the analysis and understand what steps were taken at a later date.\n\n\n\n\n\n\nOpening Jamovi\n\n\n\nWe’ll be working with Jamovi throughout this practical.\nWorking on campus? You can open Jamovi through AppsAnywhere, either open the desktop application through the start menu on a campus computer or Birmingham’s AppsAnywhere website.\nTake a look at these frequently asked questions or ask your tutor if you get stuck.\nWorking on your own computer? You can install Jamovi (for free!) folling these instructions. Install the ‘Desktop’ application - not the ‘Cloud’ version.\n\n\n\n\n\nWe’ll be working with the Rj Add-On for Jamovi this week.\n\n\n\n\n\n\nKey step\n\n\n\nBefore continuing, install the Rj add-on for jamovi following the guide for installing Jamovi modules. Once installed you should have a new button on the Ribbon menu at the top of Jamovi…\n\n\n\nClick on this and select ‘Rj Editor’ to open a window in which we can write R code! Click on the small cog icon and make sure that ‘Output’ is set to ‘Show code and output’.\n\nWe can use the left-hand window, named Rj editor, to write commands, using the R language. These are the straightforward text commands that tell the computer a series of steps that we wanted to carry out. These commands can be edited and rerun as many times as we need, they can even be shared with collaborators and included as part of scientific publication.\nThis is a very powerful tool once we have a written set of instructions to work with rather than individually clicking through instructions. Though it takes a bit longer to write the commands, our analysis is much more transparent and reproducible once it is done.\nThe outputs of the analysis defined in the Rj editor appear on the right-hand side of the Jamovi window as usual. To check this out, let’s explore using or as a calculator.\n\n\n\n\n\n\nData Skills - R as a calculator\n\n\n\nTry typing a set of sums or equations into the Rj editor. Include one sum on each line and include as many as you like. When you’re ready, you can tell RJ to run the commands by clicking on the green triangle in the top right corner of the RJ editor. This will automatically compute. All of the sums you to find and print the results out in the right hand side window. see the example below.\nYou can use the following symbols to define your sums.\n\n\n\nSymbol\nOperation\n\n\n\n\n+\nAdd\n\n\n-\nSubtract\n\n\n*\nMultiply\n\n\n/\nDivide\n\n\n\n\n\n\n\n\n\n\nOften, we don’t just want to see the result of a calculation, we want to store the result to use again later. For this, we want to use variables. For example, here we store the result of a calculator sum in a variable named ‘y’\ny &lt;- 2 + 2\nIf you run this in Rj, you’ll notice that we no longer get the number 4 printed to the screen. This is as the output is now caught and stored rather than printed out. If we still want to see what is contained in y, we can use another helpful function named print.\ny &lt;- 2 + 2\nprint(y)\nWill now also display the content of y.\n\n\n\n\n\n\nDefinition of a variable\n\n\n\nA variable is an object that provides a labelled space to store information. The &lt;- or = symbols indicate that we’re assigning some information to a variable (the two symbols behave the same way, you could see either).\nCrucially, the information on the right hand side is assigned to a variable with the name from the left hand side.\n\n\n\n\n\n\n\n\nCheck Your Understanding with Copilot (Optional)\n\n\n\nTry asking Copilot for more information about variables in R. We suggest you try the following prompts to get started.\n\n“Write a simple description of variables in R for a beginner”\n“How can I choose a name for my variable in R”\n\nMake sure to ask follow up questions if you would like more information. Remember to talk with your session tutors if you get stuck.\n\n\nNotice that the one of the equations in my example is a bit different to the others. The final example uses a function called sqrt as a shortcut to compute the square root of the number nine.\nThe sqrt function calculates the square root of a given number. In R code, this looks something like this:\nsqrt(x)\nwith the ‘x’ replaced by any number. For example, we could compute the square root of 36 using the following command.\nsqrt(36)\nAdd this line to your Rj editor and check the result..\nMany functions, take inputs contained in parentheses written after the name of the function. These inputs are sometimes known as the arguments of a function. In the last example, 36 is an argument for the function sqrt.\nSometimes functions take several arguments, and the arguments themselves can have specific names. For example.\nround(12.345, digits = 0)\nwill round the value x to a whole number with zero digits after the decimal point. Where as\nround(12.345, digits = 2)\nwould round the same number to preserve 2 digits after the decimal point. Try running these examples in Rj with a range of different numbers to get a sense of how it works.\n\n\n\n\n\n\nDefinition of a function\n\n\n\nFunctions are used to perform specific, predefined tasks, such as calculations, data transformations, or visualization. You can think of it as a “black box” that takes in a value, performs some internal calculation, and returns the result.\n\n\n\n\n\n\n\n\nCheck Your Understanding with Copilot (Optional)\n\n\n\nTry asking Copilot for more information about functions in R. We suggest you try the following prompts to get started.\n\n“Write a simple description of functions in R for a beginner”\n\nMake sure to ask follow up questions if you would like more information. Remember to talk with your session tutors if you get stuck.\n\n\nA single analysis might have several lines of code that create, store and reuse a several different variables with several different functions. For example:\n\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat does this R code do? what is the value of x, y and z?\n x &lt;- 10 + 10\n y &lt;- sqrt(16)\n z &lt;- x / y\n\n\nTry copying out and running the code in Rj.\nYou can add some print functions to see the value of the intermediate variables x and y as well. Try adding print(x) on the line immediately after x is defined.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final answers:\nx is 20 and y is 4, so z = 20 / 4 which is 5.\n\n\n\n\n\n\n\nRj has a special feature that the data loaded into our spreadsheet is always contained in a special variable named data. We can refer to this data variable to view and run analyses on our dataset.\n\n\n\n\n\n\n\n\n\nKey step\n\n\n\nTake a moment to load the data file into Jamovi and compute the descriptive statistics for the big five personality factors again.\n\n\n\nThe data we have loaded into our Jamovi session can be accessed in Rj with the data variable. Jamovi automatically makes the data available for us in the R environment.\nWe can view and interact with the data here as well. For example, to view the first few rows of the dataset you can run the head function and pass in data as an argument.\nhead(data)\nand to view the last few rows, you can do the same with the tail function.\ntail(data)\nOften, we’ll only want to work with a subset of the columns in a data frame at any given time. We can access individual columns using the dollar operator. For example, this code will access the age column within the loaded dataset.\ndata$age\nLet’s break this command down into its pieces:\n\n\n\n\n\n\n\nR code\nMeaning\n\n\n\n\ndata\nthis is the name of the whole data array we have loaded in\n\n\n$\nthis is a separator that R uses to help us access subsections of datasets\n\n\nage\nThis is the name of a single column we want to access\n\n\n\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nCan you access the column of Mood scores from the same dataset?\n\n\nYou can use the head function to see the list of all available columns in the dataset. The example above accesses the ‘age’ column, you can tweak this to extract the mood data instead.\n\n\nThe final code should look like this\ndata$Mood\n\n\n\n\n\nWe can also apply functions to these variables. R includes a wide range of standard mathmatical functions that we can use for common computations. This code computes the mean of the age data in our dataset.\nmean(data$age)\nTry running this in Rj. You should get the answer 19.3 - this matches the value we computed using the descriptives analysis last week.\nSimilarly, the following function computes the standard deviation\nsd(data$age)\nIf you run this, you should get the answer 3.808.\n\n\n\nOk, back to statistics! How can we use our new R skills to compute statistics?\nThe trick is to understand that all the analyses in Jamovi are actually carried out by functions in R. Each analysis we can select from the top ribbon in Jamovi corresponds to a function that can be called in the code. Similarly, all of the options that we select in the analysis, dialogue boxes, correspond to arguments for that function. Let’s take a look in practice.\nJamovi provides a collection of R functions that correspond to each analysis dialogue box in Jamovi. This package of functions is named jmv. Thejmv function that computes descriptive statistics is called:\njmv::descriptives\nHere we first name the jmv package specify the descriptives function within it (this link is made with the two colons).\nWe can compute the descriptive statistics for age by passing the data into the function and specifying that we want to use the age variable. Try running the following:\njmv::descriptives(data, vars='age')\nand you should generate the following result table.\n\n\n\n\n\n\n\nNote!\n\n\n\nYou might notice that we still have the unusual ages in this analysis, we’ll discuss how to remove them in the next section\n\n\nJamovi provide a lot of documentation on the descriptives function. This lists every single option that can be passed into jmv::descriptives. There is an option here for every single checkbox and selector in the main Jamovi dialogue.\nThe following code additionally computes a histogram by adding the hist argument.\njmv::descriptives(data, vars='age', hist=TRUE)\n\nWe can end up specifying a lot of these options. Sometimes it can be a good idea to split the function across multiple lines. This is fine as long as the parentheses are in the right place and there are commas in between each option.\nThis code computes descriptive statistics including the skewness, interquartile range and mode.\njmv::descriptives(data, \n  vars='age', \n  skew=TRUE,\n  iqr=TRUE,\n  mode=TRUE,\n  hist=TRUE\n  )\n\nOf course, we could run these analyses by hand. The main advantage here is that we can automate the selection of critical options and reduce the possiblity of mistakes when communicating analyses within teams. As long as we have this line saved, we can rerun it on new datasets without having to recheck every box by hand.\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nUse the examples above and the JMV documentation on the descriptives function to write a function definition that does the following.\nCompute the core descriptive statistics for the Openess variable, make sure to include the range and a boxplot.\n\n\nTake a look at the ‘range’ and ‘box’ options in the documentation page.\nBe careful with the spelling of each argument!\n\n\nThe final code should be:\njmv::descriptives(data, \n  vars='Openness', \n  range=TRUE,\n  box=TRUE\n  )\n\n\n\n\n\n\n\n\n\n\nRemember that last week we very carefully removed several participants who had entered unrealisic or impossible ages into the datasets. This may have been an accident or mistake but either way we should not use this data. Our examples so far have just used all the data.\nR and Rj make it very easy to clean data without the boring, manual work we did last week. R can do the hard work and we can avoid scrolling through very large datasets by hand. Sounds good!\nThe first thing we can do is investigate what range of responses that people actually gave when asked about their age. To do this we can use a new function called unique(). This takes a column of a dataset as an input and returns a list of all the unique responses that it contains.\n\n\n\n\n\n\nKey step\n\n\n\nLoad up an Rj Editor window (or continue in your old one) and run unique() on the age data.\nThe result should look like this:\n\n\n\nMost of these responses are fine but, as we saw last week, there are a lot of strange ones. Most importantly, we can find the extreme values that are very likely errors during data collection (-2 and 149)\nWe need to remove these from our analysis to get the most accurate results.\nTo do this we’re going to use an R library named dplyr (short for ‘Data Pliers’, see their documentation here). This is an extremely powerful library that is very widely used across the world.\nTo use dplyr, we first need to load the library into Rj by adding the following line to our code.\nlibrary(dplyr)\nThis tells Rj that we want to use the functions from this library.\nThe key function we need today is filter() - this extracts rows from a dataset based on logical conditions that we specify in the code. We are going to specify two arguments, firstly we will pass in the data and secondly we will specify the condition.\nIn this example we extract only the rows in which participants have an age above 20.\nlibrary(dplyr)\n\nfilter(data, age&gt;20)\n\nNotice that the dataset printed in the right hand window now only has values from the participants who are older than 20.\nWe can even specify multiple options - here we extract rows with participants older than 20 but still 23 or younger.\nlibrary(dplyr)\n\nfilter(data, age&gt;20, age&lt;=23)\nNext, to recreate our data tidying form last week, we need to extract the rows of participants who are older than -2 and younger than 149.\nThese values might be too specific and might not apply to every dataset. We can apply some common sense and suggest some broad, but much more sensible boundaries for a student population. We also save the result into a variable we can reuse later.\ntidy_data &lt;- filter(data, age &gt; 15, age &lt; 60)\nAnd finally, we can combine this with our call to jmv::descriptives to both filter our data to only the rows we want to use and compute the descriptive statistics on the result.\ntidy_data &lt;- filter(data, age &gt; 15, age &lt; 60)\n\njmv::descriptives(tidy_data, vars='age')\n\n\n\n\n\n\n\nKey step\n\n\n\nPractice changing the age conditions to a few different options to see the difference it makes to the descriptives analysis. What happens when you set a condition that results in zero valid participants?\n\n\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nUse the information in this tutorial to compute descriptive statistics for the Openness variable from Introverted participants. In other words - what is the mean Openess score for participants who are more Introverted than Extraverted.\nCompute the core descriptive statistics for the Openess variable, make sure to include the median and a histogram\n\n\nTo extract the data rows for Introverted participants we want to extract rows where the Extraversion score is less than 3.5\n\n\nThe final code should be:\nlibrary(dplyr)\n\ntidy_data &lt;- filter(data, Extraversion &lt; 3.5)\n\njmv::descriptives(tidy_data, vars='Openness')\n\n\n\n\n\n\n\n\n\n\nIt probably seems like a small difference so far. After all, we same results for our analysis using the check, boxes in Jamovi or the code in R. The Jamovi analysis is certainly quicker to run for the first time and it’s more convenient when exploring your data.\nHowever the R code has several crucial advantages.\n\nThe R code is transparent about what is actually being run to generate the results and by sharing this code, we enable others to repeat our analysis. This makes it really straightforward to run and re-run identical analyses in situations where we need to be really sure that everybody has done the same thing. For example, if we want to be certain that two data sets have been analysed in an identical way then that our code would be the best way to do this.\nR code is the best way to share what we’ve done with the rest of the world. It is common practice for modern academic public it to include the code that was used to generate the results in the paper. This way everybody who wants to check can make sure they fully understand what the authors of the paper have done.\n\nFinally, over the course of the semester we’ll see that R allows us to do much more than what is possible in Jamovi. We can define blocks of R code that can tidy-up and arrange our data, run multiple analyses and generate tables & figures all in one go. Much easier that clicking through all the menus each time we want to rerun an analysis!\n\n\n\n\n\nBlock, Jack. 1995. “A Contrarian View of the Five-Factor Approach to Personality Description.” Psychological Bulletin 117 (2): 187–215. https://doi.org/10.1037/0033-2909.117.2.187.\n\n\nEbersole, Charles R., Olivia E. Atherton, Aimee L. Belanger, Hayley M. Skulborstad, Jill M. Allen, Jonathan B. Banks, Erica Baranski, et al. 2016. “Many Labs 3: Evaluating Participant Pool Quality Across the Academic Semester via Replication.” Journal of Experimental Social Psychology 67: 68–82. https://doi.org/https://doi.org/10.1016/j.jesp.2015.10.012.\n\n\nGosling, Samuel D, Peter J Rentfrow, and William B Swann. 2003. “A Very Brief Measure of the Big-Five Personality Domains.” Journal of Research in Personality 37 (6): 504–28. https://doi.org/10.1016/s0092-6566(03)00046-1.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#the-dataset",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#the-dataset",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Dataset\n\n\n\nNote that this is the same dataset as in week 1\n\n\nWe will be exploring data that was collected as part of the ‘Many Labs 3’ project (Ebersole et al. 2016). This collected data from university students in the USA across a wide range of cognitive, behavioural and demographic measures. We will be exploring a subset of this dataset concerning individual differences in personality measures. The experimenters collected data to compute the ‘Big Five’ personality factors from each participant. Wikipedia describes the factors as:\n\nConscientiousness (efficient/organized vs. extravagant/careless)\nAgreeableness (friendly/compassionate vs. critical/rational)\nNeuroticism (sensitive/nervous vs. resilient/confident)\nOpenness to experience (inventive/curious vs. consistent/cautious)\nExtraversion (outgoing/energetic vs. solitary/reserved)\n\nThis is a very simple (Gosling, Rentfrow, and Swann 2003) and influential model that is used to summarise personality differences. Though it is popular, some researchers have criticised big five factors for conceptual and methodological reasons (Block 1995). Read around and form your own view!\nThe data contains the average of two questions about each factor in which participants responded to questions using a scale from 1 to 7. A value of 1 indicates a low score and a value of 7 is a high score. For example, someone with an extraversion score of 2 is more introverted that someone with an extraversion score of 5.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#the-challenge",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#the-challenge",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Last week, we looked at how we can spend some time understanding a new dataset and compute some descriptive statistics from it.\nNow, we’re going to learn how to use Jamovi and R to make this process more repeatable and more transparent. This will make it much easier for us to come back to the analysis and understand what steps were taken at a later date.\n\n\n\n\n\n\nOpening Jamovi\n\n\n\nWe’ll be working with Jamovi throughout this practical.\nWorking on campus? You can open Jamovi through AppsAnywhere, either open the desktop application through the start menu on a campus computer or Birmingham’s AppsAnywhere website.\nTake a look at these frequently asked questions or ask your tutor if you get stuck.\nWorking on your own computer? You can install Jamovi (for free!) folling these instructions. Install the ‘Desktop’ application - not the ‘Cloud’ version.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#install-the-rj-add-on-in-jamovi",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#install-the-rj-add-on-in-jamovi",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "We’ll be working with the Rj Add-On for Jamovi this week.\n\n\n\n\n\n\nKey step\n\n\n\nBefore continuing, install the Rj add-on for jamovi following the guide for installing Jamovi modules. Once installed you should have a new button on the Ribbon menu at the top of Jamovi…\n\n\n\nClick on this and select ‘Rj Editor’ to open a window in which we can write R code! Click on the small cog icon and make sure that ‘Output’ is set to ‘Show code and output’.\n\nWe can use the left-hand window, named Rj editor, to write commands, using the R language. These are the straightforward text commands that tell the computer a series of steps that we wanted to carry out. These commands can be edited and rerun as many times as we need, they can even be shared with collaborators and included as part of scientific publication.\nThis is a very powerful tool once we have a written set of instructions to work with rather than individually clicking through instructions. Though it takes a bit longer to write the commands, our analysis is much more transparent and reproducible once it is done.\nThe outputs of the analysis defined in the Rj editor appear on the right-hand side of the Jamovi window as usual. To check this out, let’s explore using or as a calculator.\n\n\n\n\n\n\nData Skills - R as a calculator\n\n\n\nTry typing a set of sums or equations into the Rj editor. Include one sum on each line and include as many as you like. When you’re ready, you can tell RJ to run the commands by clicking on the green triangle in the top right corner of the RJ editor. This will automatically compute. All of the sums you to find and print the results out in the right hand side window. see the example below.\nYou can use the following symbols to define your sums.\n\n\n\nSymbol\nOperation\n\n\n\n\n+\nAdd\n\n\n-\nSubtract\n\n\n*\nMultiply\n\n\n/\nDivide",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#functions-and-variables",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#functions-and-variables",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Often, we don’t just want to see the result of a calculation, we want to store the result to use again later. For this, we want to use variables. For example, here we store the result of a calculator sum in a variable named ‘y’\ny &lt;- 2 + 2\nIf you run this in Rj, you’ll notice that we no longer get the number 4 printed to the screen. This is as the output is now caught and stored rather than printed out. If we still want to see what is contained in y, we can use another helpful function named print.\ny &lt;- 2 + 2\nprint(y)\nWill now also display the content of y.\n\n\n\n\n\n\nDefinition of a variable\n\n\n\nA variable is an object that provides a labelled space to store information. The &lt;- or = symbols indicate that we’re assigning some information to a variable (the two symbols behave the same way, you could see either).\nCrucially, the information on the right hand side is assigned to a variable with the name from the left hand side.\n\n\nNotice that the one of the equations in my example is a bit different to the others. The final example uses a function called sqrt as a shortcut to compute the square root of the number nine.\n\n\n\n\n\n\nDefinition of a function\n\n\n\nFunctions are used to perform specific, predefined tasks, such as calculations, data transformations, or visualization. You can think of it as a “black box” that takes in a value, performs some internal calculation, and returns the result.\n\n\nThe sqrt function calculates the square root of a given number. In R code, this looks something like this:\nsqrt(x)\nwith the ‘x’ replaced by any number. For example, we could compute the square root of 36 using the following command.\nsqrt(36)\nAdd this line to your Rj editor and check the result..\nMany functions, take inputs contained in parentheses written after the name of the function. These inputs are sometimes known as the arguments of a function. In the last example, 36 is an argument for the function sqrt.\nSometimes functions take several arguments, and the arguments themselves can have specific names. For example.\nround(12.345, digits = 0)\nwill round the value x to a whole number with zero digits after the decimal point. Where as\nround(12.345, digits = 2)\nwould round the same number to preserve 2 digits after the decimal point. Try running these examples in Rj with a range of different numbers to get a sense of how it works.\nA single analysis might have several lines of code that create, store and reuse a several different variables with several different functions. For example:\n\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat does this R code do? what is the value of x, y and z?\n x &lt;- 10 + 10\n y &lt;- sqrt(16)\n z &lt;- x / y\n\n\nTry copying out and running the code in Rj.\nYou can add some print functions to see the value of the intermediate variables x and y as well. Try adding print(x) on the line immediately after x is defined.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final answers:\nx is 20 and y is 4, so z = 20 / 4 which is 5.\n\n\n\n\n\n\n\nRj has a special feature that the data loaded into our spreadsheet is always contained in a special variable named data. We can refer to this data variable to view and run analyses on our dataset.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#compute-descriptive-statistics-using-r",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#compute-descriptive-statistics-using-r",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Ok, back to statistics! How can we use our new R skills to compute statistics?\nThe trick is to understand that all the analyses in Jamovi are actually carried out by functions in R. Each analysis we can select from the top ribbon in Jamovi corresponds to a function that can be called in the code. Similarly, all of the options that we select in the analysis, dialogue boxes, correspond to arguments for that function. Let’s take a look in practice.\nTo help understand this Jamovi provides an “R Syntax Mode”, in this mode, Jamovi produces equivalent R code for each analysis. To change to syntax mode, select the application menu (⋮) at the top right of Jamovi, and check the Syntax mode checkbox there.\n\n\n\n\n\n\nKey step\n\n\n\nTake a moment to load the data file into Jamovi.\nWith syntax mode on, compute the descriptive statistics for the big five personality factors again.\n\n\nThe outputs should look like this:\n\nNotice that some R code has appeared at the top of the output table. This is relatively complex compared to our previous functions like print or sqrt. Let’s break it down a bit.\n\n\n\n\n\n\nData Skills - Understanding the descriptives function\n\n\n\nThis is the code that Jamovi’s syntax mode will produce (with a little formatting to make the appearance simpler). Take a look through each part to understand what it does. Click the number in the annotation to highlight the corresponding part of the code.\n1jmv::descriptives(\n2    data = data,\n3    vars = vars(Openness, Conscientiousness, Extraversion, Agreeableness, Neuroticism)\n    )\n\n1\n\nThis is the name of the function that will do the computation for us. Everything contained within these parentheses are known as arguments, or inputs, for the function\n\n2\n\nThe first input is named data and is assigned to be the special data variable that contains the data loaded into our spreadsheet.\n\n3\n\nThe second input is a list of the data columns in our spreadsheet that we want to compute descriptives from.\n\n\n\n\nThere is a lot of information here that might be hard to understand at first. Try changing the analysis options using the Jamovi buttons and watch what happens to the R syntax. In particular, try adding and removing different variables to the analysis.\n\n\n\n\n\n\nKey step\n\n\n\nOnce you’re ready, you can right click on this R syntax and click ‘Copy’ to copy it to your clipboard.\n\nand pasting it into an Rj window - now you can click run to reproduce your descriptive statistics table using the underlying R code.\n\n\nGreat - well done on completing your first data analysis using R code! You should have the following output that will match the descriptives you’ve seen in the main Jamovi window.\n\nHead back over to the Jamovi descriptives tab and try updating your analysis. You could change the variables that you are computing the descriptive statistics from, add in some extra metrics (such as the Skewness or Shapiro-Wilk) or even generate a plot like a histogram.\nNote that the R code in the syntax box of the output will stay up to date with your changes. Pay attention to how the function updates when you select different options.\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat is the R code required to compute descriptive statistics from the Openness and Conscientiousness variables, whilst including the Skewness metric, the Shapiro-Wilk statistic and a histogram?\nCan you run this analysis in Rj?\n\n\nRemember that the R code in the syntax mode will update as you define your analysis in Jamovi. Get the analysis right there and you can simply copy over the code.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final code should look like this\njmv::descriptives(\n    data = data,\n    vars = vars(Openness, Conscientiousness),\n    hist = TRUE,\n    skew = TRUE,\n    sw = TRUE)",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#cleaning-data-using-the-filter-function",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#cleaning-data-using-the-filter-function",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Remember that last week we very carefully removed several participants who had entered unrealisic or impossible ages into the datasets. This may have been an accident or mistake but either way we should not use this data.\nR and Rj make it very easy to clean data without the boring, manual work we did last week. R can do the hard work and we can avoid scrolling through very large datasets by hand. Sounds good!\nThe first thing we can do is investigate what range of responses that people actually gave when asked about their age. To do this we can use a new function called unique(). This takes a column of a dataset as an input and returns a list of all the unique responses that it contains.\n\n\n\n\n\n\nKey step\n\n\n\nLoad up an Rj Editor window (or continue in your old one) and run unique() on the age data.\nWe can access a single column of a dataset using the doller sign $. In this case data$age accesses the age column of the data sheet.\n\n\nThe result should look like this:\n\nWhat do you think?\n\n\n\n\n\n\nData Skills - Evaluating the age column\n\n\n\n\n\nOk, most of these responses are fine but there are a lot of strange ones.\n\nFirstly, we can find the extreme values that we saw last week (-2 and 149) - these are clearly mistakes (or some kind of weird prank).\nNext, we can see a lot of people adding text (eg ‘almost 19’). This is not helpful for the computer though it can be socially useful. The computer will read this in words and not numbers. These responses with additional text will count as missing data for any numerical analysis we do.\n&lt;NA&gt; means that the data value is simply missing - perhaps these participants skipped the question.\n\nWe caught some of these issues last time but likely not all. It would be a huge effort to comb through the data line-by-line and identify all these issues.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#references",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#references",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Block, Jack. 1995. “A Contrarian View of the Five-Factor Approach to Personality Description.” Psychological Bulletin 117 (2): 187–215. https://doi.org/10.1037/0033-2909.117.2.187.\n\n\nEbersole, Charles R., Olivia E. Atherton, Aimee L. Belanger, Hayley M. Skulborstad, Jill M. Allen, Jonathan B. Banks, Erica Baranski, et al. 2016. “Many Labs 3: Evaluating Participant Pool Quality Across the Academic Semester via Replication.” Journal of Experimental Social Psychology 67: 68–82. https://doi.org/https://doi.org/10.1016/j.jesp.2015.10.012.\n\n\nGosling, Samuel D, Peter J Rentfrow, and William B Swann. 2003. “A Very Brief Measure of the Big-Five Personality Domains.” Journal of Research in Personality 37 (6): 504–28. https://doi.org/10.1016/s0092-6566(03)00046-1.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#variables-and-functions",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#variables-and-functions",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Often, we don’t just want to see the result of a calculation, we want to store the result to use again later. For this, we want to use variables. For example, here we store the result of a calculator sum in a variable named ‘y’\ny &lt;- 2 + 2\nIf you run this in Rj, you’ll notice that we no longer get the number 4 printed to the screen. This is as the output is now caught and stored rather than printed out. If we still want to see what is contained in y, we can use another helpful function named print.\ny &lt;- 2 + 2\nprint(y)\nWill now also display the content of y.\n\n\n\n\n\n\nDefinition of a variable\n\n\n\nA variable is an object that provides a labelled space to store information. The &lt;- or = symbols indicate that we’re assigning some information to a variable (the two symbols behave the same way, you could see either).\nCrucially, the information on the right hand side is assigned to a variable with the name from the left hand side.\n\n\n\n\n\n\n\n\nCheck Your Understanding with Copilot (Optional)\n\n\n\nTry asking Copilot for more information about variables in R. We suggest you try the following prompts to get started.\n\n“Write a simple description of variables in R for a beginner”\n“How can I choose a name for my variable in R”\n\nMake sure to ask follow up questions if you would like more information. Remember to talk with your session tutors if you get stuck.\n\n\nNotice that the one of the equations in my example is a bit different to the others. The final example uses a function called sqrt as a shortcut to compute the square root of the number nine.\nThe sqrt function calculates the square root of a given number. In R code, this looks something like this:\nsqrt(x)\nwith the ‘x’ replaced by any number. For example, we could compute the square root of 36 using the following command.\nsqrt(36)\nAdd this line to your Rj editor and check the result..\nMany functions, take inputs contained in parentheses written after the name of the function. These inputs are sometimes known as the arguments of a function. In the last example, 36 is an argument for the function sqrt.\nSometimes functions take several arguments, and the arguments themselves can have specific names. For example.\nround(12.345, digits = 0)\nwill round the value x to a whole number with zero digits after the decimal point. Where as\nround(12.345, digits = 2)\nwould round the same number to preserve 2 digits after the decimal point. Try running these examples in Rj with a range of different numbers to get a sense of how it works.\n\n\n\n\n\n\nDefinition of a function\n\n\n\nFunctions are used to perform specific, predefined tasks, such as calculations, data transformations, or visualization. You can think of it as a “black box” that takes in a value, performs some internal calculation, and returns the result.\n\n\n\n\n\n\n\n\nCheck Your Understanding with Copilot (Optional)\n\n\n\nTry asking Copilot for more information about functions in R. We suggest you try the following prompts to get started.\n\n“Write a simple description of functions in R for a beginner”\n\nMake sure to ask follow up questions if you would like more information. Remember to talk with your session tutors if you get stuck.\n\n\nA single analysis might have several lines of code that create, store and reuse a several different variables with several different functions. For example:\n\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat does this R code do? what is the value of x, y and z?\n x &lt;- 10 + 10\n y &lt;- sqrt(16)\n z &lt;- x / y\n\n\nTry copying out and running the code in Rj.\nYou can add some print functions to see the value of the intermediate variables x and y as well. Try adding print(x) on the line immediately after x is defined.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final answers:\nx is 20 and y is 4, so z = 20 / 4 which is 5.\n\n\n\n\n\n\n\nRj has a special feature that the data loaded into our spreadsheet is always contained in a special variable named data. We can refer to this data variable to view and run analyses on our dataset.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#compute-descriptive-statistics-with-r-in-rj",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#compute-descriptive-statistics-with-r-in-rj",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Ok, back to statistics! How can we use our new R skills to compute statistics?\nThe trick is to understand that all the analyses in Jamovi are actually carried out by functions in R. Each analysis we can select from the top ribbon in Jamovi corresponds to a function that can be called in the code. Similarly, all of the options that we select in the analysis, dialogue boxes, correspond to arguments for that function. Let’s take a look in practice.\nTo help understand this Jamovi provides an “R Syntax Mode”, in this mode, Jamovi produces equivalent R code for each analysis. To change to syntax mode, select the application menu (⋮) at the top right of Jamovi, and check the Syntax mode checkbox there. You can find more information on Jamovi’s documentation on Syntax Mode.\nNotice that some R code has appeared at the top of the output table. This is relatively complex compared to our previous functions like print or sqrt. Let’s break it down a bit.\n\n\n\n\n\n\nData Skills - Understanding the descriptives function\n\n\n\nThis is the code that Jamovi’s syntax mode will produce (with a little formatting to make the appearance simpler). Take a look through each part to understand what it does. Click the number in the annotation to highlight the corresponding part of the code.\n1jmv::descriptives(\n2    data = data,\n3    vars = vars(Openness, Conscientiousness, Extraversion, Agreeableness, Neuroticism)\n    )\n\n1\n\nThis is the name of the function that will do the computation for us. Everything contained within these parentheses are known as arguments, or inputs, for the function\n\n2\n\nThe first input is named data and is assigned to be the special data variable that contains the data loaded into our spreadsheet.\n\n3\n\nThe second input is a list of the data columns in our spreadsheet that we want to compute descriptives from.\n\n\n\n\nThere is a lot of information here that might be hard to understand at first. Try changing the analysis options using the Jamovi buttons and watch what happens to the R syntax. In particular, try adding and removing different variables to the analysis.\n\n\n\n\n\n\nKey step\n\n\n\nOnce you’re ready, you can right click on this R syntax and click ‘Copy’ to copy it to your clipboard.\n\nand pasting it into an Rj window - now you can click run to reproduce your descriptive statistics table using the underlying R code.\n\n\nGreat - well done on completing your first data analysis using R code! You should have the following output that will match the descriptives you’ve seen in the main Jamovi window.\n\nHead back over to the Jamovi descriptives tab and try updating your analysis. You could change the variables that you are computing the descriptive statistics from, add in some extra metrics (such as the Skewness or Shapiro-Wilk) or even generate a plot like a histogram.\nNote that the R code in the syntax box of the output will stay up to date with your changes. Pay attention to how the function updates when you select different options.\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat is the R code required to compute descriptive statistics from the Openness and Conscientiousness variables, whilst including the Skewness metric, the Shapiro-Wilk statistic and a histogram?\nCan you run this analysis in Rj?\n\n\nRemember that the R code in the syntax mode will update as you define your analysis in Jamovi. Get the analysis right there and you can simply copy over the code.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final code should look like this\njmv::descriptives(\n    data = data,\n    vars = vars(Openness, Conscientiousness),\n    hist = TRUE,\n    skew = TRUE,\n    sw = TRUE)",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#selecting-rows-of-data-using-the-filter-function",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#selecting-rows-of-data-using-the-filter-function",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Remember that last week we very carefully removed several participants who had entered unrealisic or impossible ages into the datasets. This may have been an accident or mistake but either way we should not use this data. Our examples so far have just used all the data.\nR and Rj make it very easy to clean data without the boring, manual work we did last week. R can do the hard work and we can avoid scrolling through very large datasets by hand. Sounds good!\nThe first thing we can do is investigate what range of responses that people actually gave when asked about their age. To do this we can use a new function called unique(). This takes a column of a dataset as an input and returns a list of all the unique responses that it contains.\n\n\n\n\n\n\nKey step\n\n\n\nLoad up an Rj Editor window (or continue in your old one) and run unique() on the age data.\nThe result should look like this:\n\n\n\nMost of these responses are fine but, as we saw last week, there are a lot of strange ones. Most importantly, we can find the extreme values that are very likely errors during data collection (-2 and 149)\nWe need to remove these from our analysis to get the most accurate results.\nTo do this we’re going to use an R library named dplyr (short for ‘Data Pliers’, see their documentation here). This is an extremely powerful library that is very widely used across the world.\nTo use dplyr, we first need to load the library into Rj by adding the following line to our code.\nlibrary(dplyr)\nThis tells Rj that we want to use the functions from this library.\nThe key function we need today is filter() - this extracts rows from a dataset based on logical conditions that we specify in the code. We are going to specify two arguments, firstly we will pass in the data and secondly we will specify the condition.\nIn this example we extract only the rows in which participants have an age above 20.\nlibrary(dplyr)\n\nfilter(data, age&gt;20)\n\nNotice that the dataset printed in the right hand window now only has values from the participants who are older than 20.\nWe can even specify multiple options - here we extract rows with participants older than 20 but still 23 or younger.\nlibrary(dplyr)\n\nfilter(data, age&gt;20, age&lt;=23)\nNext, to recreate our data tidying form last week, we need to extract the rows of participants who are older than -2 and younger than 149.\nThese values might be too specific and might not apply to every dataset. We can apply some common sense and suggest some broad, but much more sensible boundaries for a student population. We also save the result into a variable we can reuse later.\ntidy_data &lt;- filter(data, age &gt; 15, age &lt; 60)\nAnd finally, we can combine this with our call to jmv::descriptives to both filter our data to only the rows we want to use and compute the descriptive statistics on the result.\ntidy_data &lt;- filter(data, age &gt; 15, age &lt; 60)\n\njmv::descriptives(tidy_data, vars='age')\n\n\n\n\n\n\n\nKey step\n\n\n\nPractice changing the age conditions to a few different options to see the difference it makes to the descriptives analysis. What happens when you set a condition that results in zero valid participants?\n\n\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nUse the information in this tutorial to compute descriptive statistics for the Openness variable from Introverted participants. In other words - what is the mean Openess score for participants who are more Introverted than Extraverted.\nCompute the core descriptive statistics for the Openess variable, make sure to include the median and a histogram\n\n\nTo extract the data rows for Introverted participants we want to extract rows where the Extraversion score is less than 3.5\n\n\nThe final code should be:\nlibrary(dplyr)\n\ntidy_data &lt;- filter(data, Extraversion &lt; 3.5)\n\njmv::descriptives(tidy_data, vars='Openness')",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#accessing-the-data-table-in-rj",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#accessing-the-data-table-in-rj",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Key step\n\n\n\nTake a moment to load the data file into Jamovi and compute the descriptive statistics for the big five personality factors again.\n\n\n\nThe data we have loaded into our Jamovi session can be accessed in Rj with the data variable. Jamovi automatically makes the data available for us in the R environment.\nWe can view and interact with the data here as well. For example, to view the first few rows of the dataset you can run the head function and pass in data as an argument.\nhead(data)\nand to view the last few rows, you can do the same with the tail function.\ntail(data)\nOften, we’ll only want to work with a subset of the columns in a data frame at any given time. We can access individual columns using the dollar operator. For example, this code will access the age column within the loaded dataset.\ndata$age\nLet’s break this command down into its pieces:\n\n\n\n\n\n\n\nR code\nMeaning\n\n\n\n\ndata\nthis is the name of the whole data array we have loaded in\n\n\n$\nthis is a separator that R uses to help us access subsections of datasets\n\n\nage\nThis is the name of a single column we want to access\n\n\n\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nCan you access the column of Mood scores from the same dataset?\n\n\nYou can use the head function to see the list of all available columns in the dataset. The example above accesses the ‘age’ column, you can tweak this to extract the mood data instead.\n\n\nThe final code should look like this\ndata$Mood\n\n\n\n\n\nWe can also apply functions to these variables. R includes a wide range of standard mathmatical functions that we can use for common computations. This code computes the mean of the age data in our dataset.\nmean(data$age)\nTry running this in Rj. You should get the answer 19.3 - this matches the value we computed using the descriptives analysis last week.\nSimilarly, the following function computes the standard deviation\nsd(data$age)\nIf you run this, you should get the answer 3.808.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#running-desriptive-statistics-using-rj",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#running-desriptive-statistics-using-rj",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "Ok, back to statistics! How can we use our new R skills to compute statistics?\nThe trick is to understand that all the analyses in Jamovi are actually carried out by functions in R. Each analysis we can select from the top ribbon in Jamovi corresponds to a function that can be called in the code. Similarly, all of the options that we select in the analysis, dialogue boxes, correspond to arguments for that function. Let’s take a look in practice.\nJamovi provides a collection of R functions that correspond to each analysis dialogue box in Jamovi. This package of functions is named jmv. Thejmv function that computes descriptive statistics is called:\njmv::descriptives\nHere we first name the jmv package specify the descriptives function within it (this link is made with the two colons).\nWe can compute the descriptive statistics for age by passing the data into the function and specifying that we want to use the age variable. Try running the following:\njmv::descriptives(data, vars='age')\nand you should generate the following result table.\n\n\n\n\n\n\n\nNote!\n\n\n\nYou might notice that we still have the unusual ages in this analysis, we’ll discuss how to remove them in the next section\n\n\nJamovi provide a lot of documentation on the descriptives function. This lists every single option that can be passed into jmv::descriptives. There is an option here for every single checkbox and selector in the main Jamovi dialogue.\nThe following code additionally computes a histogram by adding the hist argument.\njmv::descriptives(data, vars='age', hist=TRUE)\n\nWe can end up specifying a lot of these options. Sometimes it can be a good idea to split the function across multiple lines. This is fine as long as the parentheses are in the right place and there are commas in between each option.\nThis code computes descriptive statistics including the skewness, interquartile range and mode.\njmv::descriptives(data, \n  vars='age', \n  skew=TRUE,\n  iqr=TRUE,\n  mode=TRUE,\n  hist=TRUE\n  )\n\nOf course, we could run these analyses by hand. The main advantage here is that we can automate the selection of critical options and reduce the possiblity of mistakes when communicating analyses within teams. As long as we have this line saved, we can rerun it on new datasets without having to recheck every box by hand.\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nUse the examples above and the JMV documentation on the descriptives function to write a function definition that does the following.\nCompute the core descriptive statistics for the Openess variable, make sure to include the range and a boxplot.\n\n\nTake a look at the ‘range’ and ‘box’ options in the documentation page.\nBe careful with the spelling of each argument!\n\n\nThe final code should be:\njmv::descriptives(data, \n  vars='Openness', \n  range=TRUE,\n  box=TRUE\n  )",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-4_reproducible-t-tests.html",
    "href": "tutorials/rmb_week-4_reproducible-t-tests.html",
    "title": "Research Methods",
    "section": "",
    "text": "Ok, back to statistics! How can we use our new R skills to compute statistics?\nThe trick is to understand that all the analyses in Jamovi are actually carried out by functions in R. Each analysis we can select from the top ribbon in Jamovi corresponds to a function that can be called in the code. Similarly, all of the options that we select in the analysis, dialogue boxes, correspond to arguments for that function. Let’s take a look in practice.\nTo help understand this Jamovi provides an “R Syntax Mode”, in this mode, Jamovi produces equivalent R code for each analysis. To change to syntax mode, select the application menu (⋮) at the top right of Jamovi, and check the Syntax mode checkbox there. You can find more information on Jamovi’s documentation on Syntax Mode.\nNotice that some R code has appeared at the top of the output table. This is relatively complex compared to our previous functions like print or sqrt. Let’s break it down a bit.\n\n\n\n\n\n\nData Skills - Understanding the descriptives function\n\n\n\nThis is the code that Jamovi’s syntax mode will produce (with a little formatting to make the appearance simpler). Take a look through each part to understand what it does. Click the number in the annotation to highlight the corresponding part of the code.\n1jmv::descriptives(\n2    data = data,\n3    vars = vars(Openness, Conscientiousness, Extraversion, Agreeableness, Neuroticism)\n    )\n\n1\n\nThis is the name of the function that will do the computation for us. Everything contained within these parentheses are known as arguments, or inputs, for the function\n\n2\n\nThe first input is named data and is assigned to be the special data variable that contains the data loaded into our spreadsheet.\n\n3\n\nThe second input is a list of the data columns in our spreadsheet that we want to compute descriptives from.\n\n\n\n\nThere is a lot of information here that might be hard to understand at first. Try changing the analysis options using the Jamovi buttons and watch what happens to the R syntax. In particular, try adding and removing different variables to the analysis.\n\n\n\n\n\n\nKey step\n\n\n\nOnce you’re ready, you can right click on this R syntax and click ‘Copy’ to copy it to your clipboard.\n\nand pasting it into an Rj window - now you can click run to reproduce your descriptive statistics table using the underlying R code.\n\n\nGreat - well done on completing your first data analysis using R code! You should have the following output that will match the descriptives you’ve seen in the main Jamovi window.\n\nHead back over to the Jamovi descriptives tab and try updating your analysis. You could change the variables that you are computing the descriptive statistics from, add in some extra metrics (such as the Skewness or Shapiro-Wilk) or even generate a plot like a histogram.\nNote that the R code in the syntax box of the output will stay up to date with your changes. Pay attention to how the function updates when you select different options.\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat is the R code required to compute descriptive statistics from the Openness and Conscientiousness variables, whilst including the Skewness metric, the Shapiro-Wilk statistic and a histogram?\nCan you run this analysis in Rj?\n\n\nRemember that the R code in the syntax mode will update as you define your analysis in Jamovi. Get the analysis right there and you can simply copy over the code.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final code should look like this\njmv::descriptives(\n    data = data,\n    vars = vars(Openness, Conscientiousness),\n    hist = TRUE,\n    skew = TRUE,\n    sw = TRUE)"
  },
  {
    "objectID": "tutorials/rmb_week-4_reproducible-t-tests.html#compute-descriptive-statistics-with-r-in-rj",
    "href": "tutorials/rmb_week-4_reproducible-t-tests.html#compute-descriptive-statistics-with-r-in-rj",
    "title": "Research Methods",
    "section": "",
    "text": "Ok, back to statistics! How can we use our new R skills to compute statistics?\nThe trick is to understand that all the analyses in Jamovi are actually carried out by functions in R. Each analysis we can select from the top ribbon in Jamovi corresponds to a function that can be called in the code. Similarly, all of the options that we select in the analysis, dialogue boxes, correspond to arguments for that function. Let’s take a look in practice.\nTo help understand this Jamovi provides an “R Syntax Mode”, in this mode, Jamovi produces equivalent R code for each analysis. To change to syntax mode, select the application menu (⋮) at the top right of Jamovi, and check the Syntax mode checkbox there. You can find more information on Jamovi’s documentation on Syntax Mode.\nNotice that some R code has appeared at the top of the output table. This is relatively complex compared to our previous functions like print or sqrt. Let’s break it down a bit.\n\n\n\n\n\n\nData Skills - Understanding the descriptives function\n\n\n\nThis is the code that Jamovi’s syntax mode will produce (with a little formatting to make the appearance simpler). Take a look through each part to understand what it does. Click the number in the annotation to highlight the corresponding part of the code.\n1jmv::descriptives(\n2    data = data,\n3    vars = vars(Openness, Conscientiousness, Extraversion, Agreeableness, Neuroticism)\n    )\n\n1\n\nThis is the name of the function that will do the computation for us. Everything contained within these parentheses are known as arguments, or inputs, for the function\n\n2\n\nThe first input is named data and is assigned to be the special data variable that contains the data loaded into our spreadsheet.\n\n3\n\nThe second input is a list of the data columns in our spreadsheet that we want to compute descriptives from.\n\n\n\n\nThere is a lot of information here that might be hard to understand at first. Try changing the analysis options using the Jamovi buttons and watch what happens to the R syntax. In particular, try adding and removing different variables to the analysis.\n\n\n\n\n\n\nKey step\n\n\n\nOnce you’re ready, you can right click on this R syntax and click ‘Copy’ to copy it to your clipboard.\n\nand pasting it into an Rj window - now you can click run to reproduce your descriptive statistics table using the underlying R code.\n\n\nGreat - well done on completing your first data analysis using R code! You should have the following output that will match the descriptives you’ve seen in the main Jamovi window.\n\nHead back over to the Jamovi descriptives tab and try updating your analysis. You could change the variables that you are computing the descriptive statistics from, add in some extra metrics (such as the Skewness or Shapiro-Wilk) or even generate a plot like a histogram.\nNote that the R code in the syntax box of the output will stay up to date with your changes. Pay attention to how the function updates when you select different options.\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat is the R code required to compute descriptive statistics from the Openness and Conscientiousness variables, whilst including the Skewness metric, the Shapiro-Wilk statistic and a histogram?\nCan you run this analysis in Rj?\n\n\nRemember that the R code in the syntax mode will update as you define your analysis in Jamovi. Get the analysis right there and you can simply copy over the code.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final code should look like this\njmv::descriptives(\n    data = data,\n    vars = vars(Openness, Conscientiousness),\n    hist = TRUE,\n    skew = TRUE,\n    sw = TRUE)"
  },
  {
    "objectID": "tutorials/rmb_week-2_intro-to-Rj.html#summary",
    "href": "tutorials/rmb_week-2_intro-to-Rj.html#summary",
    "title": "Week 2 : Computing reproducible statistics using Rj",
    "section": "",
    "text": "It probably seems like a small difference so far. After all, we same results for our analysis using the check, boxes in Jamovi or the code in R. The Jamovi analysis is certainly quicker to run for the first time and it’s more convenient when exploring your data.\nHowever the R code has several crucial advantages.\n\nThe R code is transparent about what is actually being run to generate the results and by sharing this code, we enable others to repeat our analysis. This makes it really straightforward to run and re-run identical analyses in situations where we need to be really sure that everybody has done the same thing. For example, if we want to be certain that two data sets have been analysed in an identical way then that our code would be the best way to do this.\nR code is the best way to share what we’ve done with the rest of the world. It is common practice for modern academic public it to include the code that was used to generate the results in the paper. This way everybody who wants to check can make sure they fully understand what the authors of the paper have done.\n\nFinally, over the course of the semester we’ll see that R allows us to do much more than what is possible in Jamovi. We can define blocks of R code that can tidy-up and arrange our data, run multiple analyses and generate tables & figures all in one go. Much easier that clicking through all the menus each time we want to rerun an analysis!",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 2 - Introducing R and Rj"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-3_one-sample-t-tests.html",
    "href": "tutorials/rmb_week-3_one-sample-t-tests.html",
    "title": "Week 3 : One-Sample t-tests",
    "section": "",
    "text": "This week we will explore how to use Jamovi to compute and visualise descriptive statistics from a dataset. This will include some revision on Jamovi from last semester and an introduction on how we can use the R coding language to simplify complex data processing.\n\nLearning objectives for this session\n\n\n\n\n\n\n\nQuantitative Methods\n\n\n\n\n\nMeasures of central tendency\n\n\n\nMeasures of dispersion and spread\n\n\n\nMeasures of skew and normality\n\n\n\n\n\n\n\n\n\n\n\nData Skills\n\n\n\n\n\nWorking with the Rj editor to use R code within Jamovi\n\n\n\nLearn the basics about functions and variables in R\n\n\n\nComputing descriptive statistics using R\n\n\n\n\n\n\n\n\n\n\n\nOpen Science\n\n\n\n\n\nValidating and working with openly available research data\n\n\n\nCreate a reproducible data analysis script\n\n\n\n\n\nMetaphors are often used to help people understand abstract concepts in terms of perceptual experiences. Though this is often useful, it can bias perception and decision making in unexpected ways. For example, North and South are abstract concepts that have a spatial association (north = up, south = down). Participants in the USA have a biased expectation that richer people will live in the north of a city (Meier et al. 2011). However, these expectations are not uniform across all people and cultures and we should not naively generalise this result to all people. A follow up study comparing this effect in participants from the USA and Hong Kong replicated the original effect for American participants but found the opposite effect in people from Hong Kong (Huang, Tse, and Cho 2014).\nThe Many Labs 2 project (Klein et al. 2018) performed an additional replication of this effect across a wide range of countries. Participants were presented with the following map outline of a city:\n\nand asked to indicate where they though a fictional person would live within the city. Participants were shown one of two descriptions of the person.\n\n“Dr. Bennett lives in the city. He is a wealthy businessman who has travelled the world. He inherited a significant amount of money from a Great Aunt, and was educated at the best schools growing up. He enjoys fine dining and going to the theater on weekends.”\n\nOr\n\n“Mr. Bennett lives in the city. He is unemployed. He was born and raised in the city he now calls home. He struggles to pay the rent each month, and dropped out of high school before graduation. He enjoys a good hot dog and a six pack of beers when he can.”\n\nThe first description is a caricature of a person with high Socio-Economic Status (SES) whilst the second is a caricature of someone with a low SES. The hypothesis is that people in the United States and Hong Kong have different demographic knowledge that may shape their metaphoric link between positive association and cardinal direction (north vs. south).\n\n\n\nThis week we will use one-sample t-tests to explore whether participants from the UK would expect people with low or high SES to live north or south of the centre of the city.\n\n\n\n\n\n\nA new hypothesis?\n\n\n\nBefore we start, think about what you would predict about participants from the UK. Is there a reason to expect that people in the UK would associate the north of a city with high SES or vice versa?\nMake a note of your answer and the reasons behind it. Note that there isn’t necessarily a correct answer to this question and we won’t ask you for it later.\nIt is good practice to be clear about our predictions and expectations before starting a data analysis.\n\n\n\n\n\nLet’s start by loading the dataset into Jamovi and checking out the data. You can use the file named RMB-2024_computer-practical_huang-2014_country-UK_cond-All.csv.\nThis dataset has several columns of data. The main column of interest is currently named variable. This represents the y-axis position of the persons expectation about where the fictional character would live. A value of zero represents the middle of the city, positive values represent more northern locations and negative values represent more southern locations.\nThe other key variable is named factor. This indicates which group the participant was allocated to. This can be either ‘high’ or ‘low’ depending on whether the participant saw a description of a person with stereotypes of high or low socioeconomic status.\nThis is open-access data and the column names aren’t very informative. It would be better to rename them to something more considered so that we can avoid mistakes later.\n\n\n\n\n\n\nKey step\n\n\n\nRename the following variables using the editor under the ‘Variables’ tab.\n\n‘variable’ should be renamed to ‘NorthSouth_Position’, and\n‘factor’ should be renamed to ‘SES_Story’.\n\nDon’t include any spaces in the new variable names! this can cause an issue later.\n\n\n\nNext, take a look through the data itself. Remember the steps we took in the last couple of weeks. Have a careful scan through the data values and see if you can spot anything that needs to be fixed.\n\n\n\n\n\n\n Data Skills - how many participants are included in the dataset?\n\n\n\n\n\nWe have 136 rows of data observations the spreadsheet.\n\n\n\n\n\n\n\n\n\n Data Skills - what experimental design was used in this experiment?\n\n\n\n\n\nThis is a between-subjects design, though that might not be obvious from the data alone! Checking through the paper methods we can see that each participant was either in the high or low SES condition.\n\n\n\n\n\n\n\n\n\n Data Skills - do we need to tidy up this dataset?\n\n\n\n\n\nNo, in this case the dataset looks very clean. We appear to have data for everyone without any obvious typos or missing information. Looks good to go.\n\n\n\n\n\n\n\n\n\nKey step\n\n\n\nCompute some descriptive statistics on the NorthSouth column. Make sure that you include the standard error of the mean!\nYou can split the descriptive statistics using a second variable. This\n\n\n\nNext, let’s think about what these values can tell us.\n\n\n\n\n\n\n Data Skills - do we have an equal number of data points in each condition?\n\n\n\n\n\nNo, we have 75 participants in the High condition and 61 participants in the Low condition.\n\n\n\n\n\n\n\n\n\n Data Skills - which condition has a wider variation in NorthSouth Positions chosen by participants?\n\n\n\n\n\nWe can see this from the standard deviations. The High condition has a standard deviation of 63.2 and the Low condition has a standard deviation of 77.8.\nThe responses in the Low SES story condition were more variable.\n\n\n\n\n\n\n\n\n\n Data Skills - which condition has a more northern mean position?\n\n\n\n\n\nRecall from the introduction that positive values indicate a position in the north of the city. The High condition has a mean value of -39.0 and the Low condition has a mean value of 18.6\nThe responses in the Low SES story condition were more northern.\n\n\n\n\n\n\n\n\n\n Data Skills - can we tell from the descriptives whether this is a significant difference?\n\n\n\n\n\nNo! remember that descriptive statistics only summarise the data as it is. They cannot tell us whether we would expect what we see in that data to generalise beyond the specific data sample.\n\n\n\n\n\n\n\n\n\n Data Skills - are we more confident in our estimate of the mean for the ‘North’ or ‘South’ condition?\n\n\n\n\n\nThe standard error of the mean tells us how well we think our estimated mean from the data sample represents the ‘true’ population mean.\nThe standard error of the mean for the ‘Low’ group is higher (9.96 vs 7.3 for ‘High’) - indicating that we are less confident that this is a good representation of our population mean. Note that it could still be a good estimate, we’re just relatively less confident than we are for the ‘High’ condition.\n\n\n\n\n\n\nNext, we’re going to ask whether the participants in the either the High or Low SES conditions had a preference towards locating our fictional character in the North or South of the city. This is our one-sample t-test. The NorthSouth_Position is our data variable and the centre point of the city is the comparison value.\nFirst, we need to split out the data so that we can run the t-test using either the Low or High SES conditions, not using both mixed together.\nWe can do this in Jamovi using a ‘Filter’. Jamovi provides some great documentation on data filters on their website. Take a few minutes and read through the info on ‘Row Filters’ on this page.\nThe most important thing about filters is that they are reversible. We can apply a filter to run an analysis on a subset of the data without actually changing the dataset itself. This means we could make several different filters and turn them on and off to repeat the same analyses on different sections of the dataset. Convenient!\n\n\n\n\n\n\nKey step\n\n\n\nFollowing the guidance on the Jamovi documentation on data filters, create a filter to select ONLY the participants who heard the low SES story.\nThe result should exclude the first 75 rows from your dataset, you can confirm this by looking at the ticks and crosses in the ‘Filter’ column, and by inspecting the values in the very bottom of the window.\n\n\n\nNote that your analyses in results windows will automatically update when you apply a filter to the data. With the filter applied, you will only see the descriptive statistics for the ‘Low’ SES_Story groups.\nIf you click the ‘active’ toggle in the ‘Filter’ window you can turn the filter off and your analysis will return to its initial state.\n\n\n\n\n\n\nKey step\n\n\n\nWith your first Filter turned OFF, create a filter to select ONLY the participants who heard the High SES story.\nThe result should now exclude the last 61 rows from your dataset.\n You can turn your filters on and off to see how this changes the data available for the analysis, though turning both filters on will exclude all the data in this case…\n\n\n\n\n\nNow we’re ready to test our hypothesis! remember that the equation for a one-sample t-test is the following:\n\\[\nt = \\frac{\\text{The sample mean} - \\text{Comparison Value}}{\\text{The standard error of the mean}}\n\\]\nWe’re looking at the difference between our observed mean and a comparison value as a ratio to the precision to which we have estimated our observed mean.\nOur descriptive statistics output contains the mean and standard error of the mean for both groups. Our comparison value is the centre of the city, indicated by a score of 0 (zero).\nWe all the values required for a one-sample t-test already in the descriptive statistics! For the ‘Low’ SES_Story condition, we have:\n\nGroup Mean = 18.6\nComparison Value = 0\nStandard error of the mean = 9.96\n\nSo, the one sample t-test value is:\n\\[\nt = \\frac{18.6 - 0}{9.96} = 1.867\n\\]\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nCan you compute the t-value for the High SES Story group using a calculator or Rj?\n\n\nFirst, get the three values that you’ll need for the computation. These are the comparison value and the mean and standard error of the mean for the High SES group.\n\n\nThe individual values are\n\nGroup Mean = -39.0\nComparison Value = 0\nStandard error of the mean = 7.30\n\nso the t-value is\n\\[\nt = \\frac{-39.0 - 0}{7.30} = -5.342\n\\]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKey step\n\n\n\nBefore going any further - make sure that your data filter is set to include only the data from the ‘Low’ SES_Story condition.\n\n\nOf course, we will normally compute the t-test using Jamovi as rather than relying on hand calculations. We can do this by opening the ‘One Sample T-Test’ option under the ‘Analysis -&gt; T-Tests’ menu on the top ribbon.\nOpen the One Sample T-Test option now, and drag the NorthSouth_Position variable over to the ‘dependent variables’ box. The result should appear on the right hand side. Before we inspect the result, we should check and add a number of important options to our analysis.\n\n\nHypothesis - test value it is critical that we select the correct hypothesis or our test will be meaningless. Our ‘test value’, also known as a ‘comparison value’, is set to zero by default. This is correct for our analysis but may need setting to something else for other analyses. Take care to check it makes sense each time.\nHypothesis - test tail we can also specify whether we’re going to perform a one- or two-tailed test. Here we want to specify a two-tailed test in which the mean does not equal the test value.\nAssumption Checks we should add a test to check that our data are normally distributed. Selecting the ‘Normality test’ box will compute a Shapio-Wilks statistic for you\nAdditional Statistics there are a number of important options here. For now, add the ‘Descriptive plots’ option to your analysis. This will show us a visualisation of the estimated mean and its confidence intervals.\n\nLet’s take a look at the outputs, first the t-test table.\n\nThis contains the information we need to report our t-test: the t-value, the degrees of freedom and the p-value.\n\nt(60) = 1.87, p = 0.066\n\nThis t-value should match the number you computed by hand earlier on. Note that the footnote of the table reminds us of the hypothesis that we specified. Make sure that this matches what you expect!\nNext, the normality check:\n\nThis reports the Shapiro-Wilk W statistic and associated p-value. In this case the p-value is not significant which indicates that the data are normally distributed and we’re happy to go ahead with the parametric t-test.\nNext, the descriptives plot:\n\nThis is a really useful visualisation of our test. We can see the mean of the data (black dot) and the test value (dotted line). We also have the 95% confidence intervals of the estimated mean. We can see that the confidence intervals overlap with the test value - this tells us that it is likely our test will not be significant - according to our confidence intervals, the true population mean might include our test value zero which would indicate no real difference.\n\n\n\n\n\n\nKey step\n\n\n\nChange your data filter to compute the one-sample t-test for the ‘High’ SES_Story condition. The test should update once your filter is on without you having to respecify the test.\n\n\n\n\n\n\n\n\n Data Skills - Is the mean position of participants in the ‘High’ condition significantly different to zero?\n\n\n\n\n\nYes, we do have a significant difference - we could report our test as follows\n\nt(74) = -5.35, p &lt; 0.001\n\n\n\n\n\n\n\n\n\n\n Data Skills - Is it valid to use parametric statistics on this data?\n\n\n\n\n\nThe Shapiro Wilk statistic has a p-value of 0.038 which is less than p = 0.05. This suggets that our data are not normally distributed. We should inspect the data in more detail and consider using a non-parametric alternative.\nThe Wilcoxon Rank test is the non-parametric alternative for One Sample t-test. You can add this to the analysis to see if it gives the same result as the parametric test.\n\n\n\n\n\n\n\n\n\n Data Skills - Do the confidence intervals of the estimated mean cross zero?\n\n\n\n\n\nNo - in the ‘High’ condition the confidence intervals of the mean are a long way from zero.\n\n\n\n\n\n\n\n\n\nKey step\n\n\n\nGo back to your notes from the start of the session. Do the results match your predictions about whether a UK data sample would expect a high or low socio-economic status people to live in the north or south of the city?\n\n\n\n\n\n\nFinally - we should make a reproducible version of our analysis using Rj.\n\n\n\n\n\n\nKey step\n\n\n\nOpen a new Rj window and add the following line to load the dplyr library.\nlibrary(dplyr)\n\n\nFirstly, we’ll need to replicate our data filter to select only the ‘High’ or ‘Low’ conditions for our analysis. We covered this in detail last week - if you need a refresher, take a look at the information on selecting rows of data using the filter function from week 2\nLet’s build a filter to select only the ‘High’ condition.\nlibrary(dplyr)\n\nhigh_ses &lt;- filter(data, SES_Story == 'High')\nNext - turn on Jamovi’s syntax mode to display the R code associated with our analyses. This should create some R code at the top of each results block.\n\nWe can right click on this code to copy it before pasting it into the Rj window. Our code should then look like this:\nlibrary(dplyr)\n\nhigh_ses &lt;- filter(data, SES_Story == 'High')\n\njmv::ttestOneS(\n    data = data,\n    vars = NorthSouth_Position,\n    norm = TRUE,\n    plots = TRUE)\nThis command runs the function ttestOneS which computes the One Sample t-test. Jamovi has automatically detected that we want to add the normality test and the descriptive plots and included these options in the function call (see norm=TRUE and plots=TRUE).\nThere is a keyword argument in R for every option in Jamovi - take a look at the jmv library documentation for ttestOneS to see a full list.\nBefore running the code we need to make one adjustment. The function runs on the full dataset data by default but we want to use our new filtered data high_ses instead. Update the function to take in the filtered data as an input.\nlibrary(dplyr)\n\nhigh_ses &lt;- filter(data, SES_Story == 'High')\n\njmv::ttestOneS(\n    data = high_ses,\n    vars = NorthSouth_Position,\n    norm = TRUE,\n    plots = TRUE)\nNow running the code should output result tables that match our previous analysis. Importantly the form of data preprocessing (the filtering) and the test itself are all clearly specified in the code. Making it easier for others to understand what analysis we have run.\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nCan you add a code block to compute the one-sample t-test for only the ‘Low’ SES_Story condition\n\n\nRemember that you’ll need to write a new filter line to create a copy of the dataset with only the ‘Low’ values for SES_Story. You can save this into a variable and pass it in as the data argument to ttestOneS\n\n\nYour final code should look like this:\nlow_ses &lt;- filter(data, SES_Story == 'Low')\n\njmv::ttestOneS(\n    data = low_ses,\n    vars = NorthSouth_Position,\n    norm = TRUE,\n    plots = TRUE)\n\n\n\n\n\nYou can keep adding R code to your script to run multiple analyses at once, this way we can run the t-test for both conditions with out having to go back and forth in Jamovi toggling the data filters on and off.\nIt takes a little more setup but the R code has some big advantages once you get used to it!\n\n\n\nWe’ve done a lot of work to consolidate our skills on filtering data and computing one sample t-tests! You should now be able to compute these tests in Jamovi and create reproducible R code.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 3 - One-Sample T-tests"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-3_one-sample-t-tests.html#the-dataset",
    "href": "tutorials/rmb_week-3_one-sample-t-tests.html#the-dataset",
    "title": "Week 3 : One-Sample t-tests",
    "section": "",
    "text": "Metaphors are often used to help people understand abstract concepts in terms of perceptual experiences. Though this is often useful, it can bias perception and decision making in unexpected ways. For example, North and South are abstract concepts that have a spatial association (north = up, south = down). Participants in the USA have a biased expectation that richer people will live in the north of a city (Meier et al. 2011). However, these expectations are not uniform across all people and cultures and we should not naively generalise this result to all people. A follow up study comparing this effect in participants from the USA and Hong Kong replicated the original effect for American participants but found the opposite effect in people from Hong Kong (Huang, Tse, and Cho 2014).\nThe Many Labs 2 project (Klein et al. 2018) performed an additional replication of this effect across a wide range of countries. Participants were presented with the following map outline of a city:\n\nand asked to indicate where they though a fictional person would live within the city. Participants were shown one of two descriptions of the person.\n\n“Dr. Bennett lives in the city. He is a wealthy businessman who has travelled the world. He inherited a significant amount of money from a Great Aunt, and was educated at the best schools growing up. He enjoys fine dining and going to the theater on weekends.”\n\nOr\n\n“Mr. Bennett lives in the city. He is unemployed. He was born and raised in the city he now calls home. He struggles to pay the rent each month, and dropped out of high school before graduation. He enjoys a good hot dog and a six pack of beers when he can.”\n\nThe first description is a caricature of a person with high Socio-Economic Status (SES) whilst the second is a caricature of someone with a low SES. The hypothesis is that people in the United States and Hong Kong have different demographic knowledge that may shape their metaphoric link between positive association and cardinal direction (north vs. south).",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 3 - One-Sample T-tests"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-3_one-sample-t-tests.html#the-challenge",
    "href": "tutorials/rmb_week-3_one-sample-t-tests.html#the-challenge",
    "title": "Week 3 : One-Sample t-tests",
    "section": "",
    "text": "This week we will use one-sample t-tests to explore whether participants from the UK would expect people with low or high SES to live north or south of the centre of the city.\n\n\n\n\n\n\nA new hypothesis?\n\n\n\nBefore we start, think about what you would predict about participants from the UK. Is there a reason to expect that people in the UK would associate the north of a city with high SES or vice versa?\nMake a note of your answer and the reasons behind it. Note that there isn’t necessarily a correct answer to this question and we won’t ask you for it later.\nIt is good practice to be clear about our predictions and expectations before starting a data analysis.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 3 - One-Sample T-tests"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-3_one-sample-t-tests.html#getting-started-with-descriptive-statistics",
    "href": "tutorials/rmb_week-3_one-sample-t-tests.html#getting-started-with-descriptive-statistics",
    "title": "Week 3 : One-Sample t-tests",
    "section": "",
    "text": "Let’s start by loading the dataset into Jamovi and checking out the data. You can use the file named RMB-2024_computer-practical_huang-2014_country-UK_cond-All.csv.\nThis dataset has several columns of data. The main column of interest is currently named variable. This represents the y-axis position of the persons expectation about where the fictional character would live. A value of zero represents the middle of the city, positive values represent more northern locations and negative values represent more southern locations.\nThe other key variable is named factor. This indicates which group the participant was allocated to. This can be either ‘high’ or ‘low’ depending on whether the participant saw a description of a person with stereotypes of high or low socioeconomic status.\nThis is open-access data and the column names aren’t very informative. It would be better to rename them to something more considered so that we can avoid mistakes later.\n\n\n\n\n\n\nKey step\n\n\n\nRename the following variables using the editor under the ‘Variables’ tab.\n\n‘variable’ should be renamed to ‘NorthSouth_Position’, and\n‘factor’ should be renamed to ‘SES_Story’.\n\nDon’t include any spaces in the new variable names! this can cause an issue later.\n\n\n\nNext, take a look through the data itself. Remember the steps we took in the last couple of weeks. Have a careful scan through the data values and see if you can spot anything that needs to be fixed.\n\n\n\n\n\n\n Data Skills - how many participants are included in the dataset?\n\n\n\n\n\nWe have 136 rows of data observations the spreadsheet.\n\n\n\n\n\n\n\n\n\n Data Skills - what experimental design was used in this experiment?\n\n\n\n\n\nThis is a between-subjects design, though that might not be obvious from the data alone! Checking through the paper methods we can see that each participant was either in the high or low SES condition.\n\n\n\n\n\n\n\n\n\n Data Skills - do we need to tidy up this dataset?\n\n\n\n\n\nNo, in this case the dataset looks very clean. We appear to have data for everyone without any obvious typos or missing information. Looks good to go.\n\n\n\n\n\n\n\n\n\nKey step\n\n\n\nCompute some descriptive statistics on the NorthSouth column. Make sure that you include the standard error of the mean!\nYou can split the descriptive statistics using a second variable. This\n\n\n\nNext, let’s think about what these values can tell us.\n\n\n\n\n\n\n Data Skills - do we have an equal number of data points in each condition?\n\n\n\n\n\nNo, we have 75 participants in the High condition and 61 participants in the Low condition.\n\n\n\n\n\n\n\n\n\n Data Skills - which condition has a wider variation in NorthSouth Positions chosen by participants?\n\n\n\n\n\nWe can see this from the standard deviations. The High condition has a standard deviation of 63.2 and the Low condition has a standard deviation of 77.8.\nThe responses in the Low SES story condition were more variable.\n\n\n\n\n\n\n\n\n\n Data Skills - which condition has a more northern mean position?\n\n\n\n\n\nRecall from the introduction that positive values indicate a position in the north of the city. The High condition has a mean value of -39.0 and the Low condition has a mean value of 18.6\nThe responses in the Low SES story condition were more northern.\n\n\n\n\n\n\n\n\n\n Data Skills - can we tell from the descriptives whether this is a significant difference?\n\n\n\n\n\nNo! remember that descriptive statistics only summarise the data as it is. They cannot tell us whether we would expect what we see in that data to generalise beyond the specific data sample.\n\n\n\n\n\n\n\n\n\n Data Skills - are we more confident in our estimate of the mean for the ‘North’ or ‘South’ condition?\n\n\n\n\n\nThe standard error of the mean tells us how well we think our estimated mean from the data sample represents the ‘true’ population mean.\nThe standard error of the mean for the ‘Low’ group is higher (9.96 vs 7.3 for ‘High’) - indicating that we are less confident that this is a good representation of our population mean. Note that it could still be a good estimate, we’re just relatively less confident than we are for the ‘High’ condition.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 3 - One-Sample T-tests"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-3_one-sample-t-tests.html#reproducible-one-sample-t-tests",
    "href": "tutorials/rmb_week-3_one-sample-t-tests.html#reproducible-one-sample-t-tests",
    "title": "Week 3 : One-Sample t-tests",
    "section": "",
    "text": "Finally - we should make a reproducible version of our analysis using Rj.\n\n\n\n\n\n\nKey step\n\n\n\nOpen a new Rj window and add the following line to load the dplyr library.\nlibrary(dplyr)\n\n\nFirstly, we’ll need to replicate our data filter to select only the ‘High’ or ‘Low’ conditions for our analysis. We covered this in detail last week - if you need a refresher, take a look at the information on selecting rows of data using the filter function from week 2\nLet’s build a filter to select only the ‘High’ condition.\nlibrary(dplyr)\n\nhigh_ses &lt;- filter(data, SES_Story == 'High')\nNext - turn on Jamovi’s syntax mode to display the R code associated with our analyses. This should create some R code at the top of each results block.\n\nWe can right click on this code to copy it before pasting it into the Rj window. Our code should then look like this:\nlibrary(dplyr)\n\nhigh_ses &lt;- filter(data, SES_Story == 'High')\n\njmv::ttestOneS(\n    data = data,\n    vars = NorthSouth_Position,\n    norm = TRUE,\n    plots = TRUE)\nThis command runs the function ttestOneS which computes the One Sample t-test. Jamovi has automatically detected that we want to add the normality test and the descriptive plots and included these options in the function call (see norm=TRUE and plots=TRUE).\nThere is a keyword argument in R for every option in Jamovi - take a look at the jmv library documentation for ttestOneS to see a full list.\nBefore running the code we need to make one adjustment. The function runs on the full dataset data by default but we want to use our new filtered data high_ses instead. Update the function to take in the filtered data as an input.\nlibrary(dplyr)\n\nhigh_ses &lt;- filter(data, SES_Story == 'High')\n\njmv::ttestOneS(\n    data = high_ses,\n    vars = NorthSouth_Position,\n    norm = TRUE,\n    plots = TRUE)\nNow running the code should output result tables that match our previous analysis. Importantly the form of data preprocessing (the filtering) and the test itself are all clearly specified in the code. Making it easier for others to understand what analysis we have run.\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nCan you add a code block to compute the one-sample t-test for only the ‘Low’ SES_Story condition\n\n\nRemember that you’ll need to write a new filter line to create a copy of the dataset with only the ‘Low’ values for SES_Story. You can save this into a variable and pass it in as the data argument to ttestOneS\n\n\nYour final code should look like this:\nlow_ses &lt;- filter(data, SES_Story == 'Low')\n\njmv::ttestOneS(\n    data = low_ses,\n    vars = NorthSouth_Position,\n    norm = TRUE,\n    plots = TRUE)\n\n\n\n\n\nYou can keep adding R code to your script to run multiple analyses at once, this way we can run the t-test for both conditions with out having to go back and forth in Jamovi toggling the data filters on and off.\nIt takes a little more setup but the R code has some big advantages once you get used to it!",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 3 - One-Sample T-tests"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-3_one-sample-t-tests.html#data-filters-in-jamovi",
    "href": "tutorials/rmb_week-3_one-sample-t-tests.html#data-filters-in-jamovi",
    "title": "Week 3 : One-Sample t-tests",
    "section": "",
    "text": "Next, we’re going to ask whether the participants in the either the High or Low SES conditions had a preference towards locating our fictional character in the North or South of the city. This is our one-sample t-test. The NorthSouth_Position is our data variable and the centre point of the city is the comparison value.\nFirst, we need to split out the data so that we can run the t-test using either the Low or High SES conditions, not using both mixed together.\nWe can do this in Jamovi using a ‘Filter’. Jamovi provides some great documentation on data filters on their website. Take a few minutes and read through the info on ‘Row Filters’ on this page.\nThe most important thing about filters is that they are reversible. We can apply a filter to run an analysis on a subset of the data without actually changing the dataset itself. This means we could make several different filters and turn them on and off to repeat the same analyses on different sections of the dataset. Convenient!\n\n\n\n\n\n\nKey step\n\n\n\nFollowing the guidance on the Jamovi documentation on data filters, create a filter to select ONLY the participants who heard the low SES story.\nThe result should exclude the first 75 rows from your dataset, you can confirm this by looking at the ticks and crosses in the ‘Filter’ column, and by inspecting the values in the very bottom of the window.\n\n\n\nNote that your analyses in results windows will automatically update when you apply a filter to the data. With the filter applied, you will only see the descriptive statistics for the ‘Low’ SES_Story groups.\nIf you click the ‘active’ toggle in the ‘Filter’ window you can turn the filter off and your analysis will return to its initial state.\n\n\n\n\n\n\nKey step\n\n\n\nWith your first Filter turned OFF, create a filter to select ONLY the participants who heard the High SES story.\nThe result should now exclude the last 61 rows from your dataset.\n You can turn your filters on and off to see how this changes the data available for the analysis, though turning both filters on will exclude all the data in this case…",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 3 - One-Sample T-tests"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-3_one-sample-t-tests.html#one-sample-t-tests",
    "href": "tutorials/rmb_week-3_one-sample-t-tests.html#one-sample-t-tests",
    "title": "Week 3 : One-Sample t-tests",
    "section": "",
    "text": "Now we’re ready to test our hypothesis! remember that the equation for a one-sample t-test is the following:\n\\[\nt = \\frac{\\text{The sample mean} - \\text{Comparison Value}}{\\text{The standard error of the mean}}\n\\]\nWe’re looking at the difference between our observed mean and a comparison value as a ratio to the precision to which we have estimated our observed mean.\nOur descriptive statistics output contains the mean and standard error of the mean for both groups. Our comparison value is the centre of the city, indicated by a score of 0 (zero).\nWe all the values required for a one-sample t-test already in the descriptive statistics! For the ‘Low’ SES_Story condition, we have:\n\nGroup Mean = 18.6\nComparison Value = 0\nStandard error of the mean = 9.96\n\nSo, the one sample t-test value is:\n\\[\nt = \\frac{18.6 - 0}{9.96} = 1.867\n\\]\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nCan you compute the t-value for the High SES Story group using a calculator or Rj?\n\n\nFirst, get the three values that you’ll need for the computation. These are the comparison value and the mean and standard error of the mean for the High SES group.\n\n\nThe individual values are\n\nGroup Mean = -39.0\nComparison Value = 0\nStandard error of the mean = 7.30\n\nso the t-value is\n\\[\nt = \\frac{-39.0 - 0}{7.30} = -5.342\n\\]",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 3 - One-Sample T-tests"
    ]
  },
  {
    "objectID": "tutorials/frequently-asked-questions.html",
    "href": "tutorials/frequently-asked-questions.html",
    "title": "Frequently Asked Questions",
    "section": "",
    "text": "First check the start menu, if you can find both Jamovi and Rstudio then just open both from there and get started. Any programme that is not in the start menu can be opened using AppsAnywhere. This is available in the start menu of every campus computer – general information about AppsAnywhere can be found on this IT services page\n\n\n\nThis should be available as an icon on the desktop, or from within the start menu. If not, they you can try the web interface - https://apps.bham.ac.uk/ . The website may ask you to confirm that AppsAnywhere is installed on your device – you can click ‘I have it already’ if using a campus computer.\n\n\n\nOnce you have access to AppsAnywhere, you may have to log-in using your UoB credentials. The homepage of AppsAnywhere contains a search bar and will look something like this:\n\nYou can search for Jamovi and Rstudio in the search bar and click ‘Launch’ to run them. If this is the first time you’re running the app it may take a few minutes to get started. This is as AppsAnywhere is downloading and installing the programme on your computer.\n\n\n\nAppyAnywhere needs to be able to link to your desktop computer to run properly, the validation process ensures that this is working properly. Normally all you need to do is click to start validation and answer ‘Open AppsAnywhere Launcher’ when prompted by the browser.",
    "crumbs": [
      "Home",
      "Support",
      "FAQs"
    ]
  },
  {
    "objectID": "tutorials/frequently-asked-questions.html#i-cant-find-jamovirstudio-on-my-campus-computer.",
    "href": "tutorials/frequently-asked-questions.html#i-cant-find-jamovirstudio-on-my-campus-computer.",
    "title": "Frequently Asked Questions",
    "section": "",
    "text": "First check the start menu, if you can find both Jamovi and Rstudio then just open both from there and get started. Any programme that is not in the start menu can be opened using AppsAnywhere. This is available in the start menu of every campus computer – general information about AppsAnywhere can be found on this IT services page",
    "crumbs": [
      "Home",
      "Support",
      "FAQs"
    ]
  },
  {
    "objectID": "tutorials/frequently-asked-questions.html#i-cant-find-appsanywhere-on-my-campus-computer.",
    "href": "tutorials/frequently-asked-questions.html#i-cant-find-appsanywhere-on-my-campus-computer.",
    "title": "Frequently Asked Questions",
    "section": "",
    "text": "This should be available as an icon on the desktop, or from within the start menu. If not, they you can try the web interface - https://apps.bham.ac.uk/ . The website may ask you to confirm that AppsAnywhere is installed on your device – you can click ‘I have it already’ if using a campus computer.",
    "crumbs": [
      "Home",
      "Support",
      "FAQs"
    ]
  },
  {
    "objectID": "tutorials/frequently-asked-questions.html#how-do-i-use-appsanywhere",
    "href": "tutorials/frequently-asked-questions.html#how-do-i-use-appsanywhere",
    "title": "Frequently Asked Questions",
    "section": "",
    "text": "Once you have access to AppsAnywhere, you may have to log-in using your UoB credentials. The homepage of AppsAnywhere contains a search bar and will look something like this:\n\nYou can search for Jamovi and Rstudio in the search bar and click ‘Launch’ to run them. If this is the first time you’re running the app it may take a few minutes to get started. This is as AppsAnywhere is downloading and installing the programme on your computer.",
    "crumbs": [
      "Home",
      "Support",
      "FAQs"
    ]
  },
  {
    "objectID": "tutorials/frequently-asked-questions.html#appsanywhere-keeps-asking-me-about-validation-and-i-dont-know-what-to-do.",
    "href": "tutorials/frequently-asked-questions.html#appsanywhere-keeps-asking-me-about-validation-and-i-dont-know-what-to-do.",
    "title": "Frequently Asked Questions",
    "section": "",
    "text": "AppyAnywhere needs to be able to link to your desktop computer to run properly, the validation process ensures that this is working properly. Normally all you need to do is click to start validation and answer ‘Open AppsAnywhere Launcher’ when prompted by the browser.",
    "crumbs": [
      "Home",
      "Support",
      "FAQs"
    ]
  },
  {
    "objectID": "tutorials/frequently-asked-questions.html#appsanywhere-keeps-asking-me-about-validation.",
    "href": "tutorials/frequently-asked-questions.html#appsanywhere-keeps-asking-me-about-validation.",
    "title": "Frequently Asked Questions",
    "section": "",
    "text": "AppyAnywhere needs to be able to link to your desktop computer to run properly, the validation process ensures that this is working properly. Normally all you need to do is click to start validation and answer ‘Open AppsAnywhere Launcher’ when prompted by the browser.",
    "crumbs": [
      "Home",
      "Support",
      "FAQs"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-3_one-sample-t-tests.html#one-sample-t-tests-in-jamovi",
    "href": "tutorials/rmb_week-3_one-sample-t-tests.html#one-sample-t-tests-in-jamovi",
    "title": "Week 3 : One-Sample t-tests",
    "section": "",
    "text": "Key step\n\n\n\nBefore going any further - make sure that your data filter is set to include only the data from the ‘Low’ SES_Story condition.\n\n\nOf course, we will normally compute the t-test using Jamovi as rather than relying on hand calculations. We can do this by opening the ‘One Sample T-Test’ option under the ‘Analysis -&gt; T-Tests’ menu on the top ribbon.\nOpen the One Sample T-Test option now, and drag the NorthSouth_Position variable over to the ‘dependent variables’ box. The result should appear on the right hand side. Before we inspect the result, we should check and add a number of important options to our analysis.\n\n\nHypothesis - test value it is critical that we select the correct hypothesis or our test will be meaningless. Our ‘test value’, also known as a ‘comparison value’, is set to zero by default. This is correct for our analysis but may need setting to something else for other analyses. Take care to check it makes sense each time.\nHypothesis - test tail we can also specify whether we’re going to perform a one- or two-tailed test. Here we want to specify a two-tailed test in which the mean does not equal the test value.\nAssumption Checks we should add a test to check that our data are normally distributed. Selecting the ‘Normality test’ box will compute a Shapio-Wilks statistic for you\nAdditional Statistics there are a number of important options here. For now, add the ‘Descriptive plots’ option to your analysis. This will show us a visualisation of the estimated mean and its confidence intervals.\n\nLet’s take a look at the outputs, first the t-test table.\n\nThis contains the information we need to report our t-test: the t-value, the degrees of freedom and the p-value.\n\nt(60) = 1.87, p = 0.066\n\nThis t-value should match the number you computed by hand earlier on. Note that the footnote of the table reminds us of the hypothesis that we specified. Make sure that this matches what you expect!\nNext, the normality check:\n\nThis reports the Shapiro-Wilk W statistic and associated p-value. In this case the p-value is not significant which indicates that the data are normally distributed and we’re happy to go ahead with the parametric t-test.\nNext, the descriptives plot:\n\nThis is a really useful visualisation of our test. We can see the mean of the data (black dot) and the test value (dotted line). We also have the 95% confidence intervals of the estimated mean. We can see that the confidence intervals overlap with the test value - this tells us that it is likely our test will not be significant - according to our confidence intervals, the true population mean might include our test value zero which would indicate no real difference.\n\n\n\n\n\n\nKey step\n\n\n\nChange your data filter to compute the one-sample t-test for the ‘High’ SES_Story condition. The test should update once your filter is on without you having to respecify the test.\n\n\n\n\n\n\n\n\n Data Skills - Is the mean position of participants in the ‘High’ condition significantly different to zero?\n\n\n\n\n\nYes, we do have a significant difference - we could report our test as follows\n\nt(74) = -5.35, p &lt; 0.001\n\n\n\n\n\n\n\n\n\n\n Data Skills - Is it valid to use parametric statistics on this data?\n\n\n\n\n\nThe Shapiro Wilk statistic has a p-value of 0.038 which is less than p = 0.05. This suggets that our data are not normally distributed. We should inspect the data in more detail and consider using a non-parametric alternative.\nThe Wilcoxon Rank test is the non-parametric alternative for One Sample t-test. You can add this to the analysis to see if it gives the same result as the parametric test.\n\n\n\n\n\n\n\n\n\n Data Skills - Do the confidence intervals of the estimated mean cross zero?\n\n\n\n\n\nNo - in the ‘High’ condition the confidence intervals of the mean are a long way from zero.\n\n\n\n\n\n\n\n\n\nKey step\n\n\n\nGo back to your notes from the start of the session. Do the results match your predictions about whether a UK data sample would expect a high or low socio-economic status people to live in the north or south of the city?",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 3 - One-Sample T-tests"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-3_one-sample-t-tests.html#summary",
    "href": "tutorials/rmb_week-3_one-sample-t-tests.html#summary",
    "title": "Week 3 : One-Sample t-tests",
    "section": "",
    "text": "We’ve done a lot of work to consolidate our skills on filtering data and computing one sample t-tests! You should now be able to compute these tests in Jamovi and create reproducible R code.",
    "crumbs": [
      "Home",
      "Research Methods B",
      "Week 3 - One-Sample T-tests"
    ]
  },
  {
    "objectID": "tutorials/rmb_week-4_two-sample-t-tests.html",
    "href": "tutorials/rmb_week-4_two-sample-t-tests.html",
    "title": "Research Methods",
    "section": "",
    "text": "Ok, back to statistics! How can we use our new R skills to compute statistics?\nThe trick is to understand that all the analyses in Jamovi are actually carried out by functions in R. Each analysis we can select from the top ribbon in Jamovi corresponds to a function that can be called in the code. Similarly, all of the options that we select in the analysis, dialogue boxes, correspond to arguments for that function. Let’s take a look in practice.\nTo help understand this Jamovi provides an “R Syntax Mode”, in this mode, Jamovi produces equivalent R code for each analysis. To change to syntax mode, select the application menu (⋮) at the top right of Jamovi, and check the Syntax mode checkbox there. You can find more information on Jamovi’s documentation on Syntax Mode.\nNotice that some R code has appeared at the top of the output table. This is relatively complex compared to our previous functions like print or sqrt. Let’s break it down a bit.\n\n\n\n\n\n\nData Skills - Understanding the descriptives function\n\n\n\nThis is the code that Jamovi’s syntax mode will produce (with a little formatting to make the appearance simpler). Take a look through each part to understand what it does. Click the number in the annotation to highlight the corresponding part of the code.\n1jmv::descriptives(\n2    data = data,\n3    vars = vars(Openness, Conscientiousness, Extraversion, Agreeableness, Neuroticism)\n    )\n\n1\n\nThis is the name of the function that will do the computation for us. Everything contained within these parentheses are known as arguments, or inputs, for the function\n\n2\n\nThe first input is named data and is assigned to be the special data variable that contains the data loaded into our spreadsheet.\n\n3\n\nThe second input is a list of the data columns in our spreadsheet that we want to compute descriptives from.\n\n\n\n\nThere is a lot of information here that might be hard to understand at first. Try changing the analysis options using the Jamovi buttons and watch what happens to the R syntax. In particular, try adding and removing different variables to the analysis.\n\n\n\n\n\n\nKey step\n\n\n\nOnce you’re ready, you can right click on this R syntax and click ‘Copy’ to copy it to your clipboard.\n\nand pasting it into an Rj window - now you can click run to reproduce your descriptive statistics table using the underlying R code.\n\n\nGreat - well done on completing your first data analysis using R code! You should have the following output that will match the descriptives you’ve seen in the main Jamovi window.\n\nHead back over to the Jamovi descriptives tab and try updating your analysis. You could change the variables that you are computing the descriptive statistics from, add in some extra metrics (such as the Skewness or Shapiro-Wilk) or even generate a plot like a histogram.\nNote that the R code in the syntax box of the output will stay up to date with your changes. Pay attention to how the function updates when you select different options.\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat is the R code required to compute descriptive statistics from the Openness and Conscientiousness variables, whilst including the Skewness metric, the Shapiro-Wilk statistic and a histogram?\nCan you run this analysis in Rj?\n\n\nRemember that the R code in the syntax mode will update as you define your analysis in Jamovi. Get the analysis right there and you can simply copy over the code.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final code should look like this\njmv::descriptives(\n    data = data,\n    vars = vars(Openness, Conscientiousness),\n    hist = TRUE,\n    skew = TRUE,\n    sw = TRUE)"
  },
  {
    "objectID": "tutorials/rmb_week-4_two-sample-t-tests.html#compute-descriptive-statistics-with-r-in-rj",
    "href": "tutorials/rmb_week-4_two-sample-t-tests.html#compute-descriptive-statistics-with-r-in-rj",
    "title": "Research Methods",
    "section": "",
    "text": "Ok, back to statistics! How can we use our new R skills to compute statistics?\nThe trick is to understand that all the analyses in Jamovi are actually carried out by functions in R. Each analysis we can select from the top ribbon in Jamovi corresponds to a function that can be called in the code. Similarly, all of the options that we select in the analysis, dialogue boxes, correspond to arguments for that function. Let’s take a look in practice.\nTo help understand this Jamovi provides an “R Syntax Mode”, in this mode, Jamovi produces equivalent R code for each analysis. To change to syntax mode, select the application menu (⋮) at the top right of Jamovi, and check the Syntax mode checkbox there. You can find more information on Jamovi’s documentation on Syntax Mode.\nNotice that some R code has appeared at the top of the output table. This is relatively complex compared to our previous functions like print or sqrt. Let’s break it down a bit.\n\n\n\n\n\n\nData Skills - Understanding the descriptives function\n\n\n\nThis is the code that Jamovi’s syntax mode will produce (with a little formatting to make the appearance simpler). Take a look through each part to understand what it does. Click the number in the annotation to highlight the corresponding part of the code.\n1jmv::descriptives(\n2    data = data,\n3    vars = vars(Openness, Conscientiousness, Extraversion, Agreeableness, Neuroticism)\n    )\n\n1\n\nThis is the name of the function that will do the computation for us. Everything contained within these parentheses are known as arguments, or inputs, for the function\n\n2\n\nThe first input is named data and is assigned to be the special data variable that contains the data loaded into our spreadsheet.\n\n3\n\nThe second input is a list of the data columns in our spreadsheet that we want to compute descriptives from.\n\n\n\n\nThere is a lot of information here that might be hard to understand at first. Try changing the analysis options using the Jamovi buttons and watch what happens to the R syntax. In particular, try adding and removing different variables to the analysis.\n\n\n\n\n\n\nKey step\n\n\n\nOnce you’re ready, you can right click on this R syntax and click ‘Copy’ to copy it to your clipboard.\n\nand pasting it into an Rj window - now you can click run to reproduce your descriptive statistics table using the underlying R code.\n\n\nGreat - well done on completing your first data analysis using R code! You should have the following output that will match the descriptives you’ve seen in the main Jamovi window.\n\nHead back over to the Jamovi descriptives tab and try updating your analysis. You could change the variables that you are computing the descriptive statistics from, add in some extra metrics (such as the Skewness or Shapiro-Wilk) or even generate a plot like a histogram.\nNote that the R code in the syntax box of the output will stay up to date with your changes. Pay attention to how the function updates when you select different options.\n\n\n\n\n\n\n\nCheck Your Understanding\n\n\n\n\nQuestionHintSolution\n\n\nWhat is the R code required to compute descriptive statistics from the Openness and Conscientiousness variables, whilst including the Skewness metric, the Shapiro-Wilk statistic and a histogram?\nCan you run this analysis in Rj?\n\n\nRemember that the R code in the syntax mode will update as you define your analysis in Jamovi. Get the analysis right there and you can simply copy over the code.\nTalk to your tutor if you’re getting stuck.\n\n\nThe final code should look like this\njmv::descriptives(\n    data = data,\n    vars = vars(Openness, Conscientiousness),\n    hist = TRUE,\n    skew = TRUE,\n    sw = TRUE)"
  }
]